//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BFM.Server.DataAsset.DAService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://fanuc.com.cn/", ConfigurationName="DAService.IDAService")]
    public interface IDAService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAMachineRealTimeInfoByPage", ReplyAction="http://fanuc.com.cn/IDAService/GetDAMachineRealTimeInfoByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.DAMachineRealTimeInfo> GetDAMachineRealTimeInfoByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAMachineRealTimeInfoByPage", ReplyAction="http://fanuc.com.cn/IDAService/GetDAMachineRealTimeInfoByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.DAMachineRealTimeInfo>> GetDAMachineRealTimeInfoByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAMachineRealTimeInfoCount", ReplyAction="http://fanuc.com.cn/IDAService/GetDAMachineRealTimeInfoCountResponse")]
        int GetDAMachineRealTimeInfoCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAMachineRealTimeInfoCount", ReplyAction="http://fanuc.com.cn/IDAService/GetDAMachineRealTimeInfoCountResponse")]
        System.Threading.Tasks.Task<int> GetDAMachineRealTimeInfoCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/AddDAMachineRealTimeInfo", ReplyAction="http://fanuc.com.cn/IDAService/AddDAMachineRealTimeInfoResponse")]
        bool AddDAMachineRealTimeInfo(BFM.ContractModel.DAMachineRealTimeInfo mDAMachineRealTimeInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/AddDAMachineRealTimeInfo", ReplyAction="http://fanuc.com.cn/IDAService/AddDAMachineRealTimeInfoResponse")]
        System.Threading.Tasks.Task<bool> AddDAMachineRealTimeInfoAsync(BFM.ContractModel.DAMachineRealTimeInfo mDAMachineRealTimeInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/UpdateDAMachineRealTimeInfo", ReplyAction="http://fanuc.com.cn/IDAService/UpdateDAMachineRealTimeInfoResponse")]
        bool UpdateDAMachineRealTimeInfo(BFM.ContractModel.DAMachineRealTimeInfo mDAMachineRealTimeInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/UpdateDAMachineRealTimeInfo", ReplyAction="http://fanuc.com.cn/IDAService/UpdateDAMachineRealTimeInfoResponse")]
        System.Threading.Tasks.Task<bool> UpdateDAMachineRealTimeInfoAsync(BFM.ContractModel.DAMachineRealTimeInfo mDAMachineRealTimeInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/DelDAMachineRealTimeInfos", ReplyAction="http://fanuc.com.cn/IDAService/DelDAMachineRealTimeInfosResponse")]
        bool DelDAMachineRealTimeInfos(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/DelDAMachineRealTimeInfos", ReplyAction="http://fanuc.com.cn/IDAService/DelDAMachineRealTimeInfosResponse")]
        System.Threading.Tasks.Task<bool> DelDAMachineRealTimeInfosAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/DelDAMachineRealTimeInfo", ReplyAction="http://fanuc.com.cn/IDAService/DelDAMachineRealTimeInfoResponse")]
        bool DelDAMachineRealTimeInfo(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/DelDAMachineRealTimeInfo", ReplyAction="http://fanuc.com.cn/IDAService/DelDAMachineRealTimeInfoResponse")]
        System.Threading.Tasks.Task<bool> DelDAMachineRealTimeInfoAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAMachineRealTimeInfos", ReplyAction="http://fanuc.com.cn/IDAService/GetDAMachineRealTimeInfosResponse")]
        System.Collections.Generic.List<BFM.ContractModel.DAMachineRealTimeInfo> GetDAMachineRealTimeInfos(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAMachineRealTimeInfos", ReplyAction="http://fanuc.com.cn/IDAService/GetDAMachineRealTimeInfosResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.DAMachineRealTimeInfo>> GetDAMachineRealTimeInfosAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAMachineRealTimeInfoById", ReplyAction="http://fanuc.com.cn/IDAService/GetDAMachineRealTimeInfoByIdResponse")]
        BFM.ContractModel.DAMachineRealTimeInfo GetDAMachineRealTimeInfoById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAMachineRealTimeInfoById", ReplyAction="http://fanuc.com.cn/IDAService/GetDAMachineRealTimeInfoByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.DAMachineRealTimeInfo> GetDAMachineRealTimeInfoByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAProductRecordByPage", ReplyAction="http://fanuc.com.cn/IDAService/GetDAProductRecordByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.DAProductRecord> GetDAProductRecordByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAProductRecordByPage", ReplyAction="http://fanuc.com.cn/IDAService/GetDAProductRecordByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.DAProductRecord>> GetDAProductRecordByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAProductRecordCount", ReplyAction="http://fanuc.com.cn/IDAService/GetDAProductRecordCountResponse")]
        int GetDAProductRecordCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAProductRecordCount", ReplyAction="http://fanuc.com.cn/IDAService/GetDAProductRecordCountResponse")]
        System.Threading.Tasks.Task<int> GetDAProductRecordCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/AddDAProductRecord", ReplyAction="http://fanuc.com.cn/IDAService/AddDAProductRecordResponse")]
        bool AddDAProductRecord(BFM.ContractModel.DAProductRecord mDAProductRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/AddDAProductRecord", ReplyAction="http://fanuc.com.cn/IDAService/AddDAProductRecordResponse")]
        System.Threading.Tasks.Task<bool> AddDAProductRecordAsync(BFM.ContractModel.DAProductRecord mDAProductRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/UpdateDAProductRecord", ReplyAction="http://fanuc.com.cn/IDAService/UpdateDAProductRecordResponse")]
        bool UpdateDAProductRecord(BFM.ContractModel.DAProductRecord mDAProductRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/UpdateDAProductRecord", ReplyAction="http://fanuc.com.cn/IDAService/UpdateDAProductRecordResponse")]
        System.Threading.Tasks.Task<bool> UpdateDAProductRecordAsync(BFM.ContractModel.DAProductRecord mDAProductRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/DelDAProductRecords", ReplyAction="http://fanuc.com.cn/IDAService/DelDAProductRecordsResponse")]
        bool DelDAProductRecords(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/DelDAProductRecords", ReplyAction="http://fanuc.com.cn/IDAService/DelDAProductRecordsResponse")]
        System.Threading.Tasks.Task<bool> DelDAProductRecordsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/DelDAProductRecord", ReplyAction="http://fanuc.com.cn/IDAService/DelDAProductRecordResponse")]
        bool DelDAProductRecord(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/DelDAProductRecord", ReplyAction="http://fanuc.com.cn/IDAService/DelDAProductRecordResponse")]
        System.Threading.Tasks.Task<bool> DelDAProductRecordAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAProductRecords", ReplyAction="http://fanuc.com.cn/IDAService/GetDAProductRecordsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.DAProductRecord> GetDAProductRecords(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAProductRecords", ReplyAction="http://fanuc.com.cn/IDAService/GetDAProductRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.DAProductRecord>> GetDAProductRecordsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAProductRecordById", ReplyAction="http://fanuc.com.cn/IDAService/GetDAProductRecordByIdResponse")]
        BFM.ContractModel.DAProductRecord GetDAProductRecordById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAProductRecordById", ReplyAction="http://fanuc.com.cn/IDAService/GetDAProductRecordByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.DAProductRecord> GetDAProductRecordByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAAlarmRecordByPage", ReplyAction="http://fanuc.com.cn/IDAService/GetDAAlarmRecordByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.DAAlarmRecord> GetDAAlarmRecordByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAAlarmRecordByPage", ReplyAction="http://fanuc.com.cn/IDAService/GetDAAlarmRecordByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.DAAlarmRecord>> GetDAAlarmRecordByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAAlarmRecordCount", ReplyAction="http://fanuc.com.cn/IDAService/GetDAAlarmRecordCountResponse")]
        int GetDAAlarmRecordCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAAlarmRecordCount", ReplyAction="http://fanuc.com.cn/IDAService/GetDAAlarmRecordCountResponse")]
        System.Threading.Tasks.Task<int> GetDAAlarmRecordCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/AddDAAlarmRecord", ReplyAction="http://fanuc.com.cn/IDAService/AddDAAlarmRecordResponse")]
        bool AddDAAlarmRecord(BFM.ContractModel.DAAlarmRecord mDAAlarmRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/AddDAAlarmRecord", ReplyAction="http://fanuc.com.cn/IDAService/AddDAAlarmRecordResponse")]
        System.Threading.Tasks.Task<bool> AddDAAlarmRecordAsync(BFM.ContractModel.DAAlarmRecord mDAAlarmRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/UpdateDAAlarmRecord", ReplyAction="http://fanuc.com.cn/IDAService/UpdateDAAlarmRecordResponse")]
        bool UpdateDAAlarmRecord(BFM.ContractModel.DAAlarmRecord mDAAlarmRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/UpdateDAAlarmRecord", ReplyAction="http://fanuc.com.cn/IDAService/UpdateDAAlarmRecordResponse")]
        System.Threading.Tasks.Task<bool> UpdateDAAlarmRecordAsync(BFM.ContractModel.DAAlarmRecord mDAAlarmRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/DelDAAlarmRecords", ReplyAction="http://fanuc.com.cn/IDAService/DelDAAlarmRecordsResponse")]
        bool DelDAAlarmRecords(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/DelDAAlarmRecords", ReplyAction="http://fanuc.com.cn/IDAService/DelDAAlarmRecordsResponse")]
        System.Threading.Tasks.Task<bool> DelDAAlarmRecordsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/DelDAAlarmRecord", ReplyAction="http://fanuc.com.cn/IDAService/DelDAAlarmRecordResponse")]
        bool DelDAAlarmRecord(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/DelDAAlarmRecord", ReplyAction="http://fanuc.com.cn/IDAService/DelDAAlarmRecordResponse")]
        System.Threading.Tasks.Task<bool> DelDAAlarmRecordAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAAlarmRecords", ReplyAction="http://fanuc.com.cn/IDAService/GetDAAlarmRecordsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.DAAlarmRecord> GetDAAlarmRecords(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAAlarmRecords", ReplyAction="http://fanuc.com.cn/IDAService/GetDAAlarmRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.DAAlarmRecord>> GetDAAlarmRecordsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAAlarmRecordById", ReplyAction="http://fanuc.com.cn/IDAService/GetDAAlarmRecordByIdResponse")]
        BFM.ContractModel.DAAlarmRecord GetDAAlarmRecordById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAAlarmRecordById", ReplyAction="http://fanuc.com.cn/IDAService/GetDAAlarmRecordByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.DAAlarmRecord> GetDAAlarmRecordByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAStatusRecordByPage", ReplyAction="http://fanuc.com.cn/IDAService/GetDAStatusRecordByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.DAStatusRecord> GetDAStatusRecordByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAStatusRecordByPage", ReplyAction="http://fanuc.com.cn/IDAService/GetDAStatusRecordByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.DAStatusRecord>> GetDAStatusRecordByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAStatusRecordCount", ReplyAction="http://fanuc.com.cn/IDAService/GetDAStatusRecordCountResponse")]
        int GetDAStatusRecordCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAStatusRecordCount", ReplyAction="http://fanuc.com.cn/IDAService/GetDAStatusRecordCountResponse")]
        System.Threading.Tasks.Task<int> GetDAStatusRecordCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/AddDAStatusRecord", ReplyAction="http://fanuc.com.cn/IDAService/AddDAStatusRecordResponse")]
        bool AddDAStatusRecord(BFM.ContractModel.DAStatusRecord mDAStatusRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/AddDAStatusRecord", ReplyAction="http://fanuc.com.cn/IDAService/AddDAStatusRecordResponse")]
        System.Threading.Tasks.Task<bool> AddDAStatusRecordAsync(BFM.ContractModel.DAStatusRecord mDAStatusRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/UpdateDAStatusRecord", ReplyAction="http://fanuc.com.cn/IDAService/UpdateDAStatusRecordResponse")]
        bool UpdateDAStatusRecord(BFM.ContractModel.DAStatusRecord mDAStatusRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/UpdateDAStatusRecord", ReplyAction="http://fanuc.com.cn/IDAService/UpdateDAStatusRecordResponse")]
        System.Threading.Tasks.Task<bool> UpdateDAStatusRecordAsync(BFM.ContractModel.DAStatusRecord mDAStatusRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/DelDAStatusRecords", ReplyAction="http://fanuc.com.cn/IDAService/DelDAStatusRecordsResponse")]
        bool DelDAStatusRecords(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/DelDAStatusRecords", ReplyAction="http://fanuc.com.cn/IDAService/DelDAStatusRecordsResponse")]
        System.Threading.Tasks.Task<bool> DelDAStatusRecordsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/DelDAStatusRecord", ReplyAction="http://fanuc.com.cn/IDAService/DelDAStatusRecordResponse")]
        bool DelDAStatusRecord(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/DelDAStatusRecord", ReplyAction="http://fanuc.com.cn/IDAService/DelDAStatusRecordResponse")]
        System.Threading.Tasks.Task<bool> DelDAStatusRecordAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAStatusRecords", ReplyAction="http://fanuc.com.cn/IDAService/GetDAStatusRecordsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.DAStatusRecord> GetDAStatusRecords(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAStatusRecords", ReplyAction="http://fanuc.com.cn/IDAService/GetDAStatusRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.DAStatusRecord>> GetDAStatusRecordsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAStatusRecordById", ReplyAction="http://fanuc.com.cn/IDAService/GetDAStatusRecordByIdResponse")]
        BFM.ContractModel.DAStatusRecord GetDAStatusRecordById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IDAService/GetDAStatusRecordById", ReplyAction="http://fanuc.com.cn/IDAService/GetDAStatusRecordByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.DAStatusRecord> GetDAStatusRecordByIdAsync(string Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDAServiceChannel : BFM.Server.DataAsset.DAService.IDAService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DAServiceClient : System.ServiceModel.ClientBase<BFM.Server.DataAsset.DAService.IDAService>, BFM.Server.DataAsset.DAService.IDAService {
        
        public DAServiceClient() {
        }
        
        public DAServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DAServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DAServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DAServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.DAMachineRealTimeInfo> GetDAMachineRealTimeInfoByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetDAMachineRealTimeInfoByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.DAMachineRealTimeInfo>> GetDAMachineRealTimeInfoByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetDAMachineRealTimeInfoByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetDAMachineRealTimeInfoCount(string sWhere) {
            return base.Channel.GetDAMachineRealTimeInfoCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetDAMachineRealTimeInfoCountAsync(string sWhere) {
            return base.Channel.GetDAMachineRealTimeInfoCountAsync(sWhere);
        }
        
        public bool AddDAMachineRealTimeInfo(BFM.ContractModel.DAMachineRealTimeInfo mDAMachineRealTimeInfo) {
            return base.Channel.AddDAMachineRealTimeInfo(mDAMachineRealTimeInfo);
        }
        
        public System.Threading.Tasks.Task<bool> AddDAMachineRealTimeInfoAsync(BFM.ContractModel.DAMachineRealTimeInfo mDAMachineRealTimeInfo) {
            return base.Channel.AddDAMachineRealTimeInfoAsync(mDAMachineRealTimeInfo);
        }
        
        public bool UpdateDAMachineRealTimeInfo(BFM.ContractModel.DAMachineRealTimeInfo mDAMachineRealTimeInfo) {
            return base.Channel.UpdateDAMachineRealTimeInfo(mDAMachineRealTimeInfo);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateDAMachineRealTimeInfoAsync(BFM.ContractModel.DAMachineRealTimeInfo mDAMachineRealTimeInfo) {
            return base.Channel.UpdateDAMachineRealTimeInfoAsync(mDAMachineRealTimeInfo);
        }
        
        public bool DelDAMachineRealTimeInfos(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelDAMachineRealTimeInfos(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelDAMachineRealTimeInfosAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelDAMachineRealTimeInfosAsync(Ids);
        }
        
        public bool DelDAMachineRealTimeInfo(string Id) {
            return base.Channel.DelDAMachineRealTimeInfo(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelDAMachineRealTimeInfoAsync(string Id) {
            return base.Channel.DelDAMachineRealTimeInfoAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.DAMachineRealTimeInfo> GetDAMachineRealTimeInfos(string sWhere) {
            return base.Channel.GetDAMachineRealTimeInfos(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.DAMachineRealTimeInfo>> GetDAMachineRealTimeInfosAsync(string sWhere) {
            return base.Channel.GetDAMachineRealTimeInfosAsync(sWhere);
        }
        
        public BFM.ContractModel.DAMachineRealTimeInfo GetDAMachineRealTimeInfoById(string Id) {
            return base.Channel.GetDAMachineRealTimeInfoById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.DAMachineRealTimeInfo> GetDAMachineRealTimeInfoByIdAsync(string Id) {
            return base.Channel.GetDAMachineRealTimeInfoByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.DAProductRecord> GetDAProductRecordByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetDAProductRecordByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.DAProductRecord>> GetDAProductRecordByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetDAProductRecordByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetDAProductRecordCount(string sWhere) {
            return base.Channel.GetDAProductRecordCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetDAProductRecordCountAsync(string sWhere) {
            return base.Channel.GetDAProductRecordCountAsync(sWhere);
        }
        
        public bool AddDAProductRecord(BFM.ContractModel.DAProductRecord mDAProductRecord) {
            return base.Channel.AddDAProductRecord(mDAProductRecord);
        }
        
        public System.Threading.Tasks.Task<bool> AddDAProductRecordAsync(BFM.ContractModel.DAProductRecord mDAProductRecord) {
            return base.Channel.AddDAProductRecordAsync(mDAProductRecord);
        }
        
        public bool UpdateDAProductRecord(BFM.ContractModel.DAProductRecord mDAProductRecord) {
            return base.Channel.UpdateDAProductRecord(mDAProductRecord);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateDAProductRecordAsync(BFM.ContractModel.DAProductRecord mDAProductRecord) {
            return base.Channel.UpdateDAProductRecordAsync(mDAProductRecord);
        }
        
        public bool DelDAProductRecords(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelDAProductRecords(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelDAProductRecordsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelDAProductRecordsAsync(Ids);
        }
        
        public bool DelDAProductRecord(string Id) {
            return base.Channel.DelDAProductRecord(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelDAProductRecordAsync(string Id) {
            return base.Channel.DelDAProductRecordAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.DAProductRecord> GetDAProductRecords(string sWhere) {
            return base.Channel.GetDAProductRecords(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.DAProductRecord>> GetDAProductRecordsAsync(string sWhere) {
            return base.Channel.GetDAProductRecordsAsync(sWhere);
        }
        
        public BFM.ContractModel.DAProductRecord GetDAProductRecordById(string Id) {
            return base.Channel.GetDAProductRecordById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.DAProductRecord> GetDAProductRecordByIdAsync(string Id) {
            return base.Channel.GetDAProductRecordByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.DAAlarmRecord> GetDAAlarmRecordByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetDAAlarmRecordByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.DAAlarmRecord>> GetDAAlarmRecordByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetDAAlarmRecordByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetDAAlarmRecordCount(string sWhere) {
            return base.Channel.GetDAAlarmRecordCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetDAAlarmRecordCountAsync(string sWhere) {
            return base.Channel.GetDAAlarmRecordCountAsync(sWhere);
        }
        
        public bool AddDAAlarmRecord(BFM.ContractModel.DAAlarmRecord mDAAlarmRecord) {
            return base.Channel.AddDAAlarmRecord(mDAAlarmRecord);
        }
        
        public System.Threading.Tasks.Task<bool> AddDAAlarmRecordAsync(BFM.ContractModel.DAAlarmRecord mDAAlarmRecord) {
            return base.Channel.AddDAAlarmRecordAsync(mDAAlarmRecord);
        }
        
        public bool UpdateDAAlarmRecord(BFM.ContractModel.DAAlarmRecord mDAAlarmRecord) {
            return base.Channel.UpdateDAAlarmRecord(mDAAlarmRecord);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateDAAlarmRecordAsync(BFM.ContractModel.DAAlarmRecord mDAAlarmRecord) {
            return base.Channel.UpdateDAAlarmRecordAsync(mDAAlarmRecord);
        }
        
        public bool DelDAAlarmRecords(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelDAAlarmRecords(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelDAAlarmRecordsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelDAAlarmRecordsAsync(Ids);
        }
        
        public bool DelDAAlarmRecord(string Id) {
            return base.Channel.DelDAAlarmRecord(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelDAAlarmRecordAsync(string Id) {
            return base.Channel.DelDAAlarmRecordAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.DAAlarmRecord> GetDAAlarmRecords(string sWhere) {
            return base.Channel.GetDAAlarmRecords(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.DAAlarmRecord>> GetDAAlarmRecordsAsync(string sWhere) {
            return base.Channel.GetDAAlarmRecordsAsync(sWhere);
        }
        
        public BFM.ContractModel.DAAlarmRecord GetDAAlarmRecordById(string Id) {
            return base.Channel.GetDAAlarmRecordById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.DAAlarmRecord> GetDAAlarmRecordByIdAsync(string Id) {
            return base.Channel.GetDAAlarmRecordByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.DAStatusRecord> GetDAStatusRecordByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetDAStatusRecordByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.DAStatusRecord>> GetDAStatusRecordByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetDAStatusRecordByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetDAStatusRecordCount(string sWhere) {
            return base.Channel.GetDAStatusRecordCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetDAStatusRecordCountAsync(string sWhere) {
            return base.Channel.GetDAStatusRecordCountAsync(sWhere);
        }
        
        public bool AddDAStatusRecord(BFM.ContractModel.DAStatusRecord mDAStatusRecord) {
            return base.Channel.AddDAStatusRecord(mDAStatusRecord);
        }
        
        public System.Threading.Tasks.Task<bool> AddDAStatusRecordAsync(BFM.ContractModel.DAStatusRecord mDAStatusRecord) {
            return base.Channel.AddDAStatusRecordAsync(mDAStatusRecord);
        }
        
        public bool UpdateDAStatusRecord(BFM.ContractModel.DAStatusRecord mDAStatusRecord) {
            return base.Channel.UpdateDAStatusRecord(mDAStatusRecord);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateDAStatusRecordAsync(BFM.ContractModel.DAStatusRecord mDAStatusRecord) {
            return base.Channel.UpdateDAStatusRecordAsync(mDAStatusRecord);
        }
        
        public bool DelDAStatusRecords(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelDAStatusRecords(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelDAStatusRecordsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelDAStatusRecordsAsync(Ids);
        }
        
        public bool DelDAStatusRecord(string Id) {
            return base.Channel.DelDAStatusRecord(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelDAStatusRecordAsync(string Id) {
            return base.Channel.DelDAStatusRecordAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.DAStatusRecord> GetDAStatusRecords(string sWhere) {
            return base.Channel.GetDAStatusRecords(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.DAStatusRecord>> GetDAStatusRecordsAsync(string sWhere) {
            return base.Channel.GetDAStatusRecordsAsync(sWhere);
        }
        
        public BFM.ContractModel.DAStatusRecord GetDAStatusRecordById(string Id) {
            return base.Channel.GetDAStatusRecordById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.DAStatusRecord> GetDAStatusRecordByIdAsync(string Id) {
            return base.Channel.GetDAStatusRecordByIdAsync(Id);
        }
    }
}
