<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" 
        xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" 
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
        xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
        xmlns:mainCanvas="clr-namespace:BFM.WPF.FlowDesign.MainCanvas"
        x:Class="BFM.WPF.FlowDesign.FlowDesigner" Loaded="FlowDesigner_OnLoaded"
        mc:Ignorable="d" Background="White" Closing="FlowDesigner_OnClosing"
        Title="界面设计器" d:DesignWidth="1200" d:DesignHeight="720.8" WindowState="Maximized" >
    <!--WindowStartupLocation="CenterScreen" WindowState="Maximized"-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <dxr:RibbonControl RibbonStyle="Office2010" Focusable="False" >
            <dxr:RibbonControl.ApplicationMenu>
                <dxr:BackstageViewControl>
                    <dxr:BackstageButtonItem Content="新建" Name="bNew" MinWidth="150" Glyph="{dx:DXImage Image=New_16x16.png}" Click="bNew_Click" />
                    <dxr:BackstageButtonItem Content="打开" Name="bOpen" Glyph="{dx:DXImage Image=Open_16x16.png}" Click="bOpen_Click" />
                    <dxr:BackstageButtonItem Content="保存" Name="bSave"  Glyph="{dx:DXImage Image=Save_16x16.png}" Click="bSave_Click" />
                    <dxr:BackstageButtonItem Content="另存为" Name="bSaveAs" Glyph="{dx:DXImage Image=SaveAs_16x16.png}" Click="bSaveAs_Click" />
                    <dxr:BackstageButtonItem Content="关闭" Name="bClose" Glyph="{dx:DXImage Image=Close_16x16.png}" Click="bClose_Click" />
                </dxr:BackstageViewControl>
            </dxr:RibbonControl.ApplicationMenu>
            <dxr:RibbonControl.ToolbarItems>
                <dxb:BarButtonItem BarItemName="bOpen" KeyGesture="Ctrl+O" Glyph="{dx:DXImage Image=Open_16x16.png}" Content="打开" ItemClick="BarButtonItem_ItemClick" />
                <dxb:BarButtonItem BarItemName="bSave" KeyGesture="Ctrl+S" Glyph="{dx:DXImage Image=Save_16x16.png}" Content="保存" ItemClick="BarButtonItem_ItemClick_1" />
                <dxb:BarButtonItem BarItemName="bSaveAs" KeyGesture="Ctrl+Shift+S" Glyph="{dx:DXImage Image=SaveAs_16x16.png}" Content="另存为" ItemClick="BarButtonItem_ItemClick_2" />
                <dxb:BarButtonItem x:Name="bUndo" KeyGesture="Ctrl+Z" Glyph="{dx:DXImage Image=Undo_16x16.png}" Content="撤销" IsEnabled="False" />
                <dxb:BarButtonItem x:Name="bRedo" KeyGesture="Ctrl+Y" Glyph="{dx:DXImage Image=Redo_16x16.png}" Content="重做" IsEnabled="False" />
            </dxr:RibbonControl.ToolbarItems>
            <dxr:RibbonDefaultPageCategory Caption="defaultCategory">
                <dxr:RibbonPage Caption="主页">
                    <dxr:RibbonPageGroup Caption="剪切板">
                        <dxb:BarButtonItem x:Name="bPaste" Content="粘贴" KeyGesture="Ctrl+V" Glyph="{dx:DXImage Image=Paste_16x16.png}" LargeGlyph="{dx:DXImage Image=Paste_32x32.png}" ItemClick="bPaste_OnItemClick"/>
                        <dxb:BarButtonItem x:Name="bCut" Content="剪切" KeyGesture="Ctrl+X" Glyph="{dx:DXImage Image=Cut_16x16.png}" />
                        <dxb:BarButtonItem x:Name="bCopy" Content="复制" KeyGesture="Ctrl+C" Glyph="{dx:DXImage Image=Copy_16x16.png}" ItemClick="bCopy_OnItemClick"/>
                        <dxb:BarButtonItem x:Name="bFormat" Content="格式刷" Glyph="{dx:DXImage Image=Task_16x16.png}" />
                    </dxr:RibbonPageGroup>

                    <dxr:RibbonPageGroup Caption="字体">
                        <dxr:BarButtonGroup x:Name="bgFont">
                            <dxb:BarEditItem EditWidth="150" Content="Font Family" Hint="设置字体样式" EditValue="{Binding FontFamily, Mode=TwoWay}" 
                                             EditValueChanged="BarEditItem_EditValueChanged">
                                <dxb:BarEditItem.EditSettings>
                                    <dxe:ComboBoxEditSettings IsTextEditable="False" ItemsSource="{Binding FontFamilies}"/>
                                </dxb:BarEditItem.EditSettings>
                            </dxb:BarEditItem>
                            <dxb:BarEditItem EditWidth="60" Content="Font Size" Hint="设置字体大小" EditValue="{Binding FontSize, Mode=TwoWay}" 
                                             EditValueChanged="BarEditItem_EditValueChanged_1">
                                <dxb:BarEditItem.EditSettings>
                                    <dxe:ComboBoxEditSettings PopupMaxHeight="250" IsTextEditable="False" ItemsSource="{Binding FontSizes}"/>
                                </dxb:BarEditItem.EditSettings>
                            </dxb:BarEditItem>
                        </dxr:BarButtonGroup>
                        <dxr:BarButtonGroup x:Name="bgFontSizeChange">
                            <dxb:BarButtonItem Content="字体增大" Glyph="{dx:DXImage Image=FontSizeIncrease_16x16.png}" ItemClick="BarButtonItem_ItemClick_3" />
                            <dxb:BarButtonItem Content="字体缩小" Glyph="{dx:DXImage Image=FontSizeDecrease_16x16.png}" ItemClick="BarButtonItem_ItemClick_4" />
                        </dxr:BarButtonGroup>
                        <dxr:BarButtonGroup RibbonStyle="SmallWithoutText">
                            <dxb:BarCheckItem Content="加粗" Glyph="{dx:DXImage Image=Bold_16x16.png}" KeyGesture="Ctrl+B" IsChecked="{Binding IsBold, Mode=TwoWay}" ItemClick="BarCheckItem_ItemClick" />
                            <dxb:BarCheckItem Content="斜体" Glyph="{dx:DXImage Image=Italic_16x16.png}" KeyGesture="Ctrl+I" IsChecked="{Binding IsItalic, Mode=TwoWay}" ItemClick="BarCheckItem_ItemClick_1" />
                            <dxb:BarCheckItem Content="下划线" Glyph="{dx:DXImage Image=Underline_16x16.png}" KeyGesture="Ctrl+U" IsChecked="{Binding IsUnderline, Mode=TwoWay}" ItemClick="BarCheckItem_ItemClick_2" />
                        </dxr:BarButtonGroup>
                        <dxr:BarButtonGroup x:Name="bgFontColors" RibbonStyle="SmallWithoutText">
                            <!--<dxb:BarSplitButtonItem Content="字体高亮" ActAsDropDown="True">
                                <dxb:BarSplitButtonItem.GlyphTemplate>
                                    <DataTemplate>
                                        <Canvas Width="16" Height="16">
                                            <Image Source="Images/font-color-16x16.png"/>
                                            <Border Width="14" Height="2" Canvas.Left="1" Canvas.Top="14">
                                                <Border.Background>
                                                    <SolidColorBrush Color="{Binding SelectionTextBackgroundColor, ElementName=richControl}"/>
                                                </Border.Background>
                                            </Border>
                                        </Canvas>
                                    </DataTemplate>
                                </dxb:BarSplitButtonItem.GlyphTemplate>
                                <dxb:PopupControlContainer>
                                    <dxe:ColorEdit DefaultColor="Transparent" DefaultColorButtonContent="No color" ShowBorder="False" 
                                                   EditValue="{Binding SelectionTextBackgroundColor}" CloseOwnerPopupOnClick="True"/>
                                </dxb:PopupControlContainer>
                            </dxb:BarSplitButtonItem>-->
                            <dxb:BarSplitButtonItem Content="字体颜色" ActAsDropDown="True" >
                                <dxb:BarSplitButtonItem.GlyphTemplate>
                                    <DataTemplate>
                                        <Canvas Width="16" Height="16">
                                            <Image Source="Images/font-color-16x16.png"/>
                                            <Border Width="14" Height="2" Canvas.Left="1" Canvas.Top="14">
                                                <Border.Background>
                                                    <SolidColorBrush Color="{Binding SelectionTextColor, Mode=TwoWay}"/>
                                                </Border.Background>
                                            </Border>
                                        </Canvas>
                                    </DataTemplate>
                                </dxb:BarSplitButtonItem.GlyphTemplate>
                                <dxb:PopupControlContainer>
                                    <dxe:ColorEdit DefaultColor="{Binding SelectionTextColor, Mode=TwoWay}" 
                                                   CloseOwnerPopupOnClick="True" ShowBorder="False" 
                                                   ColorChanged="ColorEditForeground_ColorChanged" />
                                </dxb:PopupControlContainer>
                            </dxb:BarSplitButtonItem>
                        </dxr:BarButtonGroup>
                    </dxr:RibbonPageGroup>
                    <dxr:RibbonPageGroup Caption="文本对齐">
                        <dxb:BarButtonItem Hint="靠顶" Glyph="{dx:DXImage Image=AlignTopCenter_16x16.png}" ItemClick="BarButtonItem_ItemClick_5" />
                        <dxb:BarButtonItem Hint="中间" Glyph="{dx:DXImage Image=AlignMiddleCenter_32x32.png}" ItemClick="BarButtonItem_ItemClick_6" />
                        <dxb:BarButtonItem Hint="靠底" Glyph="{dx:DXImage Image=AlignBottomCenter_16x16.png}" ItemClick="BarButtonItem_ItemClick_7"  />
                        <dxb:BarButtonItem Hint="靠左" Glyph="{dx:DXImage Image=AlignMiddleLeft_16x16.png}" ItemClick="BarButtonItem_ItemClick_8" />
                        <dxb:BarButtonItem Hint="居中" Glyph="{dx:DXImage Image=AlignBottomCenter_16x16.png}" ItemClick="BarButtonItem_ItemClick_9" />
                        <dxb:BarButtonItem Hint="靠右" Glyph="{dx:DXImage Image=AlignBottomRight_16x16.png}" ItemClick="BarButtonItem_ItemClick_10" />
                    </dxr:RibbonPageGroup>
                    <dxr:RibbonPageGroup Caption="工具" >
                        <dxb:BarButtonItem Content="选择" Glyph="{dx:DXImage Image=SelectTool_16x16.png}" LargeGlyph="{dx:DXImage Image=SelectTool_32x32.png}" />
                        <dxb:BarButtonItem Content="连接线" Glyph="{dx:DXImage Image=LineItem_32x32.png}" LargeGlyph="{dx:DXImage Image=LineItem_32x32.png}" />
                    </dxr:RibbonPageGroup>
                    <dxr:RibbonPageGroup Caption="样式" >
                        <dxb:BarSplitButtonItem Content="背景色" ActAsDropDown="True" >
                            <dxb:BarSplitButtonItem.GlyphTemplate>
                                <DataTemplate>
                                    <Canvas Width="16" Height="16">
                                        <Image Source="{dx:DXImage Image=Palette_16x16.png}"/>
                                    </Canvas>
                                </DataTemplate>
                            </dxb:BarSplitButtonItem.GlyphTemplate>
                            <dxb:PopupControlContainer>
                                <dxe:ColorEdit DefaultColor="{Binding BackgoundColor}"
                                               CloseOwnerPopupOnClick="True" ShowBorder="False" ColorChanged="ColorEdit_ColorChanged"  />
                            </dxb:PopupControlContainer>
                        </dxb:BarSplitButtonItem>
                        <dxb:BarSplitButtonItem Content="边框颜色" ActAsDropDown="True" >
                            <dxb:BarSplitButtonItem.GlyphTemplate>
                                <DataTemplate>
                                    <Canvas Width="16" Height="16">
                                        <Image Source="{dx:DXImage Image=ColorMixer_16x16.png}"/>
                                    </Canvas>
                                </DataTemplate>
                            </dxb:BarSplitButtonItem.GlyphTemplate>
                            <dxb:PopupControlContainer>
                                <dxe:ColorEdit DefaultColor="{Binding BorderColor}" CloseOwnerPopupOnClick="True" 
                                               ShowBorder="False" ColorChanged="ColorEdit2_ColorChanged"  />
                            </dxb:PopupControlContainer>
                        </dxb:BarSplitButtonItem>
                    </dxr:RibbonPageGroup>
                    <dxr:RibbonPageGroup Caption="图层" >
                        <dxb:BarButtonItem x:Name="bBringToForward" Content="上移一层" Glyph="{dx:DXImage Image=BringToForward_16x16.png}" LargeGlyph="{dx:DXImage Image=BringForward_32x32.png}" ItemClick="bBringToForward_ItemClick" />
                        <dxb:BarButtonItem x:Name="bBringToFront" Content="最上面" Glyph="{dx:DXImage Image=BringToFront_16x16.png}" LargeGlyph="{dx:DXImage Image=BringToFront_32x32.png}" ItemClick="bBringToFront_ItemClick" />
                        <dxb:BarButtonItem x:Name="bSendToBack" Content="下移一层" Glyph="{dx:DXImage Image=SendToBack_16x16.png}" LargeGlyph="{dx:DXImage Image=SendToBack_32x32.png}" ItemClick="bSendToBack_ItemClick" />
                        <dxb:BarButtonItem x:Name="bSendBackward" Content="最底层" Glyph="{dx:DXImage Image=SendBackward_16x16.png}" LargeGlyph="{dx:DXImage Image=SendBackward_32x32.png}" ItemClick="bSendBackward_ItemClick" />
                    </dxr:RibbonPageGroup>
                    <dxr:RibbonPageGroup Caption="水平布局" >
                        <dxb:BarButtonItem Content="顶对齐" Glyph="{dx:DXImage Image=AlignHorizontalTop2_16x16.png}" LargeGlyph="{dx:DXImage Image=AlignHorizontalTop2_32x32.png}" ItemClick="bTop_ItemClick" />
                        <dxb:BarButtonItem Content="水平中间" Glyph="{dx:DXImage Image=AlignHorizontalCenter2_16x16.png}" LargeGlyph="{dx:DXImage Image=AlignHorizontalCenter2_32x32.png}" ItemClick="bHCenter_ItemClick" />
                        <dxb:BarButtonItem Content="底对齐" Glyph="{dx:DXImage Image=AlignHorizontalBottom2_16x16.png}" LargeGlyph="{dx:DXImage Image=AlignHorizontalBottom2_32x32.png}" ItemClick="bBottom_ItemClick" />
                        <dxb:BarButtonItem Content="水平平均" Glyph="{dx:DXImage Image=ContentArrangeInColums_16x16.png}" LargeGlyph="{dx:DXImage Image=ContentArrangeInColums_32x32.png}" ItemClick="bHSpan_ItemClick" />
                    </dxr:RibbonPageGroup>
                    <dxr:RibbonPageGroup Caption="垂直布局" >
                        <dxb:BarButtonItem Content="左对齐" Glyph="{dx:DXImage Image=AlignVerticalLeft2_16x16.png}" LargeGlyph="{dx:DXImage Image=AlignVerticalLeft2_32x32.png}" ItemClick="bLeft_ItemClick" />
                        <dxb:BarButtonItem Content="垂直中间" Glyph="{dx:DXImage Image=AlignVerticalCenter2_16x16.png}" LargeGlyph="{dx:DXImage Image=AlignVerticalCenter2_32x32.png}" ItemClick="bVCenter_ItemClick" />
                        <dxb:BarButtonItem Content="右对齐" Glyph="{dx:DXImage Image=AlignVerticalRight2_16x16.png}" LargeGlyph="{dx:DXImage Image=AlignVerticalRight2_32x32.png}" ItemClick="bRight_ItemClick" />
                        <dxb:BarButtonItem Content="垂直平均" Glyph="{dx:DXImage Image=ContentArrangeInRows_16x16.png}" LargeGlyph="{dx:DXImage Image=ContentArrangeInRows_32x32.png}" ItemClick="bVSpan_ItemClick" />
                    </dxr:RibbonPageGroup>
                </dxr:RibbonPage>
                <dxr:RibbonPage Caption="插入">
                    <dxr:RibbonPageGroup Caption="其他元素">
                        <dxb:BarButtonItem Content="容器&#x000A;▼" LargeGlyph="{dx:DXImage Image=BordersOutsideThick_32x32.png}" Glyph="{dx:DXImage Image=BordersOutsideThick_16x16.png}"/>
                        <dxb:BarButtonItem x:Name="bAddPic" Content="图片" LargeGlyph="{dx:DXImage Image=PictureBox_32x32.png}" Glyph="{dx:DXImage Image=PictureBox_16x16.png}" ItemClick="bAddPic_ItemClick" />
                        <dxb:BarButtonItem x:Name="bAddVideo" Content="海康摄像头" LargeGlyph="{dx:DXImage Image=PictureBox_32x32.png}" Glyph="{dx:DXImage Image=PictureBox_16x16.png}" ItemClick="bAddVideo_ItemClick" />
                        <dxb:BarButtonItem x:Name="bAddText" Content="文本" LargeGlyph="{dx:DXImage Image=Label_32x32.png}" Glyph="{dx:DXImage Image=Label_16x16.png}" ItemClick="bAddText_ItemClick" />
                    </dxr:RibbonPageGroup>
                </dxr:RibbonPage>
                <dxr:RibbonPage Caption="属性">
                    <dxr:RibbonPageGroup Caption="Name值">
                        <dxb:BarButtonItem x:Name="bNameByDB" Content="获取Tag点" LargeGlyph="{dx:DXImage Image=Tag_32x32.png}" Glyph="{dx:DXImage Image=Tag_16x16.png}" ItemClick="bNameByDB_ItemClick" />
                        <dxb:BarEditItem EditWidth="250" Content="设置Name值" EditValue="{Binding SelectName}" EditValueChanged="BarEditItem_OnEditValueChanged">
                            <dxb:BarEditItem.EditSettings>
                                <dxe:TextEditSettings/>
                            </dxb:BarEditItem.EditSettings>
                        </dxb:BarEditItem>
                    </dxr:RibbonPageGroup>
                    <dxr:RibbonPageGroup Caption="位置">
                        <dxb:BarEditItem EditWidth="50" Content="X " EditValue="{Binding SelectX}" EditValueChanged="BarEditItem2_OnEditValueChanged">
                            <dxb:BarEditItem.EditSettings>
                                <dxe:SpinEditSettings/>
                            </dxb:BarEditItem.EditSettings>
                        </dxb:BarEditItem>
                        <dxb:BarEditItem EditWidth="50" Content="Y" EditValue="{Binding SelectY}" EditValueChanged="BarEditItem3_OnEditValueChanged">
                            <dxb:BarEditItem.EditSettings>
                                <dxe:SpinEditSettings/>
                            </dxb:BarEditItem.EditSettings>
                        </dxb:BarEditItem>
                    </dxr:RibbonPageGroup>
                    <dxr:RibbonPageGroup Caption="大小">
                        <dxb:BarEditItem EditWidth="75" Content="长" EditValue="{Binding SelectWidth}" EditValueChanged="BarEditItem4_OnEditValueChanged">
                            <dxb:BarEditItem.EditSettings>
                                <dxe:SpinEditSettings/>
                            </dxb:BarEditItem.EditSettings>
                        </dxb:BarEditItem>
                        <dxb:BarEditItem EditWidth="75" Content="高" EditValue="{Binding SelectHeight}" EditValueChanged="BarEditItem5_OnEditValueChanged">
                            <dxb:BarEditItem.EditSettings>
                                <dxe:SpinEditSettings/>
                            </dxb:BarEditItem.EditSettings>
                        </dxb:BarEditItem>
                    </dxr:RibbonPageGroup>

                    <dxr:RibbonPageGroup Caption="监控相关">
                        <dxb:BarEditItem EditWidth="20" Content="可点击" EditValue="{Binding SelectReadOnlyCanClick}" EditValueChanged="BarEditItem6_OnEditValueChanged">
                            <dxb:BarEditItem.EditSettings>
                                <dxe:CheckEditSettings/>
                            </dxb:BarEditItem.EditSettings>
                        </dxb:BarEditItem>
                        <dxb:BarEditItem EditWidth="20" Content="可监控" EditValue="{Binding SelectMonitorItem}" EditValueChanged="BarEditItem7_OnEditValueChanged">
                            <dxb:BarEditItem.EditSettings>
                                <dxe:CheckEditSettings/>
                            </dxb:BarEditItem.EditSettings>
                        </dxb:BarEditItem>
                    </dxr:RibbonPageGroup>
                </dxr:RibbonPage>
                <dxr:RibbonPage Caption="页面">
                    <dxr:RibbonPageGroup Caption="背景">
                        <dxb:BarEditItem EditWidth="20" Content="显示Grid" EditValue="{Binding ShowGrid, ElementName=cvMain}" EditValueChanged="BarEditItem8_OnEditValueChanged">
                            <dxb:BarEditItem.EditSettings>
                                <dxe:CheckEditSettings/>
                            </dxb:BarEditItem.EditSettings>
                        </dxb:BarEditItem>

                    </dxr:RibbonPageGroup>
                </dxr:RibbonPage>
            </dxr:RibbonDefaultPageCategory>
        </dxr:RibbonControl>

        <Grid Grid.Row="1" Panel.ZIndex="-1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="columnLeft" Width="240"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid Background="White" x:Name="gridLeft">
                <ScrollViewer>
                <WrapPanel >
                        <Border Width="100" Margin="5">
                            <Button Content="矩形" Click="Button_Click" >
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid Height="50">
                                            <TextBlock x:Name="back" Padding="2"/>
                                            <StackPanel Margin="5" Orientation="Horizontal">
                                                <Rectangle Fill="#FF00ACFF" Height="40" Width="40"/>
                                                <TextBlock x:Name="text" HorizontalAlignment="Center" Height="Auto" Margin="5" VerticalAlignment="Center"><InlineUIContainer>
                                                            <ContentPresenter ContentSource="Content"/>
                                                        </InlineUIContainer></TextBlock>
                                            </StackPanel>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="#FFADADAD"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="back" Value="#FFB1D6F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Border>
                        <Border Width="100" Margin="5">
                            <Button Content="圆形" Click="Button2_Click" >
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid Height="50">
                                            <TextBlock x:Name="back" Padding="2"/>
                                            <StackPanel Margin="5" Orientation="Horizontal">
                                                <Ellipse Fill="#FF00ACFF" Height="40" Width="40"/>
                                                <TextBlock x:Name="text" HorizontalAlignment="Center" Height="Auto" Margin="5" VerticalAlignment="Center">
                                                    <InlineUIContainer>
                                                        <ContentPresenter ContentSource="Content"/>
                                                    </InlineUIContainer>
                                                </TextBlock>
                                            </StackPanel>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="#FFADADAD"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="back" Value="#FFB1D6F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Border>
                        <Border Width="100" Margin="5">
                            <Button Content="三角形" Click="Button3_Click" >
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid Height="50">
                                            <TextBlock x:Name="back" Padding="2"/>
                                            <StackPanel Margin="5" Orientation="Horizontal">
                                                <Canvas Width="40">
                                                    <Polygon Points="20,0 40,40 0,40" Stroke="#FF00ACFF" StrokeThickness="1" Fill="#FF00ACFF"/>
                                                </Canvas>
                                                <TextBlock x:Name="text" HorizontalAlignment="Center" Height="Auto" Margin="5" VerticalAlignment="Center"><InlineUIContainer>
                                                            <ContentPresenter ContentSource="Content"/>
                                                        </InlineUIContainer></TextBlock>
                                            </StackPanel>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="#FFADADAD"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="back" Value="#FFB1D6F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Border >
                        <Border Width="100" Margin="5">
                            <Button Content="五边形" Click="Button5_Click" >
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid Height="50">
                                            <TextBlock x:Name="back" Padding="2"/>
                                            <StackPanel Margin="5" Orientation="Horizontal">
                                                <Canvas Width="40">
                                                    <Polygon Points="20,0 40,16 32,40 8,40 0,16" Stroke="#FF00ACFF" StrokeThickness="1" Fill="#FF00ACFF"/>
                                                </Canvas>
                                                <TextBlock x:Name="text" HorizontalAlignment="Center" Height="Auto" Margin="5" VerticalAlignment="Center"><InlineUIContainer>
                                                            <ContentPresenter ContentSource="Content"/>
                                                        </InlineUIContainer></TextBlock>
                                            </StackPanel>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="#FFADADAD"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="back" Value="#FFB1D6F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Border>
                        <Border Width="100" Margin="5">
                            <Button Content="六边形" Click="Button6_Click" >
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid Height="50">
                                            <TextBlock x:Name="back" Padding="2"/>
                                            <StackPanel Margin="5" Orientation="Horizontal">
                                                <Canvas Width="40">
                                                    <Polygon Points="10,0 30,0 40,20 30,40 10,40 0,20" Stroke="#FF00ACFF" StrokeThickness="1" Fill="#FF00ACFF"/>
                                                </Canvas>
                                                <TextBlock x:Name="text" HorizontalAlignment="Center" Height="Auto" Margin="5" VerticalAlignment="Center"><InlineUIContainer>
                                                            <ContentPresenter ContentSource="Content"/>
                                                        </InlineUIContainer></TextBlock>
                                            </StackPanel>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="#FFADADAD"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="back" Value="#FFB1D6F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Border>
                        <Border Width="100" Margin="5">
                            <Button Content="星形" Click="Button7_Click" >
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid Height="50">
                                            <TextBlock x:Name="back" Padding="2"/>
                                            <StackPanel Margin="5" Orientation="Horizontal">
                                                <Canvas Width="40">
                                                    <Polygon Points="20,0 27,14 40,17 30,27 32,40 20,32 8,40 11,27 0,17 13,14" Stroke="#FF00ACFF" StrokeThickness="1" Fill="#FF00ACFF"/>
                                                </Canvas>
                                                <TextBlock x:Name="text" HorizontalAlignment="Center" Height="Auto" Margin="5" VerticalAlignment="Center"><InlineUIContainer>
                                                            <ContentPresenter ContentSource="Content"/>
                                                        </InlineUIContainer></TextBlock>
                                            </StackPanel>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="#FFADADAD"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="back" Value="#FFB1D6F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Border>
                        <Border Width="100" Margin="5">
                            <Button Content="菱形" Click="Button8_Click">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid Height="50">
                                            <TextBlock x:Name="back" Padding="2"/>
                                            <StackPanel Margin="5" Orientation="Horizontal">
                                                <Canvas Width="40">
                                                    <Polygon Points="20,0 40,20 20,40 0,20" Stroke="#FF00ACFF" StrokeThickness="1" Fill="#FF00ACFF"/>
                                                </Canvas>
                                                <TextBlock x:Name="text" HorizontalAlignment="Center" Height="Auto" Margin="5" VerticalAlignment="Center"><InlineUIContainer>
                                                            <ContentPresenter ContentSource="Content"/>
                                                        </InlineUIContainer></TextBlock>
                                            </StackPanel>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="#FFADADAD"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="back" Value="#FFB1D6F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Border>
                        <Border Width="100" Margin="5">
                            <Button Content="四边形" Click="Button9_Click">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid Height="50">
                                            <TextBlock x:Name="back" Padding="2"/>
                                            <StackPanel Margin="5" Orientation="Horizontal">
                                                <Canvas Width="40">
                                                    <Polygon Points="20,10 40,10 20,30 0,30" Stroke="#FF00ACFF" StrokeThickness="1" Fill="#FF00ACFF"/>
                                                </Canvas>
                                                <TextBlock x:Name="text" HorizontalAlignment="Center" Height="Auto" Margin="5" VerticalAlignment="Center"><InlineUIContainer>
                                                            <ContentPresenter ContentSource="Content"/>
                                                        </InlineUIContainer></TextBlock>
                                            </StackPanel>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="#FFADADAD"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="back" Value="#FFB1D6F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Border>
                        <Border Width="100" Margin="5">
                            <Button Content="单一箭头" Click="Button10_Click">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid Height="50">
                                            <TextBlock x:Name="back" Padding="2"/>
                                            <StackPanel Margin="5" Orientation="Horizontal">
                                                <Canvas Width="40">
                                                    <Polygon Points="0,15 26,15 26,8 40,20 26,32 26,25 0,25" Stroke="#FF00ACFF" StrokeThickness="1" Fill="#FF00ACFF"/>
                                                </Canvas>
                                                <TextBlock x:Name="text" HorizontalAlignment="Center" Height="Auto" Margin="5" VerticalAlignment="Center"><InlineUIContainer>
                                                            <ContentPresenter ContentSource="Content"/>
                                                        </InlineUIContainer></TextBlock>
                                            </StackPanel>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="#FFADADAD"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="back" Value="#FFB1D6F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Border>
                        <Border Width="100" Margin="5">
                            <Button Content="双箭头" Click="Button11_Click">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid Height="50">
                                            <TextBlock x:Name="back" Padding="2"/>
                                            <StackPanel Margin="5" Orientation="Horizontal">
                                                <Canvas Width="40">
                                                    <Polygon Points="0,20 14,8 14,15 26,15 26,8 40,20 26,32 26,25 14,25 14,32" Stroke="#FF00ACFF" StrokeThickness="1" Fill="#FF00ACFF"/>
                                                </Canvas>
                                                <TextBlock x:Name="text" HorizontalAlignment="Center" Height="Auto" Margin="5" VerticalAlignment="Center"><InlineUIContainer>
                                                            <ContentPresenter ContentSource="Content"/>
                                                        </InlineUIContainer></TextBlock>
                                            </StackPanel>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="#FFADADAD"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="back" Value="#FFB1D6F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Border>
                        <Border Width="100" Margin="5">
                            <Button Content="斜箭头" Click="Button12_Click" >
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid Height="50">
                                            <TextBlock x:Name="back" Padding="2"/>
                                            <StackPanel Margin="5" Orientation="Horizontal">
                                                <Canvas Width="40">
                                                    <Polygon Points="0,20 26,15 26,8 40,20 26,32 26,25" Stroke="#FF00ACFF" StrokeThickness="1" Fill="#FF00ACFF"/>
                                                </Canvas>
                                                <TextBlock x:Name="text" HorizontalAlignment="Center" Height="Auto" Margin="5" VerticalAlignment="Center"><InlineUIContainer>
                                                            <ContentPresenter ContentSource="Content"/>
                                                        </InlineUIContainer></TextBlock>
                                            </StackPanel>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="#FFADADAD"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="back" Value="#FFB1D6F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Border>
                        <Border Width="100" Margin="5">
                            <Button Content="双箭头" >
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid Height="50">
                                            <TextBlock x:Name="back" Padding="2"/>
                                            <StackPanel Margin="5" Orientation="Horizontal">
                                                <Canvas Width="40">
                                                    <Path Data="{Binding }" Stroke="#FF00ACFF" StrokeThickness="1" Fill="#FF00ACFF"/>
                                                </Canvas>
                                                <TextBlock x:Name="text" HorizontalAlignment="Center" Height="Auto" Margin="5" VerticalAlignment="Center"><InlineUIContainer>
                                                            <ContentPresenter ContentSource="Content"/>
                                                        </InlineUIContainer></TextBlock>
                                            </StackPanel>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="#FFADADAD"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="back" Value="#FFB1D6F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Border>
                        <Border Width="100" Margin="5">
                            <Button Content="连接线箭头" Click="Button13_Click" >
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid Height="50">
                                            <TextBlock x:Name="back" Padding="2"/>
                                            <StackPanel Margin="5" Orientation="Horizontal">
                                                <Canvas Width="40">
                                                    <Polygon Points="0,19.5 32,19.5 32,16 40,20 32,24 32,20 0,20" Stroke="#FF00ACFF" StrokeThickness="1" Fill="#FF00ACFF"/>
                                                </Canvas>
                                                <TextBlock x:Name="text" HorizontalAlignment="Center" Height="Auto" Margin="5" VerticalAlignment="Center"><InlineUIContainer>
                                                            <ContentPresenter ContentSource="Content"/>
                                                        </InlineUIContainer></TextBlock>
                                            </StackPanel>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="#FFADADAD"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="back" Value="#FFB1D6F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Border>
                        <Border Width="100" Margin="5">
                            <Button Content="连接线双箭头" >
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid Height="50">
                                            <TextBlock x:Name="back" Padding="2"/>
                                            <StackPanel Margin="5" Orientation="Horizontal">
                                                <Canvas Width="40">
                                                    <Polygon Points="0,20 8,16 8,20 32,20 32,16 40,20 32,24 32,20.5 8,20.5 8,24" Stroke="#FF00ACFF" StrokeThickness="1" Fill="#FF00ACFF"/>
                                                </Canvas>
                                                <TextBlock x:Name="text" HorizontalAlignment="Center" Height="Auto" Margin="5" VerticalAlignment="Center"><InlineUIContainer>
                                                            <ContentPresenter ContentSource="Content"/>
                                                        </InlineUIContainer></TextBlock>
                                            </StackPanel>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="#FFADADAD"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="back" Value="#FFB1D6F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Border>
                    </WrapPanel>
                </ScrollViewer>
            </Grid>

            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Focusable="False" MouseDoubleClick="GridSplitter_MouseDoubleClick" />

            <Border Grid.Column="2" Panel.ZIndex="-2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Border Background="White" />
                    <mainCanvas:HorizontalRule Grid.Row="0" Grid.Column="1" x:Name="ruleHori" ZIndex="-100" />
                    <mainCanvas:VerticalRule Grid.Row="1" Grid.Column="0" x:Name="ruleVert" ZIndex="-101"/>
                    <mainCanvas:DiagramScrollView x:Name="mainContent" Grid.Row="1" Grid.Column="1" ScrollChanged="mainContent_ScrollChanged" >
                        <mainCanvas:FlowContent ShowGrid="True" x:Name="cvMain" DocumentSize="2000,2000" ItemClick="FlowContent_OnItemClick" 
                                                SelectItemChanged="FlowContent_OnSelectItemChanged"/>
                    </mainCanvas:DiagramScrollView>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Window>
