<Window xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
        xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"
        xmlns:local="clr-namespace:BFM.WPF.MainUI"
        dxc:DXSplashScreen.SplashScreenType="{x:Type local:SplashScreenView}"
        xmlns:dxat="http://schemas.devexpress.com/winfx/2008/xaml/accordion/themekeys"
        xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking" 
        xmlns:dxa="http://schemas.devexpress.com/winfx/2008/xaml/accordion" 
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
        x:Class="BFM.WPF.MainUI.NewMainForm"
        mc:Ignorable="d"
        Title="NewMainForm" Height="900" Width="1080" WindowState="Maximized">
   
    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="0.0001" CornerRadius="0" CaptionHeight="55"/>
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <ControlTemplate x:Key="{dxat:AccordionItemThemeKeys ResourceKey=ItemBackgroundTemplate,IsThemeIndependent=true}" TargetType="dxa:AccordionItemBackgroundControl">
            <Grid x:Name="Root" Height="34">
                <Border x:Name="ItemHover" Opacity="0"  >
                    <Border.Background>
                        <ImageBrush ImageSource="images/normal/AcordionSelected.png"/>
                    </Border.Background>
                </Border>
                <Border x:Name="ItemPressed" Opacity="0"   >
                    <Border.Background>
                        <ImageBrush ImageSource="images/normal/AcordionSelected.png"/>
                    </Border.Background>
                </Border>
                <Border x:Name="ItemSelected" Opacity="0" >
                    <Border.Background>
                        <ImageBrush ImageSource="images/normal/AcordionSelected.png"/>
                    </Border.Background>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ItemType" Value="SubItem" />
                        <Condition Property="ItemState" Value="Default" />
                    </MultiTrigger.Conditions>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ItemType" Value="SubItem" />
                        <Condition Property="ItemState" Value="Hover" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="ItemHover" Property="Opacity" Value="1" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ItemType" Value="SubItem" />
                        <Condition Property="ItemState" Value="Pressed" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="ItemPressed" Property="Opacity" Value="1" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ItemType" Value="SubItem" />
                        <Condition Property="ItemState" Value="Selected" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="ItemSelected" Property="Opacity" Value="1" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ItemType" Value="SubItem" />
                        <Condition Property="ItemState" Value="SelectedInactive" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="ItemHover" Property="Opacity" Value="1" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ItemType" Value="SubItem" />
                        <Condition Property="ItemState" Value="Disabled" />
                    </MultiTrigger.Conditions>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="dxa:AccordionControl">
            <!--<Setter Property="SelectionMode" Value="Single" />-->
            <Setter Property="Background" Value="White" />
            <Setter Property="ExpandMode" Value="MultipleOrNone" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="BorderBrush" Value="#c3c5c5"/>
            <Setter Property="BorderThickness" Value="0,0,1,0"/>

        </Style>

        <dxmvvm:ObjectToObjectConverter x:Key="FlipHorizontalConverter" DefaultTarget="1">
            <dxmvvm:MapItem Source="True" Target="-1"/>
        </dxmvvm:ObjectToObjectConverter>
        <ControlTemplate x:Key="{dxat:AccordionItemThemeKeys ResourceKey=ExpanderButtonTemplate, IsThemeIndependent=true}" TargetType="dxa:AccordionExpandButton">
            <Grid x:Name="Root" Background="Transparent">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="IsUnchecked">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>
                                                Collapsed
                                            </Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="IsChecked">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>
                                                Visible
                                            </Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <dxa:ExpandButtonContentPresenter x:Name="IsUnchecked" ItemType="{Binding ItemType, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Focusable="False">
                    <dxa:ExpandButtonContentPresenter.ItemContent>
                        <Path x:Name="ItemContentCollapse" Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="F1 M 232.5,17.0001C 228.91,17.0001 226,19.9102 226,23.5C 226,27.0898 228.91,30 232.5,30C 236.09,30 239,27.0898 239,23.5C 239,19.9102 236.09,17.0001 232.5,17.0001 Z M 232.5,18.0004C 235.538,18.0004 238,20.4628 238,23.5004C 238,26.538 235.538,29.0004 232.5,29.0004C 229.463,29.0004 227,26.538 227,23.5004C 227,20.4628 229.463,18.0004 232.5,18.0004 Z M 236,24.0001L 236,24.0001L 236,23.0004L 236,23L 233,20L 231,20L 234,23L 229,23.0004L 229,24.0001L 234,24L 231,26.9999L 233,26.9999L 236,24.0001 Z " Width="13" Height="13" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <ScaleTransform ScaleX="{Binding IsRightExpandButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FlipHorizontalConverter}}"/>
                            </Path.RenderTransform>
                        </Path>
                    </dxa:ExpandButtonContentPresenter.ItemContent>
                    <dxa:ExpandButtonContentPresenter.RootItemContent>
                        <Path x:Name="RootItemContentCollapse" Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,0 V12 L6,6 z" Width="12" Height="12" />
                    </dxa:ExpandButtonContentPresenter.RootItemContent>
                </dxa:ExpandButtonContentPresenter>
                <dxa:ExpandButtonContentPresenter x:Name="IsChecked" Margin="0,5,0,0"
                                                  ItemType="{Binding ItemType, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Visibility="Hidden" Focusable="False">
                    <dxa:ExpandButtonContentPresenter.ItemContent>
                        <Path x:Name="ItemContentExpand" Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="F1 M 372.5,127C 376.09,127 379,129.91 379,133.5C 379,137.09 376.09,140 372.5,140C 368.91,140 366,137.09 366,133.5C 366,129.91 368.91,127 372.5,127 Z M 372.5,128C 369.462,128 367,130.463 367,133.5C 367,136.538 369.462,139 372.5,139C 375.537,139 378,136.538 378,133.5C 378,130.463 375.537,128 372.5,128 Z M 370,136L 370,135L 373,135L 370,132L 370,131L 371,131L 374,134L 374,131L 375,131L 375,135L 375,136L 375,136L 374,136L 370,136 Z " Width="13" Height="13" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <ScaleTransform ScaleX="{Binding IsRightExpandButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FlipHorizontalConverter}}"/>
                            </Path.RenderTransform>
                        </Path>
                    </dxa:ExpandButtonContentPresenter.ItemContent>
                    <dxa:ExpandButtonContentPresenter.RootItemContent>
                        <Path x:Name="RootItemContentExpand" Fill="Black" Data="M0,0 H12 L6,6 z" Width="12" Height="12"  HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </dxa:ExpandButtonContentPresenter.RootItemContent>
                </dxa:ExpandButtonContentPresenter>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ItemState" Value="Default" />
                <Trigger Property="ItemState" Value="Hover" />
                <Trigger Property="ItemState" Value="Pressed" />
                <Trigger Property="ItemState" Value="Disabled" />
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ItemType" Value="RootItem" />
                        <Condition Property="ItemState" Value="Default" />
                    </MultiTrigger.Conditions>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ItemType" Value="RootItem" />
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="RootItemContentExpand" Property="Fill" Value="#2d7dc7"/>
                    <Setter TargetName="RootItemContentCollapse" Property="Fill" Value="#2d7dc7"/>
                    <Setter TargetName="ItemContentCollapse" Property="Fill" Value="#2d7dc7"/>
                    <Setter TargetName="ItemContentCollapse" Property="Fill" Value="#2d7dc7"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ItemType" Value="RootItem" />
                        <Condition Property="IsPressed" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="RootItemContentExpand" Property="Fill" Value="#2d7dc7"  />
                    <Setter TargetName="RootItemContentCollapse" Property="Fill" Value="#2d7dc7" />
                    <Setter TargetName="ItemContentCollapse" Property="Fill" Value="#2d7dc7" />
                    <Setter TargetName="ItemContentCollapse" Property="Fill" Value="#2d7dc7" />
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>





        <ControlTemplate x:Key="LeftExpanderControlStyle" TargetType="{x:Type Expander}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="True">
                <DockPanel>
                    <DockPanel x:Name="HeaderSite" Background="{DynamicResource MainWindowHeaderBackground}">
                        <ToggleButton x:Name="HeaderSite2" ContentTemplate="{TemplateBinding HeaderTemplate}" 
                              Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" 
                              FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" 
                              FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" 
                              FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                              Margin="0,1,0,0" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" 
                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ToggleButton.FocusVisualStyle>
                                <Style>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Border>
                                                    <Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.FocusVisualStyle>
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border Padding="{TemplateBinding Padding}">
                                                    <Grid x:Name="HeaderBackground" Background="Transparent" SnapsToDevicePixels="False">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="20"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Ellipse x:Name="circle" Fill="Transparent" HorizontalAlignment="Center" Height="19" 
                                                             Stroke="DarkGray" VerticalAlignment="Center" Width="19" />
                                                        <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" 
                                                          SnapsToDevicePixels="False" Stroke="#FF666666" StrokeThickness="2" VerticalAlignment="Center"/>
                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" 
                                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" 
                                                                      RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="False">
                                                        <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
                                                        <Setter Property="Fill" TargetName="circle" Value="Transparent"/>
                                                        <Setter Property="Stroke" TargetName="arrow" Value="#FF222222"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
                                                        <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                        <Setter Property="Fill" TargetName="circle" Value="Transparent"/>
                                                        <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Stroke" TargetName="circle" Value="DarkGray"/>
                                                        <Setter Property="Fill" TargetName="circle" Value="Transparent"/>
                                                        <Setter Property="Stroke" TargetName="arrow" Value="#FF666666"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                    </DockPanel>
                    <DockPanel >
                        <ContentPresenter x:Name="ExpandSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                      ContentStringFormat="{TemplateBinding ContentStringFormat}" DockPanel.Dock="Bottom" Focusable="False" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                      Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </DockPanel>
                </DockPanel>
            </Border>
            
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                    <Setter Property="Content" TargetName="HeaderSite2" Value=""/>
                    <Setter Property="Background" TargetName="HeaderSite" Value="Transparent"/>
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Right">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                    <Setter Property="Style" TargetName="HeaderSite2">
                        <Setter.Value>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="19"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="-90"/>
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse x:Name="circle" Fill="Transparent" HorizontalAlignment="Center" Height="19" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
                                                        <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF666666" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    </Grid>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="Transparent"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF222222"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="Transparent"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="DarkGray"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="Transparent"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF666666"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Up">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                    <Setter Property="Style" TargetName="HeaderSite2">
                        <Setter.Value>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="19"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="180"/>
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse x:Name="circle" Fill="Transparent" HorizontalAlignment="Center" Height="19" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
                                                        <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF666666" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    </Grid>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="Transparent"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF222222"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="Transparent"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="DarkGray"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="Transparent"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF666666"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Left">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                    <Setter Property="Style" TargetName="HeaderSite2">
                        <Setter.Value>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="19"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="90"/>
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse x:Name="circle" Fill="Transparent" HorizontalAlignment="Center" Height="19" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
                                                        <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF666666" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    </Grid>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="Transparent"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF222222"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="Transparent"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="DarkGray"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="Transparent"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF666666"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <SolidColorBrush x:Key="Background-Default2" Color="Black"/>
       
    </Window.Resources>
    <DockPanel x:Name="RootFrame">
        <!--dx:ThemeManager.ThemeName="Office2010"-->
        <DockPanel  DockPanel.Dock="Top" Height="50" >
            <Grid>

                <Image Source="images/normal/TAB_1.png" Stretch="UniformToFill"></Image>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="180"/>
                        <ColumnDefinition Width="400"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0"  Source="Images/logo.png" VerticalAlignment="Bottom" Stretch="UniformToFill" Margin="0,2,0,0" />
                    <TextBlock Grid.Column="1" x:Name="tbAppTitle" Text="[AppSettings.AppTitle]" Foreground="#FFE0E8F1" FontSize="20" VerticalAlignment="Center" FontWeight="Bold" Grid.ColumnSpan="2" Margin="166,10,327.6,13.6" />
                    <StackPanel  Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="5">
                        <Button x:Name="BtMin" WindowChrome.IsHitTestVisibleInChrome="True" Click="BtMin_OnClick" Margin="2">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Image x:Name="img" Source="Images/normal/min.png" Width="33" Height="33"/>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="img" Property="Source" Value="Images/selected/min.png"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="img" Property="Source" Value="Images/selected/min.png"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <Button x:Name="BtMax" WindowChrome.IsHitTestVisibleInChrome="True" Click="BtMax_OnClick" Margin="2" Visibility="Collapsed">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Image x:Name="img" Source="Images/normal/max.png" Width="33" Height="33"/>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="img" Property="Source" Value="Images/selected/max.png"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="img" Property="Source" Value="Images/selected/max.png"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <Button x:Name="BtRestore" WindowChrome.IsHitTestVisibleInChrome="True" Click="BtMax_OnClick" Margin="2" >
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Image x:Name="img" Source="Images/normal/restore.png" Width="33" Height="33"/>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="img" Property="Source" Value="Images/selected/restore.png"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="img" Property="Source" Value="Images/selected/max.png"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <Button x:Name="BtnClose" WindowChrome.IsHitTestVisibleInChrome="True" Click="BtClose_OnClick" Margin="2" >
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Image x:Name="img" Source="Images/normal/close.png" Width="33" Height="33"/>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="img" Property="Source" Value="Images/selected/close.png"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="img" Property="Source" Value="Images/selected/close.png"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </StackPanel>

                </Grid>

            </Grid>




            <!--<TextBlock Text="当前用户：" Margin="180,0,0,0" Foreground="#FFF6FAFF" FontSize="15" VerticalAlignment="Center" FontWeight="Bold"/>-->
            <!--<TextBlock Text="admin" x:Name="aa" Margin="20,0,0,0" Foreground="#FFF6FAFF" FontSize="15" VerticalAlignment="Center" FontWeight="Bold"/>-->
        </DockPanel>

        <Expander Margin="0,0,0,0" Padding="1,0" IsExpanded="True" FontSize="14" FontWeight="Bold" ExpandDirection="Left" 
                          Template="{StaticResource LeftExpanderControlStyle}">
            <Expander.Header>
                <TextBlock TextWrapping="Wrap" FontSize="18" Foreground="{StaticResource Background-Default2}">主<LineBreak/>功<LineBreak/>能<LineBreak/>导<LineBreak/>航
                </TextBlock>
            </Expander.Header>
        
        <Grid  DockPanel.Dock="Left"  Background="Blue"  Visibility="{Binding ElementName=collapseBtn,Path=IsChecked,Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}}" >

                <dxa:AccordionControl x:Name="accordion" ShowSearchControl="True" Width="200" RootItemExpandButtonPosition="Left" >
                    <dxa:AccordionControl.Effect>
                        <DropShadowEffect ShadowDepth="2" Opacity="0.5" Direction="-90" BlurRadius="10" />
                    </dxa:AccordionControl.Effect>
                    <dxa:AccordionControl.Resources>
                        <Style TargetType="{x:Type dxa:AccordionItem}">
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="FontSize" Value="15" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Margin" Value="0,3" />
                            <Style.Triggers>
                                <!--<Trigger Property="ItemType" Value="RootItem">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Border BorderBrush="#c5c5c5" BorderThickness="0,1,0,0">
                                                <ContentPresenter/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>-->
                                <Trigger Property="ItemType" Value="SubItem">
                                    <Setter Property="FontSize" Value="13" />
                                    <Setter Property="FontWeight" Value="Normal"/>
                                    <Setter Property="Margin" Value="5,1" />
                                    <Setter Property="GlyphTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <Image Source="{Binding}"  Width="16" Height="16" Margin="0,0,5,0"/>
                                            </DataTemplate>
                                        </Setter.Value>

                                    </Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="ItemType" Value="SubItem"/>
                                        <Condition  Property="IsSelected" Value="true"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter Property="Foreground" Value="White" />
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="ItemType" Value="SubItem"/>
                                        <Condition  Property="IsMouseOver" Value="true"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter Property="Foreground" Value="White" />
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="ItemType" Value="SubItem"/>
                                        <Condition  Property="IsPressed" Value="true"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter Property="Foreground" Value="White" />
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="ItemType" Value="SubItem"/>
                                        <Condition  Property="IsFocused" Value="true"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter Property="Foreground" Value="White" />
                                    </MultiTrigger.Setters>
                                </MultiTrigger>

                            </Style.Triggers>
                        </Style>
                    </dxa:AccordionControl.Resources>
                </dxa:AccordionControl>
                <!--<ToggleButton x:Name="collapseBtn"  Content="折叠"  HorizontalAlignment="Right" VerticalAlignment="Top" Height="20">-->
               
            <!--</ToggleButton>-->
        </Grid>
        </Expander>
        <!--<ToggleButton x:Name="expandBtn"  Content="BFM-MES" Width="30" IsChecked="{Binding ElementName=collapseBtn,Path=IsChecked,Converter={dxmvvm:BooleanNegationConverter}}" Visibility="{Binding ElementName=collapseBtn,Path=IsChecked,Converter={dxmvvm:BooleanToVisibilityConverter}}"/>-->

        <DockPanel DockPanel.Dock="Left" >
            <Grid>
                <Image Source="images/bg.jpg" Margin="12,12,12,60" Stretch="Fill"/>
                
                <Border Margin="12,5" Height="45" VerticalAlignment="Bottom">
                    <TextBlock x:Name="tbMainFormTitle" Text="[AppSettings.MainFormTitle]" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24" FontFamily="STCaiyun" FontWeight="SemiBold" Foreground="Blue" TextDecorations="Underline"/>
                </Border>
                <dx:DXTabControl x:Name="tab_Control" TabContentCacheMode="CacheTabsOnSelecting">
                    <dx:DXTabControl.View>
                        <dx:TabControlScrollView ScrollButtonShowMode="AutoHideBothButtons" ShowHeaderMenu="True" NewButtonShowMode="NoWhere" 
                                                 HideButtonShowMode="InAllTabs" HeaderLocation="Bottom" RemoveTabItemsOnHiding="True"/>
                    </dx:DXTabControl.View>
                </dx:DXTabControl>
            </Grid>
        </DockPanel>


    </DockPanel>
</Window>
