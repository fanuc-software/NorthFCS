//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BFM.Server.DataAsset.RSMService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://fanuc.com.cn/", ConfigurationName="RSMService.IRSMService")]
    public interface IRSMService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsFactoryByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsFactoryByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsFactory> GetRsFactoryByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsFactoryByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsFactoryByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsFactory>> GetRsFactoryByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsFactoryCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsFactoryCountResponse")]
        int GetRsFactoryCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsFactoryCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsFactoryCountResponse")]
        System.Threading.Tasks.Task<int> GetRsFactoryCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsFactory", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsFactoryResponse")]
        bool AddRsFactory(BFM.ContractModel.RsFactory mRsFactory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsFactory", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsFactoryResponse")]
        System.Threading.Tasks.Task<bool> AddRsFactoryAsync(BFM.ContractModel.RsFactory mRsFactory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsFactory", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsFactoryResponse")]
        bool UpdateRsFactory(BFM.ContractModel.RsFactory mRsFactory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsFactory", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsFactoryResponse")]
        System.Threading.Tasks.Task<bool> UpdateRsFactoryAsync(BFM.ContractModel.RsFactory mRsFactory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsFactorys", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsFactorysResponse")]
        bool DelRsFactorys(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsFactorys", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsFactorysResponse")]
        System.Threading.Tasks.Task<bool> DelRsFactorysAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsFactory", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsFactoryResponse")]
        bool DelRsFactory(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsFactory", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsFactoryResponse")]
        System.Threading.Tasks.Task<bool> DelRsFactoryAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsFactorys", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsFactorysResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsFactory> GetRsFactorys(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsFactorys", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsFactorysResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsFactory>> GetRsFactorysAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsFactoryById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsFactoryByIdResponse")]
        BFM.ContractModel.RsFactory GetRsFactoryById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsFactoryById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsFactoryByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.RsFactory> GetRsFactoryByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsWorkShopByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsWorkShopByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsWorkShop> GetRsWorkShopByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsWorkShopByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsWorkShopByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsWorkShop>> GetRsWorkShopByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsWorkShopCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsWorkShopCountResponse")]
        int GetRsWorkShopCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsWorkShopCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsWorkShopCountResponse")]
        System.Threading.Tasks.Task<int> GetRsWorkShopCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsWorkShop", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsWorkShopResponse")]
        bool AddRsWorkShop(BFM.ContractModel.RsWorkShop mRsWorkShop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsWorkShop", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsWorkShopResponse")]
        System.Threading.Tasks.Task<bool> AddRsWorkShopAsync(BFM.ContractModel.RsWorkShop mRsWorkShop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsWorkShop", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsWorkShopResponse")]
        bool UpdateRsWorkShop(BFM.ContractModel.RsWorkShop mRsWorkShop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsWorkShop", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsWorkShopResponse")]
        System.Threading.Tasks.Task<bool> UpdateRsWorkShopAsync(BFM.ContractModel.RsWorkShop mRsWorkShop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsWorkShops", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsWorkShopsResponse")]
        bool DelRsWorkShops(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsWorkShops", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsWorkShopsResponse")]
        System.Threading.Tasks.Task<bool> DelRsWorkShopsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsWorkShop", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsWorkShopResponse")]
        bool DelRsWorkShop(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsWorkShop", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsWorkShopResponse")]
        System.Threading.Tasks.Task<bool> DelRsWorkShopAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsWorkShops", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsWorkShopsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsWorkShop> GetRsWorkShops(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsWorkShops", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsWorkShopsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsWorkShop>> GetRsWorkShopsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsWorkShopById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsWorkShopByIdResponse")]
        BFM.ContractModel.RsWorkShop GetRsWorkShopById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsWorkShopById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsWorkShopByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.RsWorkShop> GetRsWorkShopByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsLine> GetRsLineByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsLine>> GetRsLineByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineCountResponse")]
        int GetRsLineCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineCountResponse")]
        System.Threading.Tasks.Task<int> GetRsLineCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsLine", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsLineResponse")]
        bool AddRsLine(BFM.ContractModel.RsLine mRsLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsLine", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsLineResponse")]
        System.Threading.Tasks.Task<bool> AddRsLineAsync(BFM.ContractModel.RsLine mRsLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsLine", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsLineResponse")]
        bool UpdateRsLine(BFM.ContractModel.RsLine mRsLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsLine", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsLineResponse")]
        System.Threading.Tasks.Task<bool> UpdateRsLineAsync(BFM.ContractModel.RsLine mRsLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsLines", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsLinesResponse")]
        bool DelRsLines(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsLines", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsLinesResponse")]
        System.Threading.Tasks.Task<bool> DelRsLinesAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsLine", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsLineResponse")]
        bool DelRsLine(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsLine", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsLineResponse")]
        System.Threading.Tasks.Task<bool> DelRsLineAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLines", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLinesResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsLine> GetRsLines(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLines", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLinesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsLine>> GetRsLinesAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineByIdResponse")]
        BFM.ContractModel.RsLine GetRsLineById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.RsLine> GetRsLineByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineStationByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineStationByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsLineStation> GetRsLineStationByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineStationByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineStationByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsLineStation>> GetRsLineStationByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineStationCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineStationCountResponse")]
        int GetRsLineStationCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineStationCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineStationCountResponse")]
        System.Threading.Tasks.Task<int> GetRsLineStationCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsLineStation", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsLineStationResponse")]
        bool AddRsLineStation(BFM.ContractModel.RsLineStation mRsLineStation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsLineStation", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsLineStationResponse")]
        System.Threading.Tasks.Task<bool> AddRsLineStationAsync(BFM.ContractModel.RsLineStation mRsLineStation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsLineStation", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsLineStationResponse")]
        bool UpdateRsLineStation(BFM.ContractModel.RsLineStation mRsLineStation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsLineStation", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsLineStationResponse")]
        System.Threading.Tasks.Task<bool> UpdateRsLineStationAsync(BFM.ContractModel.RsLineStation mRsLineStation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsLineStations", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsLineStationsResponse")]
        bool DelRsLineStations(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsLineStations", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsLineStationsResponse")]
        System.Threading.Tasks.Task<bool> DelRsLineStationsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsLineStation", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsLineStationResponse")]
        bool DelRsLineStation(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsLineStation", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsLineStationResponse")]
        System.Threading.Tasks.Task<bool> DelRsLineStationAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineStations", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineStationsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsLineStation> GetRsLineStations(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineStations", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineStationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsLineStation>> GetRsLineStationsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineStationById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineStationByIdResponse")]
        BFM.ContractModel.RsLineStation GetRsLineStationById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineStationById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineStationByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.RsLineStation> GetRsLineStationByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsItemMasterByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsItemMasterByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsItemMaster> GetRsItemMasterByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsItemMasterByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsItemMasterByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsItemMaster>> GetRsItemMasterByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsItemMasterCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsItemMasterCountResponse")]
        int GetRsItemMasterCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsItemMasterCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsItemMasterCountResponse")]
        System.Threading.Tasks.Task<int> GetRsItemMasterCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsItemMaster", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsItemMasterResponse")]
        bool AddRsItemMaster(BFM.ContractModel.RsItemMaster mRsItemMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsItemMaster", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsItemMasterResponse")]
        System.Threading.Tasks.Task<bool> AddRsItemMasterAsync(BFM.ContractModel.RsItemMaster mRsItemMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsItemMaster", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsItemMasterResponse")]
        bool UpdateRsItemMaster(BFM.ContractModel.RsItemMaster mRsItemMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsItemMaster", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsItemMasterResponse")]
        System.Threading.Tasks.Task<bool> UpdateRsItemMasterAsync(BFM.ContractModel.RsItemMaster mRsItemMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsItemMasters", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsItemMastersResponse")]
        bool DelRsItemMasters(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsItemMasters", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsItemMastersResponse")]
        System.Threading.Tasks.Task<bool> DelRsItemMastersAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsItemMaster", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsItemMasterResponse")]
        bool DelRsItemMaster(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsItemMaster", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsItemMasterResponse")]
        System.Threading.Tasks.Task<bool> DelRsItemMasterAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsItemMasters", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsItemMastersResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsItemMaster> GetRsItemMasters(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsItemMasters", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsItemMastersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsItemMaster>> GetRsItemMastersAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsItemMasterById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsItemMasterByIdResponse")]
        BFM.ContractModel.RsItemMaster GetRsItemMasterById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsItemMasterById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsItemMasterByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.RsItemMaster> GetRsItemMasterByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineProductByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineProductByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsLineProduct> GetRsLineProductByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineProductByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineProductByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsLineProduct>> GetRsLineProductByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineProductCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineProductCountResponse")]
        int GetRsLineProductCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineProductCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineProductCountResponse")]
        System.Threading.Tasks.Task<int> GetRsLineProductCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsLineProduct", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsLineProductResponse")]
        bool AddRsLineProduct(BFM.ContractModel.RsLineProduct mRsLineProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsLineProduct", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsLineProductResponse")]
        System.Threading.Tasks.Task<bool> AddRsLineProductAsync(BFM.ContractModel.RsLineProduct mRsLineProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsLineProduct", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsLineProductResponse")]
        bool UpdateRsLineProduct(BFM.ContractModel.RsLineProduct mRsLineProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsLineProduct", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsLineProductResponse")]
        System.Threading.Tasks.Task<bool> UpdateRsLineProductAsync(BFM.ContractModel.RsLineProduct mRsLineProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsLineProducts", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsLineProductsResponse")]
        bool DelRsLineProducts(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsLineProducts", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsLineProductsResponse")]
        System.Threading.Tasks.Task<bool> DelRsLineProductsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsLineProduct", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsLineProductResponse")]
        bool DelRsLineProduct(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsLineProduct", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsLineProductResponse")]
        System.Threading.Tasks.Task<bool> DelRsLineProductAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineProducts", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineProductsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsLineProduct> GetRsLineProducts(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineProducts", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsLineProduct>> GetRsLineProductsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineProductById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineProductByIdResponse")]
        BFM.ContractModel.RsLineProduct GetRsLineProductById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsLineProductById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsLineProductByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.RsLineProduct> GetRsLineProductByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsBomByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsBomByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsBom> GetRsBomByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsBomByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsBomByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsBom>> GetRsBomByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsBomCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsBomCountResponse")]
        int GetRsBomCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsBomCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsBomCountResponse")]
        System.Threading.Tasks.Task<int> GetRsBomCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsBom", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsBomResponse")]
        bool AddRsBom(BFM.ContractModel.RsBom mRsBom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsBom", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsBomResponse")]
        System.Threading.Tasks.Task<bool> AddRsBomAsync(BFM.ContractModel.RsBom mRsBom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsBom", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsBomResponse")]
        bool UpdateRsBom(BFM.ContractModel.RsBom mRsBom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsBom", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsBomResponse")]
        System.Threading.Tasks.Task<bool> UpdateRsBomAsync(BFM.ContractModel.RsBom mRsBom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsBoms", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsBomsResponse")]
        bool DelRsBoms(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsBoms", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsBomsResponse")]
        System.Threading.Tasks.Task<bool> DelRsBomsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsBom", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsBomResponse")]
        bool DelRsBom(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsBom", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsBomResponse")]
        System.Threading.Tasks.Task<bool> DelRsBomAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsBoms", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsBomsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsBom> GetRsBoms(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsBoms", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsBomsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsBom>> GetRsBomsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsBomById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsBomByIdResponse")]
        BFM.ContractModel.RsBom GetRsBomById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsBomById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsBomByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.RsBom> GetRsBomByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingHeadByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingHeadByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsRoutingHead> GetRsRoutingHeadByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingHeadByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingHeadByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingHead>> GetRsRoutingHeadByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingHeadCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingHeadCountResponse")]
        int GetRsRoutingHeadCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingHeadCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingHeadCountResponse")]
        System.Threading.Tasks.Task<int> GetRsRoutingHeadCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsRoutingHead", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsRoutingHeadResponse")]
        bool AddRsRoutingHead(BFM.ContractModel.RsRoutingHead mRsRoutingHead);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsRoutingHead", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsRoutingHeadResponse")]
        System.Threading.Tasks.Task<bool> AddRsRoutingHeadAsync(BFM.ContractModel.RsRoutingHead mRsRoutingHead);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsRoutingHead", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsRoutingHeadResponse")]
        bool UpdateRsRoutingHead(BFM.ContractModel.RsRoutingHead mRsRoutingHead);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsRoutingHead", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsRoutingHeadResponse")]
        System.Threading.Tasks.Task<bool> UpdateRsRoutingHeadAsync(BFM.ContractModel.RsRoutingHead mRsRoutingHead);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingHeads", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingHeadsResponse")]
        bool DelRsRoutingHeads(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingHeads", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingHeadsResponse")]
        System.Threading.Tasks.Task<bool> DelRsRoutingHeadsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingHead", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingHeadResponse")]
        bool DelRsRoutingHead(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingHead", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingHeadResponse")]
        System.Threading.Tasks.Task<bool> DelRsRoutingHeadAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingHeads", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingHeadsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsRoutingHead> GetRsRoutingHeads(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingHeads", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingHeadsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingHead>> GetRsRoutingHeadsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingHeadById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingHeadByIdResponse")]
        BFM.ContractModel.RsRoutingHead GetRsRoutingHeadById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingHeadById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingHeadByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.RsRoutingHead> GetRsRoutingHeadByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingDetailByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingDetailByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsRoutingDetail> GetRsRoutingDetailByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingDetailByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingDetailByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingDetail>> GetRsRoutingDetailByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingDetailCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingDetailCountResponse")]
        int GetRsRoutingDetailCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingDetailCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingDetailCountResponse")]
        System.Threading.Tasks.Task<int> GetRsRoutingDetailCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsRoutingDetail", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsRoutingDetailResponse")]
        bool AddRsRoutingDetail(BFM.ContractModel.RsRoutingDetail mRsRoutingDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsRoutingDetail", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsRoutingDetailResponse")]
        System.Threading.Tasks.Task<bool> AddRsRoutingDetailAsync(BFM.ContractModel.RsRoutingDetail mRsRoutingDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsRoutingDetail", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsRoutingDetailResponse")]
        bool UpdateRsRoutingDetail(BFM.ContractModel.RsRoutingDetail mRsRoutingDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsRoutingDetail", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsRoutingDetailResponse")]
        System.Threading.Tasks.Task<bool> UpdateRsRoutingDetailAsync(BFM.ContractModel.RsRoutingDetail mRsRoutingDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingDetails", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingDetailsResponse")]
        bool DelRsRoutingDetails(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingDetails", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingDetailsResponse")]
        System.Threading.Tasks.Task<bool> DelRsRoutingDetailsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingDetail", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingDetailResponse")]
        bool DelRsRoutingDetail(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingDetail", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingDetailResponse")]
        System.Threading.Tasks.Task<bool> DelRsRoutingDetailAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingDetails", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingDetailsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsRoutingDetail> GetRsRoutingDetails(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingDetails", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingDetail>> GetRsRoutingDetailsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingDetailById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingDetailByIdResponse")]
        BFM.ContractModel.RsRoutingDetail GetRsRoutingDetailById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingDetailById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingDetailByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.RsRoutingDetail> GetRsRoutingDetailByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingToolsByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingToolsByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsRoutingTools> GetRsRoutingToolsByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingToolsByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingToolsByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingTools>> GetRsRoutingToolsByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingToolsCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingToolsCountResponse")]
        int GetRsRoutingToolsCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingToolsCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingToolsCountResponse")]
        System.Threading.Tasks.Task<int> GetRsRoutingToolsCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsRoutingTools", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsRoutingToolsResponse")]
        bool AddRsRoutingTools(BFM.ContractModel.RsRoutingTools mRsRoutingTools);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsRoutingTools", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsRoutingToolsResponse")]
        System.Threading.Tasks.Task<bool> AddRsRoutingToolsAsync(BFM.ContractModel.RsRoutingTools mRsRoutingTools);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsRoutingTools", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsRoutingToolsResponse")]
        bool UpdateRsRoutingTools(BFM.ContractModel.RsRoutingTools mRsRoutingTools);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsRoutingTools", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsRoutingToolsResponse")]
        System.Threading.Tasks.Task<bool> UpdateRsRoutingToolsAsync(BFM.ContractModel.RsRoutingTools mRsRoutingTools);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingToolss", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingToolssResponse")]
        bool DelRsRoutingToolss(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingToolss", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingToolssResponse")]
        System.Threading.Tasks.Task<bool> DelRsRoutingToolssAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingTools", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingToolsResponse")]
        bool DelRsRoutingTools(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingTools", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingToolsResponse")]
        System.Threading.Tasks.Task<bool> DelRsRoutingToolsAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingToolss", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingToolssResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsRoutingTools> GetRsRoutingToolss(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingToolss", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingToolssResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingTools>> GetRsRoutingToolssAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingToolsById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingToolsByIdResponse")]
        BFM.ContractModel.RsRoutingTools GetRsRoutingToolsById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingToolsById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingToolsByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.RsRoutingTools> GetRsRoutingToolsByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingParamByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingParamByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsRoutingParam> GetRsRoutingParamByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingParamByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingParamByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingParam>> GetRsRoutingParamByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingParamCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingParamCountResponse")]
        int GetRsRoutingParamCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingParamCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingParamCountResponse")]
        System.Threading.Tasks.Task<int> GetRsRoutingParamCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsRoutingParam", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsRoutingParamResponse")]
        bool AddRsRoutingParam(BFM.ContractModel.RsRoutingParam mRsRoutingParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsRoutingParam", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsRoutingParamResponse")]
        System.Threading.Tasks.Task<bool> AddRsRoutingParamAsync(BFM.ContractModel.RsRoutingParam mRsRoutingParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsRoutingParam", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsRoutingParamResponse")]
        bool UpdateRsRoutingParam(BFM.ContractModel.RsRoutingParam mRsRoutingParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsRoutingParam", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsRoutingParamResponse")]
        System.Threading.Tasks.Task<bool> UpdateRsRoutingParamAsync(BFM.ContractModel.RsRoutingParam mRsRoutingParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingParams", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingParamsResponse")]
        bool DelRsRoutingParams(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingParams", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingParamsResponse")]
        System.Threading.Tasks.Task<bool> DelRsRoutingParamsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingParam", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingParamResponse")]
        bool DelRsRoutingParam(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingParam", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingParamResponse")]
        System.Threading.Tasks.Task<bool> DelRsRoutingParamAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingParams", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingParamsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsRoutingParam> GetRsRoutingParams(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingParams", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingParamsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingParam>> GetRsRoutingParamsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingParamById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingParamByIdResponse")]
        BFM.ContractModel.RsRoutingParam GetRsRoutingParamById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingParamById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingParamByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.RsRoutingParam> GetRsRoutingParamByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingCheckByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingCheckByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsRoutingCheck> GetRsRoutingCheckByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingCheckByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingCheckByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingCheck>> GetRsRoutingCheckByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingCheckCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingCheckCountResponse")]
        int GetRsRoutingCheckCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingCheckCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingCheckCountResponse")]
        System.Threading.Tasks.Task<int> GetRsRoutingCheckCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsRoutingCheck", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsRoutingCheckResponse")]
        bool AddRsRoutingCheck(BFM.ContractModel.RsRoutingCheck mRsRoutingCheck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsRoutingCheck", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsRoutingCheckResponse")]
        System.Threading.Tasks.Task<bool> AddRsRoutingCheckAsync(BFM.ContractModel.RsRoutingCheck mRsRoutingCheck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsRoutingCheck", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsRoutingCheckResponse")]
        bool UpdateRsRoutingCheck(BFM.ContractModel.RsRoutingCheck mRsRoutingCheck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsRoutingCheck", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsRoutingCheckResponse")]
        System.Threading.Tasks.Task<bool> UpdateRsRoutingCheckAsync(BFM.ContractModel.RsRoutingCheck mRsRoutingCheck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingChecks", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingChecksResponse")]
        bool DelRsRoutingChecks(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingChecks", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingChecksResponse")]
        System.Threading.Tasks.Task<bool> DelRsRoutingChecksAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingCheck", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingCheckResponse")]
        bool DelRsRoutingCheck(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingCheck", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingCheckResponse")]
        System.Threading.Tasks.Task<bool> DelRsRoutingCheckAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingChecks", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingChecksResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsRoutingCheck> GetRsRoutingChecks(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingChecks", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingChecksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingCheck>> GetRsRoutingChecksAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingCheckById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingCheckByIdResponse")]
        BFM.ContractModel.RsRoutingCheck GetRsRoutingCheckById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingCheckById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingCheckByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.RsRoutingCheck> GetRsRoutingCheckByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingEquipByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingEquipByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsRoutingEquip> GetRsRoutingEquipByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingEquipByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingEquipByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingEquip>> GetRsRoutingEquipByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingEquipCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingEquipCountResponse")]
        int GetRsRoutingEquipCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingEquipCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingEquipCountResponse")]
        System.Threading.Tasks.Task<int> GetRsRoutingEquipCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsRoutingEquip", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsRoutingEquipResponse")]
        bool AddRsRoutingEquip(BFM.ContractModel.RsRoutingEquip mRsRoutingEquip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsRoutingEquip", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsRoutingEquipResponse")]
        System.Threading.Tasks.Task<bool> AddRsRoutingEquipAsync(BFM.ContractModel.RsRoutingEquip mRsRoutingEquip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsRoutingEquip", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsRoutingEquipResponse")]
        bool UpdateRsRoutingEquip(BFM.ContractModel.RsRoutingEquip mRsRoutingEquip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsRoutingEquip", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsRoutingEquipResponse")]
        System.Threading.Tasks.Task<bool> UpdateRsRoutingEquipAsync(BFM.ContractModel.RsRoutingEquip mRsRoutingEquip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingEquips", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingEquipsResponse")]
        bool DelRsRoutingEquips(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingEquips", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingEquipsResponse")]
        System.Threading.Tasks.Task<bool> DelRsRoutingEquipsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingEquip", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingEquipResponse")]
        bool DelRsRoutingEquip(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingEquip", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingEquipResponse")]
        System.Threading.Tasks.Task<bool> DelRsRoutingEquipAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingEquips", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingEquipsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsRoutingEquip> GetRsRoutingEquips(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingEquips", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingEquipsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingEquip>> GetRsRoutingEquipsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingEquipById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingEquipByIdResponse")]
        BFM.ContractModel.RsRoutingEquip GetRsRoutingEquipById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingEquipById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingEquipByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.RsRoutingEquip> GetRsRoutingEquipByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingItemByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingItemByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsRoutingItem> GetRsRoutingItemByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingItemByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingItemByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingItem>> GetRsRoutingItemByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingItemCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingItemCountResponse")]
        int GetRsRoutingItemCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingItemCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingItemCountResponse")]
        System.Threading.Tasks.Task<int> GetRsRoutingItemCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsRoutingItem", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsRoutingItemResponse")]
        bool AddRsRoutingItem(BFM.ContractModel.RsRoutingItem mRsRoutingItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsRoutingItem", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsRoutingItemResponse")]
        System.Threading.Tasks.Task<bool> AddRsRoutingItemAsync(BFM.ContractModel.RsRoutingItem mRsRoutingItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsRoutingItem", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsRoutingItemResponse")]
        bool UpdateRsRoutingItem(BFM.ContractModel.RsRoutingItem mRsRoutingItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsRoutingItem", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsRoutingItemResponse")]
        System.Threading.Tasks.Task<bool> UpdateRsRoutingItemAsync(BFM.ContractModel.RsRoutingItem mRsRoutingItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingItems", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingItemsResponse")]
        bool DelRsRoutingItems(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingItems", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingItemsResponse")]
        System.Threading.Tasks.Task<bool> DelRsRoutingItemsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingItem", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingItemResponse")]
        bool DelRsRoutingItem(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsRoutingItem", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsRoutingItemResponse")]
        System.Threading.Tasks.Task<bool> DelRsRoutingItemAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingItems", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingItemsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsRoutingItem> GetRsRoutingItems(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingItems", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingItemsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingItem>> GetRsRoutingItemsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingItemById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingItemByIdResponse")]
        BFM.ContractModel.RsRoutingItem GetRsRoutingItemById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsRoutingItemById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsRoutingItemByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.RsRoutingItem> GetRsRoutingItemByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsWorkCenterByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsWorkCenterByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsWorkCenter> GetRsWorkCenterByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsWorkCenterByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsWorkCenterByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsWorkCenter>> GetRsWorkCenterByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsWorkCenterCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsWorkCenterCountResponse")]
        int GetRsWorkCenterCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsWorkCenterCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsWorkCenterCountResponse")]
        System.Threading.Tasks.Task<int> GetRsWorkCenterCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsWorkCenter", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsWorkCenterResponse")]
        bool AddRsWorkCenter(BFM.ContractModel.RsWorkCenter mRsWorkCenter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsWorkCenter", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsWorkCenterResponse")]
        System.Threading.Tasks.Task<bool> AddRsWorkCenterAsync(BFM.ContractModel.RsWorkCenter mRsWorkCenter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsWorkCenter", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsWorkCenterResponse")]
        bool UpdateRsWorkCenter(BFM.ContractModel.RsWorkCenter mRsWorkCenter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsWorkCenter", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsWorkCenterResponse")]
        System.Threading.Tasks.Task<bool> UpdateRsWorkCenterAsync(BFM.ContractModel.RsWorkCenter mRsWorkCenter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsWorkCenters", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsWorkCentersResponse")]
        bool DelRsWorkCenters(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsWorkCenters", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsWorkCentersResponse")]
        System.Threading.Tasks.Task<bool> DelRsWorkCentersAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsWorkCenter", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsWorkCenterResponse")]
        bool DelRsWorkCenter(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsWorkCenter", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsWorkCenterResponse")]
        System.Threading.Tasks.Task<bool> DelRsWorkCenterAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsWorkCenters", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsWorkCentersResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsWorkCenter> GetRsWorkCenters(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsWorkCenters", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsWorkCentersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsWorkCenter>> GetRsWorkCentersAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsWorkCenterById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsWorkCenterByIdResponse")]
        BFM.ContractModel.RsWorkCenter GetRsWorkCenterById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsWorkCenterById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsWorkCenterByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.RsWorkCenter> GetRsWorkCenterByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsEquipMasterByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsEquipMasterByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsEquipMaster> GetRsEquipMasterByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsEquipMasterByPage", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsEquipMasterByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsEquipMaster>> GetRsEquipMasterByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsEquipMasterCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsEquipMasterCountResponse")]
        int GetRsEquipMasterCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsEquipMasterCount", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsEquipMasterCountResponse")]
        System.Threading.Tasks.Task<int> GetRsEquipMasterCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsEquipMaster", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsEquipMasterResponse")]
        bool AddRsEquipMaster(BFM.ContractModel.RsEquipMaster mRsEquipMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/AddRsEquipMaster", ReplyAction="http://fanuc.com.cn/IRSMService/AddRsEquipMasterResponse")]
        System.Threading.Tasks.Task<bool> AddRsEquipMasterAsync(BFM.ContractModel.RsEquipMaster mRsEquipMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsEquipMaster", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsEquipMasterResponse")]
        bool UpdateRsEquipMaster(BFM.ContractModel.RsEquipMaster mRsEquipMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/UpdateRsEquipMaster", ReplyAction="http://fanuc.com.cn/IRSMService/UpdateRsEquipMasterResponse")]
        System.Threading.Tasks.Task<bool> UpdateRsEquipMasterAsync(BFM.ContractModel.RsEquipMaster mRsEquipMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsEquipMasters", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsEquipMastersResponse")]
        bool DelRsEquipMasters(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsEquipMasters", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsEquipMastersResponse")]
        System.Threading.Tasks.Task<bool> DelRsEquipMastersAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsEquipMaster", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsEquipMasterResponse")]
        bool DelRsEquipMaster(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/DelRsEquipMaster", ReplyAction="http://fanuc.com.cn/IRSMService/DelRsEquipMasterResponse")]
        System.Threading.Tasks.Task<bool> DelRsEquipMasterAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsEquipMasters", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsEquipMastersResponse")]
        System.Collections.Generic.List<BFM.ContractModel.RsEquipMaster> GetRsEquipMasters(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsEquipMasters", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsEquipMastersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsEquipMaster>> GetRsEquipMastersAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsEquipMasterById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsEquipMasterByIdResponse")]
        BFM.ContractModel.RsEquipMaster GetRsEquipMasterById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IRSMService/GetRsEquipMasterById", ReplyAction="http://fanuc.com.cn/IRSMService/GetRsEquipMasterByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.RsEquipMaster> GetRsEquipMasterByIdAsync(string Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRSMServiceChannel : BFM.Server.DataAsset.RSMService.IRSMService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RSMServiceClient : System.ServiceModel.ClientBase<BFM.Server.DataAsset.RSMService.IRSMService>, BFM.Server.DataAsset.RSMService.IRSMService {
        
        public RSMServiceClient() {
        }
        
        public RSMServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RSMServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RSMServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RSMServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsFactory> GetRsFactoryByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsFactoryByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsFactory>> GetRsFactoryByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsFactoryByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetRsFactoryCount(string sWhere) {
            return base.Channel.GetRsFactoryCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetRsFactoryCountAsync(string sWhere) {
            return base.Channel.GetRsFactoryCountAsync(sWhere);
        }
        
        public bool AddRsFactory(BFM.ContractModel.RsFactory mRsFactory) {
            return base.Channel.AddRsFactory(mRsFactory);
        }
        
        public System.Threading.Tasks.Task<bool> AddRsFactoryAsync(BFM.ContractModel.RsFactory mRsFactory) {
            return base.Channel.AddRsFactoryAsync(mRsFactory);
        }
        
        public bool UpdateRsFactory(BFM.ContractModel.RsFactory mRsFactory) {
            return base.Channel.UpdateRsFactory(mRsFactory);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRsFactoryAsync(BFM.ContractModel.RsFactory mRsFactory) {
            return base.Channel.UpdateRsFactoryAsync(mRsFactory);
        }
        
        public bool DelRsFactorys(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsFactorys(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsFactorysAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsFactorysAsync(Ids);
        }
        
        public bool DelRsFactory(string Id) {
            return base.Channel.DelRsFactory(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsFactoryAsync(string Id) {
            return base.Channel.DelRsFactoryAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsFactory> GetRsFactorys(string sWhere) {
            return base.Channel.GetRsFactorys(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsFactory>> GetRsFactorysAsync(string sWhere) {
            return base.Channel.GetRsFactorysAsync(sWhere);
        }
        
        public BFM.ContractModel.RsFactory GetRsFactoryById(string Id) {
            return base.Channel.GetRsFactoryById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.RsFactory> GetRsFactoryByIdAsync(string Id) {
            return base.Channel.GetRsFactoryByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsWorkShop> GetRsWorkShopByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsWorkShopByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsWorkShop>> GetRsWorkShopByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsWorkShopByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetRsWorkShopCount(string sWhere) {
            return base.Channel.GetRsWorkShopCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetRsWorkShopCountAsync(string sWhere) {
            return base.Channel.GetRsWorkShopCountAsync(sWhere);
        }
        
        public bool AddRsWorkShop(BFM.ContractModel.RsWorkShop mRsWorkShop) {
            return base.Channel.AddRsWorkShop(mRsWorkShop);
        }
        
        public System.Threading.Tasks.Task<bool> AddRsWorkShopAsync(BFM.ContractModel.RsWorkShop mRsWorkShop) {
            return base.Channel.AddRsWorkShopAsync(mRsWorkShop);
        }
        
        public bool UpdateRsWorkShop(BFM.ContractModel.RsWorkShop mRsWorkShop) {
            return base.Channel.UpdateRsWorkShop(mRsWorkShop);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRsWorkShopAsync(BFM.ContractModel.RsWorkShop mRsWorkShop) {
            return base.Channel.UpdateRsWorkShopAsync(mRsWorkShop);
        }
        
        public bool DelRsWorkShops(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsWorkShops(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsWorkShopsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsWorkShopsAsync(Ids);
        }
        
        public bool DelRsWorkShop(string Id) {
            return base.Channel.DelRsWorkShop(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsWorkShopAsync(string Id) {
            return base.Channel.DelRsWorkShopAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsWorkShop> GetRsWorkShops(string sWhere) {
            return base.Channel.GetRsWorkShops(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsWorkShop>> GetRsWorkShopsAsync(string sWhere) {
            return base.Channel.GetRsWorkShopsAsync(sWhere);
        }
        
        public BFM.ContractModel.RsWorkShop GetRsWorkShopById(string Id) {
            return base.Channel.GetRsWorkShopById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.RsWorkShop> GetRsWorkShopByIdAsync(string Id) {
            return base.Channel.GetRsWorkShopByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsLine> GetRsLineByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsLineByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsLine>> GetRsLineByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsLineByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetRsLineCount(string sWhere) {
            return base.Channel.GetRsLineCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetRsLineCountAsync(string sWhere) {
            return base.Channel.GetRsLineCountAsync(sWhere);
        }
        
        public bool AddRsLine(BFM.ContractModel.RsLine mRsLine) {
            return base.Channel.AddRsLine(mRsLine);
        }
        
        public System.Threading.Tasks.Task<bool> AddRsLineAsync(BFM.ContractModel.RsLine mRsLine) {
            return base.Channel.AddRsLineAsync(mRsLine);
        }
        
        public bool UpdateRsLine(BFM.ContractModel.RsLine mRsLine) {
            return base.Channel.UpdateRsLine(mRsLine);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRsLineAsync(BFM.ContractModel.RsLine mRsLine) {
            return base.Channel.UpdateRsLineAsync(mRsLine);
        }
        
        public bool DelRsLines(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsLines(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsLinesAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsLinesAsync(Ids);
        }
        
        public bool DelRsLine(string Id) {
            return base.Channel.DelRsLine(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsLineAsync(string Id) {
            return base.Channel.DelRsLineAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsLine> GetRsLines(string sWhere) {
            return base.Channel.GetRsLines(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsLine>> GetRsLinesAsync(string sWhere) {
            return base.Channel.GetRsLinesAsync(sWhere);
        }
        
        public BFM.ContractModel.RsLine GetRsLineById(string Id) {
            return base.Channel.GetRsLineById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.RsLine> GetRsLineByIdAsync(string Id) {
            return base.Channel.GetRsLineByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsLineStation> GetRsLineStationByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsLineStationByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsLineStation>> GetRsLineStationByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsLineStationByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetRsLineStationCount(string sWhere) {
            return base.Channel.GetRsLineStationCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetRsLineStationCountAsync(string sWhere) {
            return base.Channel.GetRsLineStationCountAsync(sWhere);
        }
        
        public bool AddRsLineStation(BFM.ContractModel.RsLineStation mRsLineStation) {
            return base.Channel.AddRsLineStation(mRsLineStation);
        }
        
        public System.Threading.Tasks.Task<bool> AddRsLineStationAsync(BFM.ContractModel.RsLineStation mRsLineStation) {
            return base.Channel.AddRsLineStationAsync(mRsLineStation);
        }
        
        public bool UpdateRsLineStation(BFM.ContractModel.RsLineStation mRsLineStation) {
            return base.Channel.UpdateRsLineStation(mRsLineStation);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRsLineStationAsync(BFM.ContractModel.RsLineStation mRsLineStation) {
            return base.Channel.UpdateRsLineStationAsync(mRsLineStation);
        }
        
        public bool DelRsLineStations(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsLineStations(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsLineStationsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsLineStationsAsync(Ids);
        }
        
        public bool DelRsLineStation(string Id) {
            return base.Channel.DelRsLineStation(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsLineStationAsync(string Id) {
            return base.Channel.DelRsLineStationAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsLineStation> GetRsLineStations(string sWhere) {
            return base.Channel.GetRsLineStations(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsLineStation>> GetRsLineStationsAsync(string sWhere) {
            return base.Channel.GetRsLineStationsAsync(sWhere);
        }
        
        public BFM.ContractModel.RsLineStation GetRsLineStationById(string Id) {
            return base.Channel.GetRsLineStationById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.RsLineStation> GetRsLineStationByIdAsync(string Id) {
            return base.Channel.GetRsLineStationByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsItemMaster> GetRsItemMasterByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsItemMasterByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsItemMaster>> GetRsItemMasterByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsItemMasterByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetRsItemMasterCount(string sWhere) {
            return base.Channel.GetRsItemMasterCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetRsItemMasterCountAsync(string sWhere) {
            return base.Channel.GetRsItemMasterCountAsync(sWhere);
        }
        
        public bool AddRsItemMaster(BFM.ContractModel.RsItemMaster mRsItemMaster) {
            return base.Channel.AddRsItemMaster(mRsItemMaster);
        }
        
        public System.Threading.Tasks.Task<bool> AddRsItemMasterAsync(BFM.ContractModel.RsItemMaster mRsItemMaster) {
            return base.Channel.AddRsItemMasterAsync(mRsItemMaster);
        }
        
        public bool UpdateRsItemMaster(BFM.ContractModel.RsItemMaster mRsItemMaster) {
            return base.Channel.UpdateRsItemMaster(mRsItemMaster);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRsItemMasterAsync(BFM.ContractModel.RsItemMaster mRsItemMaster) {
            return base.Channel.UpdateRsItemMasterAsync(mRsItemMaster);
        }
        
        public bool DelRsItemMasters(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsItemMasters(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsItemMastersAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsItemMastersAsync(Ids);
        }
        
        public bool DelRsItemMaster(string Id) {
            return base.Channel.DelRsItemMaster(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsItemMasterAsync(string Id) {
            return base.Channel.DelRsItemMasterAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsItemMaster> GetRsItemMasters(string sWhere) {
            return base.Channel.GetRsItemMasters(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsItemMaster>> GetRsItemMastersAsync(string sWhere) {
            return base.Channel.GetRsItemMastersAsync(sWhere);
        }
        
        public BFM.ContractModel.RsItemMaster GetRsItemMasterById(string Id) {
            return base.Channel.GetRsItemMasterById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.RsItemMaster> GetRsItemMasterByIdAsync(string Id) {
            return base.Channel.GetRsItemMasterByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsLineProduct> GetRsLineProductByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsLineProductByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsLineProduct>> GetRsLineProductByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsLineProductByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetRsLineProductCount(string sWhere) {
            return base.Channel.GetRsLineProductCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetRsLineProductCountAsync(string sWhere) {
            return base.Channel.GetRsLineProductCountAsync(sWhere);
        }
        
        public bool AddRsLineProduct(BFM.ContractModel.RsLineProduct mRsLineProduct) {
            return base.Channel.AddRsLineProduct(mRsLineProduct);
        }
        
        public System.Threading.Tasks.Task<bool> AddRsLineProductAsync(BFM.ContractModel.RsLineProduct mRsLineProduct) {
            return base.Channel.AddRsLineProductAsync(mRsLineProduct);
        }
        
        public bool UpdateRsLineProduct(BFM.ContractModel.RsLineProduct mRsLineProduct) {
            return base.Channel.UpdateRsLineProduct(mRsLineProduct);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRsLineProductAsync(BFM.ContractModel.RsLineProduct mRsLineProduct) {
            return base.Channel.UpdateRsLineProductAsync(mRsLineProduct);
        }
        
        public bool DelRsLineProducts(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsLineProducts(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsLineProductsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsLineProductsAsync(Ids);
        }
        
        public bool DelRsLineProduct(string Id) {
            return base.Channel.DelRsLineProduct(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsLineProductAsync(string Id) {
            return base.Channel.DelRsLineProductAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsLineProduct> GetRsLineProducts(string sWhere) {
            return base.Channel.GetRsLineProducts(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsLineProduct>> GetRsLineProductsAsync(string sWhere) {
            return base.Channel.GetRsLineProductsAsync(sWhere);
        }
        
        public BFM.ContractModel.RsLineProduct GetRsLineProductById(string Id) {
            return base.Channel.GetRsLineProductById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.RsLineProduct> GetRsLineProductByIdAsync(string Id) {
            return base.Channel.GetRsLineProductByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsBom> GetRsBomByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsBomByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsBom>> GetRsBomByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsBomByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetRsBomCount(string sWhere) {
            return base.Channel.GetRsBomCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetRsBomCountAsync(string sWhere) {
            return base.Channel.GetRsBomCountAsync(sWhere);
        }
        
        public bool AddRsBom(BFM.ContractModel.RsBom mRsBom) {
            return base.Channel.AddRsBom(mRsBom);
        }
        
        public System.Threading.Tasks.Task<bool> AddRsBomAsync(BFM.ContractModel.RsBom mRsBom) {
            return base.Channel.AddRsBomAsync(mRsBom);
        }
        
        public bool UpdateRsBom(BFM.ContractModel.RsBom mRsBom) {
            return base.Channel.UpdateRsBom(mRsBom);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRsBomAsync(BFM.ContractModel.RsBom mRsBom) {
            return base.Channel.UpdateRsBomAsync(mRsBom);
        }
        
        public bool DelRsBoms(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsBoms(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsBomsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsBomsAsync(Ids);
        }
        
        public bool DelRsBom(string Id) {
            return base.Channel.DelRsBom(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsBomAsync(string Id) {
            return base.Channel.DelRsBomAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsBom> GetRsBoms(string sWhere) {
            return base.Channel.GetRsBoms(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsBom>> GetRsBomsAsync(string sWhere) {
            return base.Channel.GetRsBomsAsync(sWhere);
        }
        
        public BFM.ContractModel.RsBom GetRsBomById(string Id) {
            return base.Channel.GetRsBomById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.RsBom> GetRsBomByIdAsync(string Id) {
            return base.Channel.GetRsBomByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsRoutingHead> GetRsRoutingHeadByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsRoutingHeadByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingHead>> GetRsRoutingHeadByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsRoutingHeadByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetRsRoutingHeadCount(string sWhere) {
            return base.Channel.GetRsRoutingHeadCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetRsRoutingHeadCountAsync(string sWhere) {
            return base.Channel.GetRsRoutingHeadCountAsync(sWhere);
        }
        
        public bool AddRsRoutingHead(BFM.ContractModel.RsRoutingHead mRsRoutingHead) {
            return base.Channel.AddRsRoutingHead(mRsRoutingHead);
        }
        
        public System.Threading.Tasks.Task<bool> AddRsRoutingHeadAsync(BFM.ContractModel.RsRoutingHead mRsRoutingHead) {
            return base.Channel.AddRsRoutingHeadAsync(mRsRoutingHead);
        }
        
        public bool UpdateRsRoutingHead(BFM.ContractModel.RsRoutingHead mRsRoutingHead) {
            return base.Channel.UpdateRsRoutingHead(mRsRoutingHead);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRsRoutingHeadAsync(BFM.ContractModel.RsRoutingHead mRsRoutingHead) {
            return base.Channel.UpdateRsRoutingHeadAsync(mRsRoutingHead);
        }
        
        public bool DelRsRoutingHeads(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsRoutingHeads(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsRoutingHeadsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsRoutingHeadsAsync(Ids);
        }
        
        public bool DelRsRoutingHead(string Id) {
            return base.Channel.DelRsRoutingHead(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsRoutingHeadAsync(string Id) {
            return base.Channel.DelRsRoutingHeadAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsRoutingHead> GetRsRoutingHeads(string sWhere) {
            return base.Channel.GetRsRoutingHeads(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingHead>> GetRsRoutingHeadsAsync(string sWhere) {
            return base.Channel.GetRsRoutingHeadsAsync(sWhere);
        }
        
        public BFM.ContractModel.RsRoutingHead GetRsRoutingHeadById(string Id) {
            return base.Channel.GetRsRoutingHeadById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.RsRoutingHead> GetRsRoutingHeadByIdAsync(string Id) {
            return base.Channel.GetRsRoutingHeadByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsRoutingDetail> GetRsRoutingDetailByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsRoutingDetailByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingDetail>> GetRsRoutingDetailByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsRoutingDetailByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetRsRoutingDetailCount(string sWhere) {
            return base.Channel.GetRsRoutingDetailCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetRsRoutingDetailCountAsync(string sWhere) {
            return base.Channel.GetRsRoutingDetailCountAsync(sWhere);
        }
        
        public bool AddRsRoutingDetail(BFM.ContractModel.RsRoutingDetail mRsRoutingDetail) {
            return base.Channel.AddRsRoutingDetail(mRsRoutingDetail);
        }
        
        public System.Threading.Tasks.Task<bool> AddRsRoutingDetailAsync(BFM.ContractModel.RsRoutingDetail mRsRoutingDetail) {
            return base.Channel.AddRsRoutingDetailAsync(mRsRoutingDetail);
        }
        
        public bool UpdateRsRoutingDetail(BFM.ContractModel.RsRoutingDetail mRsRoutingDetail) {
            return base.Channel.UpdateRsRoutingDetail(mRsRoutingDetail);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRsRoutingDetailAsync(BFM.ContractModel.RsRoutingDetail mRsRoutingDetail) {
            return base.Channel.UpdateRsRoutingDetailAsync(mRsRoutingDetail);
        }
        
        public bool DelRsRoutingDetails(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsRoutingDetails(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsRoutingDetailsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsRoutingDetailsAsync(Ids);
        }
        
        public bool DelRsRoutingDetail(string Id) {
            return base.Channel.DelRsRoutingDetail(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsRoutingDetailAsync(string Id) {
            return base.Channel.DelRsRoutingDetailAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsRoutingDetail> GetRsRoutingDetails(string sWhere) {
            return base.Channel.GetRsRoutingDetails(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingDetail>> GetRsRoutingDetailsAsync(string sWhere) {
            return base.Channel.GetRsRoutingDetailsAsync(sWhere);
        }
        
        public BFM.ContractModel.RsRoutingDetail GetRsRoutingDetailById(string Id) {
            return base.Channel.GetRsRoutingDetailById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.RsRoutingDetail> GetRsRoutingDetailByIdAsync(string Id) {
            return base.Channel.GetRsRoutingDetailByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsRoutingTools> GetRsRoutingToolsByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsRoutingToolsByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingTools>> GetRsRoutingToolsByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsRoutingToolsByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetRsRoutingToolsCount(string sWhere) {
            return base.Channel.GetRsRoutingToolsCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetRsRoutingToolsCountAsync(string sWhere) {
            return base.Channel.GetRsRoutingToolsCountAsync(sWhere);
        }
        
        public bool AddRsRoutingTools(BFM.ContractModel.RsRoutingTools mRsRoutingTools) {
            return base.Channel.AddRsRoutingTools(mRsRoutingTools);
        }
        
        public System.Threading.Tasks.Task<bool> AddRsRoutingToolsAsync(BFM.ContractModel.RsRoutingTools mRsRoutingTools) {
            return base.Channel.AddRsRoutingToolsAsync(mRsRoutingTools);
        }
        
        public bool UpdateRsRoutingTools(BFM.ContractModel.RsRoutingTools mRsRoutingTools) {
            return base.Channel.UpdateRsRoutingTools(mRsRoutingTools);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRsRoutingToolsAsync(BFM.ContractModel.RsRoutingTools mRsRoutingTools) {
            return base.Channel.UpdateRsRoutingToolsAsync(mRsRoutingTools);
        }
        
        public bool DelRsRoutingToolss(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsRoutingToolss(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsRoutingToolssAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsRoutingToolssAsync(Ids);
        }
        
        public bool DelRsRoutingTools(string Id) {
            return base.Channel.DelRsRoutingTools(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsRoutingToolsAsync(string Id) {
            return base.Channel.DelRsRoutingToolsAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsRoutingTools> GetRsRoutingToolss(string sWhere) {
            return base.Channel.GetRsRoutingToolss(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingTools>> GetRsRoutingToolssAsync(string sWhere) {
            return base.Channel.GetRsRoutingToolssAsync(sWhere);
        }
        
        public BFM.ContractModel.RsRoutingTools GetRsRoutingToolsById(string Id) {
            return base.Channel.GetRsRoutingToolsById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.RsRoutingTools> GetRsRoutingToolsByIdAsync(string Id) {
            return base.Channel.GetRsRoutingToolsByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsRoutingParam> GetRsRoutingParamByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsRoutingParamByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingParam>> GetRsRoutingParamByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsRoutingParamByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetRsRoutingParamCount(string sWhere) {
            return base.Channel.GetRsRoutingParamCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetRsRoutingParamCountAsync(string sWhere) {
            return base.Channel.GetRsRoutingParamCountAsync(sWhere);
        }
        
        public bool AddRsRoutingParam(BFM.ContractModel.RsRoutingParam mRsRoutingParam) {
            return base.Channel.AddRsRoutingParam(mRsRoutingParam);
        }
        
        public System.Threading.Tasks.Task<bool> AddRsRoutingParamAsync(BFM.ContractModel.RsRoutingParam mRsRoutingParam) {
            return base.Channel.AddRsRoutingParamAsync(mRsRoutingParam);
        }
        
        public bool UpdateRsRoutingParam(BFM.ContractModel.RsRoutingParam mRsRoutingParam) {
            return base.Channel.UpdateRsRoutingParam(mRsRoutingParam);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRsRoutingParamAsync(BFM.ContractModel.RsRoutingParam mRsRoutingParam) {
            return base.Channel.UpdateRsRoutingParamAsync(mRsRoutingParam);
        }
        
        public bool DelRsRoutingParams(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsRoutingParams(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsRoutingParamsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsRoutingParamsAsync(Ids);
        }
        
        public bool DelRsRoutingParam(string Id) {
            return base.Channel.DelRsRoutingParam(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsRoutingParamAsync(string Id) {
            return base.Channel.DelRsRoutingParamAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsRoutingParam> GetRsRoutingParams(string sWhere) {
            return base.Channel.GetRsRoutingParams(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingParam>> GetRsRoutingParamsAsync(string sWhere) {
            return base.Channel.GetRsRoutingParamsAsync(sWhere);
        }
        
        public BFM.ContractModel.RsRoutingParam GetRsRoutingParamById(string Id) {
            return base.Channel.GetRsRoutingParamById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.RsRoutingParam> GetRsRoutingParamByIdAsync(string Id) {
            return base.Channel.GetRsRoutingParamByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsRoutingCheck> GetRsRoutingCheckByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsRoutingCheckByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingCheck>> GetRsRoutingCheckByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsRoutingCheckByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetRsRoutingCheckCount(string sWhere) {
            return base.Channel.GetRsRoutingCheckCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetRsRoutingCheckCountAsync(string sWhere) {
            return base.Channel.GetRsRoutingCheckCountAsync(sWhere);
        }
        
        public bool AddRsRoutingCheck(BFM.ContractModel.RsRoutingCheck mRsRoutingCheck) {
            return base.Channel.AddRsRoutingCheck(mRsRoutingCheck);
        }
        
        public System.Threading.Tasks.Task<bool> AddRsRoutingCheckAsync(BFM.ContractModel.RsRoutingCheck mRsRoutingCheck) {
            return base.Channel.AddRsRoutingCheckAsync(mRsRoutingCheck);
        }
        
        public bool UpdateRsRoutingCheck(BFM.ContractModel.RsRoutingCheck mRsRoutingCheck) {
            return base.Channel.UpdateRsRoutingCheck(mRsRoutingCheck);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRsRoutingCheckAsync(BFM.ContractModel.RsRoutingCheck mRsRoutingCheck) {
            return base.Channel.UpdateRsRoutingCheckAsync(mRsRoutingCheck);
        }
        
        public bool DelRsRoutingChecks(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsRoutingChecks(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsRoutingChecksAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsRoutingChecksAsync(Ids);
        }
        
        public bool DelRsRoutingCheck(string Id) {
            return base.Channel.DelRsRoutingCheck(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsRoutingCheckAsync(string Id) {
            return base.Channel.DelRsRoutingCheckAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsRoutingCheck> GetRsRoutingChecks(string sWhere) {
            return base.Channel.GetRsRoutingChecks(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingCheck>> GetRsRoutingChecksAsync(string sWhere) {
            return base.Channel.GetRsRoutingChecksAsync(sWhere);
        }
        
        public BFM.ContractModel.RsRoutingCheck GetRsRoutingCheckById(string Id) {
            return base.Channel.GetRsRoutingCheckById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.RsRoutingCheck> GetRsRoutingCheckByIdAsync(string Id) {
            return base.Channel.GetRsRoutingCheckByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsRoutingEquip> GetRsRoutingEquipByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsRoutingEquipByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingEquip>> GetRsRoutingEquipByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsRoutingEquipByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetRsRoutingEquipCount(string sWhere) {
            return base.Channel.GetRsRoutingEquipCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetRsRoutingEquipCountAsync(string sWhere) {
            return base.Channel.GetRsRoutingEquipCountAsync(sWhere);
        }
        
        public bool AddRsRoutingEquip(BFM.ContractModel.RsRoutingEquip mRsRoutingEquip) {
            return base.Channel.AddRsRoutingEquip(mRsRoutingEquip);
        }
        
        public System.Threading.Tasks.Task<bool> AddRsRoutingEquipAsync(BFM.ContractModel.RsRoutingEquip mRsRoutingEquip) {
            return base.Channel.AddRsRoutingEquipAsync(mRsRoutingEquip);
        }
        
        public bool UpdateRsRoutingEquip(BFM.ContractModel.RsRoutingEquip mRsRoutingEquip) {
            return base.Channel.UpdateRsRoutingEquip(mRsRoutingEquip);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRsRoutingEquipAsync(BFM.ContractModel.RsRoutingEquip mRsRoutingEquip) {
            return base.Channel.UpdateRsRoutingEquipAsync(mRsRoutingEquip);
        }
        
        public bool DelRsRoutingEquips(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsRoutingEquips(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsRoutingEquipsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsRoutingEquipsAsync(Ids);
        }
        
        public bool DelRsRoutingEquip(string Id) {
            return base.Channel.DelRsRoutingEquip(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsRoutingEquipAsync(string Id) {
            return base.Channel.DelRsRoutingEquipAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsRoutingEquip> GetRsRoutingEquips(string sWhere) {
            return base.Channel.GetRsRoutingEquips(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingEquip>> GetRsRoutingEquipsAsync(string sWhere) {
            return base.Channel.GetRsRoutingEquipsAsync(sWhere);
        }
        
        public BFM.ContractModel.RsRoutingEquip GetRsRoutingEquipById(string Id) {
            return base.Channel.GetRsRoutingEquipById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.RsRoutingEquip> GetRsRoutingEquipByIdAsync(string Id) {
            return base.Channel.GetRsRoutingEquipByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsRoutingItem> GetRsRoutingItemByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsRoutingItemByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingItem>> GetRsRoutingItemByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsRoutingItemByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetRsRoutingItemCount(string sWhere) {
            return base.Channel.GetRsRoutingItemCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetRsRoutingItemCountAsync(string sWhere) {
            return base.Channel.GetRsRoutingItemCountAsync(sWhere);
        }
        
        public bool AddRsRoutingItem(BFM.ContractModel.RsRoutingItem mRsRoutingItem) {
            return base.Channel.AddRsRoutingItem(mRsRoutingItem);
        }
        
        public System.Threading.Tasks.Task<bool> AddRsRoutingItemAsync(BFM.ContractModel.RsRoutingItem mRsRoutingItem) {
            return base.Channel.AddRsRoutingItemAsync(mRsRoutingItem);
        }
        
        public bool UpdateRsRoutingItem(BFM.ContractModel.RsRoutingItem mRsRoutingItem) {
            return base.Channel.UpdateRsRoutingItem(mRsRoutingItem);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRsRoutingItemAsync(BFM.ContractModel.RsRoutingItem mRsRoutingItem) {
            return base.Channel.UpdateRsRoutingItemAsync(mRsRoutingItem);
        }
        
        public bool DelRsRoutingItems(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsRoutingItems(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsRoutingItemsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsRoutingItemsAsync(Ids);
        }
        
        public bool DelRsRoutingItem(string Id) {
            return base.Channel.DelRsRoutingItem(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsRoutingItemAsync(string Id) {
            return base.Channel.DelRsRoutingItemAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsRoutingItem> GetRsRoutingItems(string sWhere) {
            return base.Channel.GetRsRoutingItems(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsRoutingItem>> GetRsRoutingItemsAsync(string sWhere) {
            return base.Channel.GetRsRoutingItemsAsync(sWhere);
        }
        
        public BFM.ContractModel.RsRoutingItem GetRsRoutingItemById(string Id) {
            return base.Channel.GetRsRoutingItemById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.RsRoutingItem> GetRsRoutingItemByIdAsync(string Id) {
            return base.Channel.GetRsRoutingItemByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsWorkCenter> GetRsWorkCenterByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsWorkCenterByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsWorkCenter>> GetRsWorkCenterByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsWorkCenterByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetRsWorkCenterCount(string sWhere) {
            return base.Channel.GetRsWorkCenterCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetRsWorkCenterCountAsync(string sWhere) {
            return base.Channel.GetRsWorkCenterCountAsync(sWhere);
        }
        
        public bool AddRsWorkCenter(BFM.ContractModel.RsWorkCenter mRsWorkCenter) {
            return base.Channel.AddRsWorkCenter(mRsWorkCenter);
        }
        
        public System.Threading.Tasks.Task<bool> AddRsWorkCenterAsync(BFM.ContractModel.RsWorkCenter mRsWorkCenter) {
            return base.Channel.AddRsWorkCenterAsync(mRsWorkCenter);
        }
        
        public bool UpdateRsWorkCenter(BFM.ContractModel.RsWorkCenter mRsWorkCenter) {
            return base.Channel.UpdateRsWorkCenter(mRsWorkCenter);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRsWorkCenterAsync(BFM.ContractModel.RsWorkCenter mRsWorkCenter) {
            return base.Channel.UpdateRsWorkCenterAsync(mRsWorkCenter);
        }
        
        public bool DelRsWorkCenters(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsWorkCenters(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsWorkCentersAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsWorkCentersAsync(Ids);
        }
        
        public bool DelRsWorkCenter(string Id) {
            return base.Channel.DelRsWorkCenter(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsWorkCenterAsync(string Id) {
            return base.Channel.DelRsWorkCenterAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsWorkCenter> GetRsWorkCenters(string sWhere) {
            return base.Channel.GetRsWorkCenters(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsWorkCenter>> GetRsWorkCentersAsync(string sWhere) {
            return base.Channel.GetRsWorkCentersAsync(sWhere);
        }
        
        public BFM.ContractModel.RsWorkCenter GetRsWorkCenterById(string Id) {
            return base.Channel.GetRsWorkCenterById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.RsWorkCenter> GetRsWorkCenterByIdAsync(string Id) {
            return base.Channel.GetRsWorkCenterByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsEquipMaster> GetRsEquipMasterByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsEquipMasterByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsEquipMaster>> GetRsEquipMasterByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetRsEquipMasterByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetRsEquipMasterCount(string sWhere) {
            return base.Channel.GetRsEquipMasterCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetRsEquipMasterCountAsync(string sWhere) {
            return base.Channel.GetRsEquipMasterCountAsync(sWhere);
        }
        
        public bool AddRsEquipMaster(BFM.ContractModel.RsEquipMaster mRsEquipMaster) {
            return base.Channel.AddRsEquipMaster(mRsEquipMaster);
        }
        
        public System.Threading.Tasks.Task<bool> AddRsEquipMasterAsync(BFM.ContractModel.RsEquipMaster mRsEquipMaster) {
            return base.Channel.AddRsEquipMasterAsync(mRsEquipMaster);
        }
        
        public bool UpdateRsEquipMaster(BFM.ContractModel.RsEquipMaster mRsEquipMaster) {
            return base.Channel.UpdateRsEquipMaster(mRsEquipMaster);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRsEquipMasterAsync(BFM.ContractModel.RsEquipMaster mRsEquipMaster) {
            return base.Channel.UpdateRsEquipMasterAsync(mRsEquipMaster);
        }
        
        public bool DelRsEquipMasters(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsEquipMasters(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsEquipMastersAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelRsEquipMastersAsync(Ids);
        }
        
        public bool DelRsEquipMaster(string Id) {
            return base.Channel.DelRsEquipMaster(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelRsEquipMasterAsync(string Id) {
            return base.Channel.DelRsEquipMasterAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.RsEquipMaster> GetRsEquipMasters(string sWhere) {
            return base.Channel.GetRsEquipMasters(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.RsEquipMaster>> GetRsEquipMastersAsync(string sWhere) {
            return base.Channel.GetRsEquipMastersAsync(sWhere);
        }
        
        public BFM.ContractModel.RsEquipMaster GetRsEquipMasterById(string Id) {
            return base.Channel.GetRsEquipMasterById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.RsEquipMaster> GetRsEquipMasterByIdAsync(string Id) {
            return base.Channel.GetRsEquipMasterByIdAsync(Id);
        }
    }
}
