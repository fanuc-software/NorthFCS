//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BFM.Server.DataAsset.TMSService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://fanuc.com.cn/", ConfigurationName="TMSService.ITMSService")]
    public interface ITMSService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsToolsTypeByPage", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsToolsTypeByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.TmsToolsType> GetTmsToolsTypeByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsToolsTypeByPage", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsToolsTypeByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.TmsToolsType>> GetTmsToolsTypeByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsToolsTypeCount", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsToolsTypeCountResponse")]
        int GetTmsToolsTypeCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsToolsTypeCount", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsToolsTypeCountResponse")]
        System.Threading.Tasks.Task<int> GetTmsToolsTypeCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/AddTmsToolsType", ReplyAction="http://fanuc.com.cn/ITMSService/AddTmsToolsTypeResponse")]
        bool AddTmsToolsType(BFM.ContractModel.TmsToolsType mTmsToolsType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/AddTmsToolsType", ReplyAction="http://fanuc.com.cn/ITMSService/AddTmsToolsTypeResponse")]
        System.Threading.Tasks.Task<bool> AddTmsToolsTypeAsync(BFM.ContractModel.TmsToolsType mTmsToolsType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/UpdateTmsToolsType", ReplyAction="http://fanuc.com.cn/ITMSService/UpdateTmsToolsTypeResponse")]
        bool UpdateTmsToolsType(BFM.ContractModel.TmsToolsType mTmsToolsType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/UpdateTmsToolsType", ReplyAction="http://fanuc.com.cn/ITMSService/UpdateTmsToolsTypeResponse")]
        System.Threading.Tasks.Task<bool> UpdateTmsToolsTypeAsync(BFM.ContractModel.TmsToolsType mTmsToolsType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/DelTmsToolsTypes", ReplyAction="http://fanuc.com.cn/ITMSService/DelTmsToolsTypesResponse")]
        bool DelTmsToolsTypes(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/DelTmsToolsTypes", ReplyAction="http://fanuc.com.cn/ITMSService/DelTmsToolsTypesResponse")]
        System.Threading.Tasks.Task<bool> DelTmsToolsTypesAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/DelTmsToolsType", ReplyAction="http://fanuc.com.cn/ITMSService/DelTmsToolsTypeResponse")]
        bool DelTmsToolsType(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/DelTmsToolsType", ReplyAction="http://fanuc.com.cn/ITMSService/DelTmsToolsTypeResponse")]
        System.Threading.Tasks.Task<bool> DelTmsToolsTypeAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsToolsTypes", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsToolsTypesResponse")]
        System.Collections.Generic.List<BFM.ContractModel.TmsToolsType> GetTmsToolsTypes(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsToolsTypes", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsToolsTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.TmsToolsType>> GetTmsToolsTypesAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsToolsTypeById", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsToolsTypeByIdResponse")]
        BFM.ContractModel.TmsToolsType GetTmsToolsTypeById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsToolsTypeById", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsToolsTypeByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.TmsToolsType> GetTmsToolsTypeByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsToolsMasterByPage", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsToolsMasterByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.TmsToolsMaster> GetTmsToolsMasterByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsToolsMasterByPage", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsToolsMasterByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.TmsToolsMaster>> GetTmsToolsMasterByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsToolsMasterCount", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsToolsMasterCountResponse")]
        int GetTmsToolsMasterCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsToolsMasterCount", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsToolsMasterCountResponse")]
        System.Threading.Tasks.Task<int> GetTmsToolsMasterCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/AddTmsToolsMaster", ReplyAction="http://fanuc.com.cn/ITMSService/AddTmsToolsMasterResponse")]
        bool AddTmsToolsMaster(BFM.ContractModel.TmsToolsMaster mTmsToolsMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/AddTmsToolsMaster", ReplyAction="http://fanuc.com.cn/ITMSService/AddTmsToolsMasterResponse")]
        System.Threading.Tasks.Task<bool> AddTmsToolsMasterAsync(BFM.ContractModel.TmsToolsMaster mTmsToolsMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/UpdateTmsToolsMaster", ReplyAction="http://fanuc.com.cn/ITMSService/UpdateTmsToolsMasterResponse")]
        bool UpdateTmsToolsMaster(BFM.ContractModel.TmsToolsMaster mTmsToolsMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/UpdateTmsToolsMaster", ReplyAction="http://fanuc.com.cn/ITMSService/UpdateTmsToolsMasterResponse")]
        System.Threading.Tasks.Task<bool> UpdateTmsToolsMasterAsync(BFM.ContractModel.TmsToolsMaster mTmsToolsMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/DelTmsToolsMasters", ReplyAction="http://fanuc.com.cn/ITMSService/DelTmsToolsMastersResponse")]
        bool DelTmsToolsMasters(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/DelTmsToolsMasters", ReplyAction="http://fanuc.com.cn/ITMSService/DelTmsToolsMastersResponse")]
        System.Threading.Tasks.Task<bool> DelTmsToolsMastersAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/DelTmsToolsMaster", ReplyAction="http://fanuc.com.cn/ITMSService/DelTmsToolsMasterResponse")]
        bool DelTmsToolsMaster(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/DelTmsToolsMaster", ReplyAction="http://fanuc.com.cn/ITMSService/DelTmsToolsMasterResponse")]
        System.Threading.Tasks.Task<bool> DelTmsToolsMasterAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsToolsMasters", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsToolsMastersResponse")]
        System.Collections.Generic.List<BFM.ContractModel.TmsToolsMaster> GetTmsToolsMasters(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsToolsMasters", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsToolsMastersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.TmsToolsMaster>> GetTmsToolsMastersAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsToolsMasterById", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsToolsMasterByIdResponse")]
        BFM.ContractModel.TmsToolsMaster GetTmsToolsMasterById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsToolsMasterById", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsToolsMasterByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.TmsToolsMaster> GetTmsToolsMasterByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsDeviceToolsPosByPage", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsDeviceToolsPosByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.TmsDeviceToolsPos> GetTmsDeviceToolsPosByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsDeviceToolsPosByPage", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsDeviceToolsPosByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.TmsDeviceToolsPos>> GetTmsDeviceToolsPosByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsDeviceToolsPosCount", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsDeviceToolsPosCountResponse")]
        int GetTmsDeviceToolsPosCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsDeviceToolsPosCount", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsDeviceToolsPosCountResponse")]
        System.Threading.Tasks.Task<int> GetTmsDeviceToolsPosCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/AddTmsDeviceToolsPos", ReplyAction="http://fanuc.com.cn/ITMSService/AddTmsDeviceToolsPosResponse")]
        bool AddTmsDeviceToolsPos(BFM.ContractModel.TmsDeviceToolsPos mTmsDeviceToolsPos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/AddTmsDeviceToolsPos", ReplyAction="http://fanuc.com.cn/ITMSService/AddTmsDeviceToolsPosResponse")]
        System.Threading.Tasks.Task<bool> AddTmsDeviceToolsPosAsync(BFM.ContractModel.TmsDeviceToolsPos mTmsDeviceToolsPos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/UpdateTmsDeviceToolsPos", ReplyAction="http://fanuc.com.cn/ITMSService/UpdateTmsDeviceToolsPosResponse")]
        bool UpdateTmsDeviceToolsPos(BFM.ContractModel.TmsDeviceToolsPos mTmsDeviceToolsPos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/UpdateTmsDeviceToolsPos", ReplyAction="http://fanuc.com.cn/ITMSService/UpdateTmsDeviceToolsPosResponse")]
        System.Threading.Tasks.Task<bool> UpdateTmsDeviceToolsPosAsync(BFM.ContractModel.TmsDeviceToolsPos mTmsDeviceToolsPos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/DelTmsDeviceToolsPoss", ReplyAction="http://fanuc.com.cn/ITMSService/DelTmsDeviceToolsPossResponse")]
        bool DelTmsDeviceToolsPoss(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/DelTmsDeviceToolsPoss", ReplyAction="http://fanuc.com.cn/ITMSService/DelTmsDeviceToolsPossResponse")]
        System.Threading.Tasks.Task<bool> DelTmsDeviceToolsPossAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/DelTmsDeviceToolsPos", ReplyAction="http://fanuc.com.cn/ITMSService/DelTmsDeviceToolsPosResponse")]
        bool DelTmsDeviceToolsPos(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/DelTmsDeviceToolsPos", ReplyAction="http://fanuc.com.cn/ITMSService/DelTmsDeviceToolsPosResponse")]
        System.Threading.Tasks.Task<bool> DelTmsDeviceToolsPosAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsDeviceToolsPoss", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsDeviceToolsPossResponse")]
        System.Collections.Generic.List<BFM.ContractModel.TmsDeviceToolsPos> GetTmsDeviceToolsPoss(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsDeviceToolsPoss", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsDeviceToolsPossResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.TmsDeviceToolsPos>> GetTmsDeviceToolsPossAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsDeviceToolsPosById", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsDeviceToolsPosByIdResponse")]
        BFM.ContractModel.TmsDeviceToolsPos GetTmsDeviceToolsPosById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/ITMSService/GetTmsDeviceToolsPosById", ReplyAction="http://fanuc.com.cn/ITMSService/GetTmsDeviceToolsPosByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.TmsDeviceToolsPos> GetTmsDeviceToolsPosByIdAsync(string Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITMSServiceChannel : BFM.Server.DataAsset.TMSService.ITMSService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TMSServiceClient : System.ServiceModel.ClientBase<BFM.Server.DataAsset.TMSService.ITMSService>, BFM.Server.DataAsset.TMSService.ITMSService {
        
        public TMSServiceClient() {
        }
        
        public TMSServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TMSServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TMSServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TMSServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.TmsToolsType> GetTmsToolsTypeByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetTmsToolsTypeByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.TmsToolsType>> GetTmsToolsTypeByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetTmsToolsTypeByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetTmsToolsTypeCount(string sWhere) {
            return base.Channel.GetTmsToolsTypeCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetTmsToolsTypeCountAsync(string sWhere) {
            return base.Channel.GetTmsToolsTypeCountAsync(sWhere);
        }
        
        public bool AddTmsToolsType(BFM.ContractModel.TmsToolsType mTmsToolsType) {
            return base.Channel.AddTmsToolsType(mTmsToolsType);
        }
        
        public System.Threading.Tasks.Task<bool> AddTmsToolsTypeAsync(BFM.ContractModel.TmsToolsType mTmsToolsType) {
            return base.Channel.AddTmsToolsTypeAsync(mTmsToolsType);
        }
        
        public bool UpdateTmsToolsType(BFM.ContractModel.TmsToolsType mTmsToolsType) {
            return base.Channel.UpdateTmsToolsType(mTmsToolsType);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateTmsToolsTypeAsync(BFM.ContractModel.TmsToolsType mTmsToolsType) {
            return base.Channel.UpdateTmsToolsTypeAsync(mTmsToolsType);
        }
        
        public bool DelTmsToolsTypes(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelTmsToolsTypes(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelTmsToolsTypesAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelTmsToolsTypesAsync(Ids);
        }
        
        public bool DelTmsToolsType(string Id) {
            return base.Channel.DelTmsToolsType(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelTmsToolsTypeAsync(string Id) {
            return base.Channel.DelTmsToolsTypeAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.TmsToolsType> GetTmsToolsTypes(string sWhere) {
            return base.Channel.GetTmsToolsTypes(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.TmsToolsType>> GetTmsToolsTypesAsync(string sWhere) {
            return base.Channel.GetTmsToolsTypesAsync(sWhere);
        }
        
        public BFM.ContractModel.TmsToolsType GetTmsToolsTypeById(string Id) {
            return base.Channel.GetTmsToolsTypeById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.TmsToolsType> GetTmsToolsTypeByIdAsync(string Id) {
            return base.Channel.GetTmsToolsTypeByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.TmsToolsMaster> GetTmsToolsMasterByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetTmsToolsMasterByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.TmsToolsMaster>> GetTmsToolsMasterByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetTmsToolsMasterByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetTmsToolsMasterCount(string sWhere) {
            return base.Channel.GetTmsToolsMasterCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetTmsToolsMasterCountAsync(string sWhere) {
            return base.Channel.GetTmsToolsMasterCountAsync(sWhere);
        }
        
        public bool AddTmsToolsMaster(BFM.ContractModel.TmsToolsMaster mTmsToolsMaster) {
            return base.Channel.AddTmsToolsMaster(mTmsToolsMaster);
        }
        
        public System.Threading.Tasks.Task<bool> AddTmsToolsMasterAsync(BFM.ContractModel.TmsToolsMaster mTmsToolsMaster) {
            return base.Channel.AddTmsToolsMasterAsync(mTmsToolsMaster);
        }
        
        public bool UpdateTmsToolsMaster(BFM.ContractModel.TmsToolsMaster mTmsToolsMaster) {
            return base.Channel.UpdateTmsToolsMaster(mTmsToolsMaster);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateTmsToolsMasterAsync(BFM.ContractModel.TmsToolsMaster mTmsToolsMaster) {
            return base.Channel.UpdateTmsToolsMasterAsync(mTmsToolsMaster);
        }
        
        public bool DelTmsToolsMasters(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelTmsToolsMasters(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelTmsToolsMastersAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelTmsToolsMastersAsync(Ids);
        }
        
        public bool DelTmsToolsMaster(string Id) {
            return base.Channel.DelTmsToolsMaster(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelTmsToolsMasterAsync(string Id) {
            return base.Channel.DelTmsToolsMasterAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.TmsToolsMaster> GetTmsToolsMasters(string sWhere) {
            return base.Channel.GetTmsToolsMasters(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.TmsToolsMaster>> GetTmsToolsMastersAsync(string sWhere) {
            return base.Channel.GetTmsToolsMastersAsync(sWhere);
        }
        
        public BFM.ContractModel.TmsToolsMaster GetTmsToolsMasterById(string Id) {
            return base.Channel.GetTmsToolsMasterById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.TmsToolsMaster> GetTmsToolsMasterByIdAsync(string Id) {
            return base.Channel.GetTmsToolsMasterByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.TmsDeviceToolsPos> GetTmsDeviceToolsPosByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetTmsDeviceToolsPosByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.TmsDeviceToolsPos>> GetTmsDeviceToolsPosByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetTmsDeviceToolsPosByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetTmsDeviceToolsPosCount(string sWhere) {
            return base.Channel.GetTmsDeviceToolsPosCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetTmsDeviceToolsPosCountAsync(string sWhere) {
            return base.Channel.GetTmsDeviceToolsPosCountAsync(sWhere);
        }
        
        public bool AddTmsDeviceToolsPos(BFM.ContractModel.TmsDeviceToolsPos mTmsDeviceToolsPos) {
            return base.Channel.AddTmsDeviceToolsPos(mTmsDeviceToolsPos);
        }
        
        public System.Threading.Tasks.Task<bool> AddTmsDeviceToolsPosAsync(BFM.ContractModel.TmsDeviceToolsPos mTmsDeviceToolsPos) {
            return base.Channel.AddTmsDeviceToolsPosAsync(mTmsDeviceToolsPos);
        }
        
        public bool UpdateTmsDeviceToolsPos(BFM.ContractModel.TmsDeviceToolsPos mTmsDeviceToolsPos) {
            return base.Channel.UpdateTmsDeviceToolsPos(mTmsDeviceToolsPos);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateTmsDeviceToolsPosAsync(BFM.ContractModel.TmsDeviceToolsPos mTmsDeviceToolsPos) {
            return base.Channel.UpdateTmsDeviceToolsPosAsync(mTmsDeviceToolsPos);
        }
        
        public bool DelTmsDeviceToolsPoss(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelTmsDeviceToolsPoss(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelTmsDeviceToolsPossAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelTmsDeviceToolsPossAsync(Ids);
        }
        
        public bool DelTmsDeviceToolsPos(string Id) {
            return base.Channel.DelTmsDeviceToolsPos(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelTmsDeviceToolsPosAsync(string Id) {
            return base.Channel.DelTmsDeviceToolsPosAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.TmsDeviceToolsPos> GetTmsDeviceToolsPoss(string sWhere) {
            return base.Channel.GetTmsDeviceToolsPoss(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.TmsDeviceToolsPos>> GetTmsDeviceToolsPossAsync(string sWhere) {
            return base.Channel.GetTmsDeviceToolsPossAsync(sWhere);
        }
        
        public BFM.ContractModel.TmsDeviceToolsPos GetTmsDeviceToolsPosById(string Id) {
            return base.Channel.GetTmsDeviceToolsPosById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.TmsDeviceToolsPos> GetTmsDeviceToolsPosByIdAsync(string Id) {
            return base.Channel.GetTmsDeviceToolsPosByIdAsync(Id);
        }
    }
}
