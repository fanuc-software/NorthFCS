<Window x:Class="BFM.WPF.FlowDesign.MES.SelectTag"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" Loaded="SelectTag_OnLoaded"
        Title="请选择对应的Tag点" Height="320" Width="385" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <!--Combox-->
        <Style TargetType="{x:Type ToggleButton}" x:Key="ComboxStyleBtn">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <!--下拉按钮内部背景色-->
                        <Border x:Name="Back" Background="Transparent" BorderThickness="1" BorderBrush="Transparent">
                            <!--下拉按钮内边框-->
                            <Image x:Name="img_active" Margin="0" Source="/BFM.WPF.FlowDesign;component/arrow_cmb1.png"   Opacity="1" Stretch="None" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="img_active" Property="Source" Value="/BFM.WPF.Base;component/Resources/arrow_cmb_s.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ComboBox-->
        <ControlTemplate x:Key="NormalComboBox" TargetType="{x:Type ComboBox}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.7*"/>
                    <ColumnDefinition Width="0.3*" MaxWidth="30"/>
                </Grid.ColumnDefinitions>

                <!--文字区域背景和边线样式-->
                <Border x:Name="Border" Background="White" Margin="3" CornerRadius="4,0,0,4">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                        IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" 
                        Margin="{TemplateBinding Padding}" VerticalContentAlignment="Center"
                        Background="Transparent" VerticalAlignment="Stretch" Foreground="#3e3e3e" FontSize="{TemplateBinding FontSize}"
                        BorderBrush="#959595" BorderThickness="0" >
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                <Setter Property="AllowDrop" Value="True"/>
                                <Setter Property="MinWidth" Value="0"/>
                                <Setter Property="MinHeight" Value="0"/>
                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </Border>

                <Border  x:Name="root"  Grid.Column="0" BorderThickness="2,2,0,2" BorderBrush="#959595" CornerRadius="4,0,0,4" />
                <!--右侧下拉button设置-->
                <Border x:Name="button"  Grid.Column="1" BorderThickness="0,2,2,2" BorderBrush="#959595" CornerRadius="0,4,4,0">
                    <ToggleButton Style="{StaticResource ComboxStyleBtn}" ClickMode="Press" 
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                </Border>
                <!--弹出popup整体设置-->
                <Popup Grid.Column="0" Grid.ColumnSpan="2" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" 
                    Focusable="False" AllowsTransparency="True" PopupAnimation="Slide" >
                    <!--弹出popup边框-->
                    <Border CornerRadius="0" BorderBrush="#959595" BorderThickness="1,0,1,1" 
                        MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" 
                        x:Name="DropDown" SnapsToDevicePixels="True">
                        <Border.Effect>
                            <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="1"/>
                        </Border.Effect>
                        <!--下拉幕布边界背景设置 MaxHeight="{TemplateBinding MaxDropDownHeight}"-->
                        <ScrollViewer Margin="0,0,0,0" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" 
                            VerticalScrollBarVisibility="Auto" BorderBrush="#959595" BorderThickness="2" >
                            <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>

            <ControlTemplate.Triggers>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter TargetName="root" Property="BorderBrush" Value="#5589f3"/>
                    <Setter TargetName="button" Property="BorderBrush" Value="#5589f3"/>
                </Trigger>
                <Trigger Property="IsReadOnly" Value="True">
                    <Setter TargetName="button" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="button" Property="Background" Value="#F5F5F5"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </Window.Resources>
    <Grid>
        <ComboBox x:Name="cmbTag" DisplayMemberPath="TAG_NAME" SelectedValuePath="PKNO" HorizontalAlignment="Left" Margin="59,86,0,0" VerticalAlignment="Top" Width="298" Height="28" VerticalContentAlignment="Center" IsEditable="True" SelectionChanged="CmbTag_SelectionChanged"/>
        <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="10,92,0,0" TextWrapping="Wrap" Text="Tag点" VerticalAlignment="Top"/>
        <Button x:Name="button" Content="设置Name值" HorizontalAlignment="Left" Margin="60,198,0,0" VerticalAlignment="Top" Width="100" Height="40" Click="button_Click"/>
        <Label Content="设备" HorizontalAlignment="Left" Margin="11,23,0,0" VerticalAlignment="Top" Height="27" Width="43"/>
        <ComboBox x:Name="cmbDevices" SelectedValuePath="ASSET_CODE" DisplayMemberPath="ASSET_NAME" HorizontalAlignment="Left" VerticalAlignment="Top" Width="298" Height="30" Visibility="Visible" SelectionChanged="CmbDevices_SelectionChanged" Margin="59,19,0,0" IsEditable="True" />
        <Button x:Name="button_Copy" Content="取消" HorizontalAlignment="Left" Margin="248,198,0,0" VerticalAlignment="Top" Width="100" Height="40" Click="btnCancel_Click"/>
        <TextBlock x:Name="textBlock_Copy" HorizontalAlignment="Left" Margin="9,145,0,0" TextWrapping="Wrap" Text="Tag点类型" VerticalAlignment="Top"/>
        <TextBox x:Name="tbTagType" HorizontalAlignment="Left" Margin="79,136,0,0" VerticalAlignment="Top" IsReadOnly="True" Width="278" Height="28" VerticalContentAlignment="Center" />

    </Grid>
</Window>
