<Window
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
      x:Class="BFM.WPF.MainUI.TestUIPage"
      mc:Ignorable="d" Background="White"
      d:DesignHeight="600" d:DesignWidth="1000"
      Title="TestUIPage">
    <Window.Resources>
        <!--下拉按钮-->
        <Style TargetType="ToggleButton" x:Key="ComboxStyleBtn">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border x:Name="Back" Background="Transparent" BorderThickness="1" BorderBrush="Transparent">
                            <Path Name="PathFill" Fill="#FF3F23F9" Width="8" Height="6" StrokeThickness="0" 
                              Data="M5,0 L10,10 L0,10 z" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="PathFill" Property="Fill" Value="White"></Setter>
                                <Setter TargetName="Back" Property="Background" Value="#FF6E59FA"></Setter>
                                <Setter TargetName="Back" Property="BorderBrush" Value="#FF6E59FA"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Combox-->
        <Style TargetType="ComboBox">
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <!--ComBoxItem-->
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="MinHeight" Value="22"></Setter>
                        <Setter Property="MinWidth" Value="60"></Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBoxItem">
                                    <Border Name="Back" Background="Transparent"  BorderThickness="0,0,0,0" BorderBrush="#FF3F23F9" >
                                        <ContentPresenter ContentSource="{Binding Source}" VerticalAlignment="Center" 
                                                      HorizontalAlignment="Left" Margin="5,0,0,0"></ContentPresenter>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Back" Property="Background" Value="LightGray"></Setter>
                                        </Trigger>
                                        <Trigger Property="IsHighlighted" Value="True">
                                            <Setter TargetName="Back" Property="Background" Value="LightGray"></Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid Background="#F7FDF7">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.7*"/>
                                <ColumnDefinition Width="0.3*" MaxWidth="30"/>
                            </Grid.ColumnDefinitions>
                            <Border  Grid.Column="0" BorderThickness="1,1,0,1" BorderBrush="#FF3F23F9" Background="Black" CornerRadius="1,0,0,1">
                                <TextBox  Grid.Column="0" IsReadOnly="False" BorderThickness="0" Margin="2" Foreground="White" Background="Transparent" Focusable="True"
                                  Text="{TemplateBinding Text}" VerticalAlignment="Center" VerticalContentAlignment="Center" />
                            </Border>
                            <Border Grid.Column="1" BorderThickness="0,1,1,1" BorderBrush="#FF3F23F9" CornerRadius="0,1,1,0">
                                <ToggleButton Style="{StaticResource ComboxStyleBtn}" 
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                          ClickMode="Press"></ToggleButton>
                            </Border>
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" 
                               AllowsTransparency="True" PopupAnimation="Slide">
                                <Border CornerRadius="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                    <Border.Effect>
                                        <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="0.5"/>
                                    </Border.Effect>
                                    <ScrollViewer Margin="1" Style="{DynamicResource ScrollViewerStyle}" 
                                              MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True" 
                                              HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" 
                                              CanContentScroll="True">
                                        <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="Black"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ScrollViewer样式-->
        <Style TargetType="ScrollViewer" x:Key="ScrollViewerStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <!--右下角四方形-->
                            <Rectangle x:Name="Corner"  Grid.Row="1" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <!--内容区域-->
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="0" Grid.Column="0" Content="{TemplateBinding Content}" CanContentScroll="{TemplateBinding CanContentScroll}"  ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" />
                            <!--竖直滚动条-->
                            <ScrollBar x:Name="PART_VerticalScrollBar"   Grid.Row="0" Grid.Column="1" AutomationProperties.AutomationId="VerticalScrollBar"   Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"   ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource ScrollBarStyle}"/>
                            <!--水平滚动条-->
                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Row="1" Grid.Column="0" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}"  Minimum="0" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"  Style="{DynamicResource ScrollBarStyle}" Orientation="Horizontal"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HorizontalScrollBarVisibility" Value="Disabled">

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Theum-->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="border" CornerRadius="3" Background="#ACACAC" BorderThickness="0" >

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        
    </Window.Resources>
    <Grid>

        <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="TextBlock" VerticalAlignment="Top" Margin="34,49,0,0"/>
        <TextBox x:Name="textBox" HorizontalAlignment="Left" Height="28" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="155" Margin="108,45,0,0" VerticalContentAlignment="Center"/>
        <ComboBox VerticalAlignment="Top" IsEditable="True" SelectedIndex="0" Width="157" Margin="10,121,0,0" Height="31" Foreground="White" Text="combobox" HorizontalAlignment="Left" 
                  >
            <ComboBoxItem Content="ComboBoxItem1" IsSelected="True"/>
            <ComboBoxItem Content="ComboBoxItem2"/>
            <ComboBoxItem Content="ComboBoxItem2"/>
        </ComboBox>
        <CheckBox x:Name="checkBox" Content="CheckBox" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="34,80,0,0" VerticalContentAlignment="Center" Width="111"/>
        <Button x:Name="button" Content="Button" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="188,80,0,0" Height="37" Click="button_Click"/>
        <RadioButton x:Name="radioButton" Content="RadioButton" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="172,136,0,0"/>

        <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="翻页控件" VerticalAlignment="Top" Margin="267,433,0,0"/>
        <ListBox x:Name="listBox" HorizontalAlignment="Left" Height="230" VerticalAlignment="Top" Width="194" Margin="34,338,0,0">
            <Button Content="Button"/>
            <CheckBox Content="CheckBox"/>
            <ComboBoxItem Content="ComboBox"/>
            <ListBoxItem Content="ListBoxItems"/>
            <MenuItem Header="MenuItem" Width="110" />
            <RadioButton Content="RadioButton"/>
            <Separator/>
            <TabItem Content="TabItem"/>
            <ListBoxItem Content="ListBoxItems"/>
        </ListBox>
        <GroupBox x:Name="groupBox" Header="GroupBox" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="276,45,0,0" Width="210" Height="105"/>
        <DatePicker HorizontalAlignment="Left" VerticalAlignment="Top" Margin="34,182,0,0" Width="158" Height="31" VerticalContentAlignment="Center"/>
        <DataGrid x:Name="dataGrid" HorizontalAlignment="Left" VerticalAlignment="Top" Width="714" Margin="251,195,0,0" Height="253">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Test1" Width="100"/>
                <DataGridTextColumn Header="Test2" Width="100"/>
                <DataGridTextColumn Header="Test3" Width="100"/>
                <DataGridTextColumn Header="Test4" Width="100"/>
                <DataGridTextColumn Header="Test5" Width="100"/>
                <DataGridTextColumn Header="Test6" Width="100"/>
                <DataGridTextColumn Header="Test7" Width="100"/>
            </DataGrid.Columns>
        </DataGrid>
        <ProgressBar HorizontalAlignment="Left" Height="7" VerticalAlignment="Top" Width="526" Margin="34,583,0,0" Value="50"/>
        <TabControl x:Name="tabControl" HorizontalAlignment="Left" Height="100" VerticalAlignment="Top" Width="499" Margin="491,48,0,0">
            <TabItem Header="TabItem">
                <Grid Background="#FFE5E5E5"/>
            </TabItem>
        </TabControl>
        <TreeView x:Name="treeView" HorizontalAlignment="Left" Height="171" VerticalAlignment="Top" Width="176" Margin="614,424,0,0">
            <TreeViewItem Header="测试Test" IsExpanded="True" Margin="0,5,0,0" >
            </TreeViewItem>
            <TreeViewItem Header="测试Test2" IsExpanded="True" Margin="0,5,0,0" >
            </TreeViewItem>
        </TreeView>

    </Grid>
</Window>
