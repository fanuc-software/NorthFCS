//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BFM.Server.DataAsset.PLMService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://fanuc.com.cn/", ConfigurationName="PLMService.IPLMService")]
    public interface IPLMService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmPlanMasterByPage", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmPlanMasterByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.PmPlanMaster> GetPmPlanMasterByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmPlanMasterByPage", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmPlanMasterByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.PmPlanMaster>> GetPmPlanMasterByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmPlanMasterCount", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmPlanMasterCountResponse")]
        int GetPmPlanMasterCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmPlanMasterCount", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmPlanMasterCountResponse")]
        System.Threading.Tasks.Task<int> GetPmPlanMasterCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/AddPmPlanMaster", ReplyAction="http://fanuc.com.cn/IPLMService/AddPmPlanMasterResponse")]
        bool AddPmPlanMaster(BFM.ContractModel.PmPlanMaster mPmPlanMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/AddPmPlanMaster", ReplyAction="http://fanuc.com.cn/IPLMService/AddPmPlanMasterResponse")]
        System.Threading.Tasks.Task<bool> AddPmPlanMasterAsync(BFM.ContractModel.PmPlanMaster mPmPlanMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/UpdatePmPlanMaster", ReplyAction="http://fanuc.com.cn/IPLMService/UpdatePmPlanMasterResponse")]
        bool UpdatePmPlanMaster(BFM.ContractModel.PmPlanMaster mPmPlanMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/UpdatePmPlanMaster", ReplyAction="http://fanuc.com.cn/IPLMService/UpdatePmPlanMasterResponse")]
        System.Threading.Tasks.Task<bool> UpdatePmPlanMasterAsync(BFM.ContractModel.PmPlanMaster mPmPlanMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelPmPlanMasters", ReplyAction="http://fanuc.com.cn/IPLMService/DelPmPlanMastersResponse")]
        bool DelPmPlanMasters(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelPmPlanMasters", ReplyAction="http://fanuc.com.cn/IPLMService/DelPmPlanMastersResponse")]
        System.Threading.Tasks.Task<bool> DelPmPlanMastersAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelPmPlanMaster", ReplyAction="http://fanuc.com.cn/IPLMService/DelPmPlanMasterResponse")]
        bool DelPmPlanMaster(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelPmPlanMaster", ReplyAction="http://fanuc.com.cn/IPLMService/DelPmPlanMasterResponse")]
        System.Threading.Tasks.Task<bool> DelPmPlanMasterAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmPlanMasters", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmPlanMastersResponse")]
        System.Collections.Generic.List<BFM.ContractModel.PmPlanMaster> GetPmPlanMasters(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmPlanMasters", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmPlanMastersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.PmPlanMaster>> GetPmPlanMastersAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmPlanMasterById", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmPlanMasterByIdResponse")]
        BFM.ContractModel.PmPlanMaster GetPmPlanMasterById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmPlanMasterById", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmPlanMasterByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.PmPlanMaster> GetPmPlanMasterByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmTaskMasterByPage", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmTaskMasterByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.PmTaskMaster> GetPmTaskMasterByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmTaskMasterByPage", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmTaskMasterByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.PmTaskMaster>> GetPmTaskMasterByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmTaskMasterCount", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmTaskMasterCountResponse")]
        int GetPmTaskMasterCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmTaskMasterCount", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmTaskMasterCountResponse")]
        System.Threading.Tasks.Task<int> GetPmTaskMasterCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/AddPmTaskMaster", ReplyAction="http://fanuc.com.cn/IPLMService/AddPmTaskMasterResponse")]
        bool AddPmTaskMaster(BFM.ContractModel.PmTaskMaster mPmTaskMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/AddPmTaskMaster", ReplyAction="http://fanuc.com.cn/IPLMService/AddPmTaskMasterResponse")]
        System.Threading.Tasks.Task<bool> AddPmTaskMasterAsync(BFM.ContractModel.PmTaskMaster mPmTaskMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/UpdatePmTaskMaster", ReplyAction="http://fanuc.com.cn/IPLMService/UpdatePmTaskMasterResponse")]
        bool UpdatePmTaskMaster(BFM.ContractModel.PmTaskMaster mPmTaskMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/UpdatePmTaskMaster", ReplyAction="http://fanuc.com.cn/IPLMService/UpdatePmTaskMasterResponse")]
        System.Threading.Tasks.Task<bool> UpdatePmTaskMasterAsync(BFM.ContractModel.PmTaskMaster mPmTaskMaster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelPmTaskMasters", ReplyAction="http://fanuc.com.cn/IPLMService/DelPmTaskMastersResponse")]
        bool DelPmTaskMasters(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelPmTaskMasters", ReplyAction="http://fanuc.com.cn/IPLMService/DelPmTaskMastersResponse")]
        System.Threading.Tasks.Task<bool> DelPmTaskMastersAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelPmTaskMaster", ReplyAction="http://fanuc.com.cn/IPLMService/DelPmTaskMasterResponse")]
        bool DelPmTaskMaster(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelPmTaskMaster", ReplyAction="http://fanuc.com.cn/IPLMService/DelPmTaskMasterResponse")]
        System.Threading.Tasks.Task<bool> DelPmTaskMasterAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmTaskMasters", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmTaskMastersResponse")]
        System.Collections.Generic.List<BFM.ContractModel.PmTaskMaster> GetPmTaskMasters(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmTaskMasters", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmTaskMastersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.PmTaskMaster>> GetPmTaskMastersAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmTaskMasterById", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmTaskMasterByIdResponse")]
        BFM.ContractModel.PmTaskMaster GetPmTaskMasterById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmTaskMasterById", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmTaskMasterByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.PmTaskMaster> GetPmTaskMasterByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmTaskLineByPage", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmTaskLineByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.PmTaskLine> GetPmTaskLineByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmTaskLineByPage", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmTaskLineByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.PmTaskLine>> GetPmTaskLineByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmTaskLineCount", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmTaskLineCountResponse")]
        int GetPmTaskLineCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmTaskLineCount", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmTaskLineCountResponse")]
        System.Threading.Tasks.Task<int> GetPmTaskLineCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/AddPmTaskLine", ReplyAction="http://fanuc.com.cn/IPLMService/AddPmTaskLineResponse")]
        bool AddPmTaskLine(BFM.ContractModel.PmTaskLine mPmTaskLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/AddPmTaskLine", ReplyAction="http://fanuc.com.cn/IPLMService/AddPmTaskLineResponse")]
        System.Threading.Tasks.Task<bool> AddPmTaskLineAsync(BFM.ContractModel.PmTaskLine mPmTaskLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/UpdatePmTaskLine", ReplyAction="http://fanuc.com.cn/IPLMService/UpdatePmTaskLineResponse")]
        bool UpdatePmTaskLine(BFM.ContractModel.PmTaskLine mPmTaskLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/UpdatePmTaskLine", ReplyAction="http://fanuc.com.cn/IPLMService/UpdatePmTaskLineResponse")]
        System.Threading.Tasks.Task<bool> UpdatePmTaskLineAsync(BFM.ContractModel.PmTaskLine mPmTaskLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelPmTaskLines", ReplyAction="http://fanuc.com.cn/IPLMService/DelPmTaskLinesResponse")]
        bool DelPmTaskLines(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelPmTaskLines", ReplyAction="http://fanuc.com.cn/IPLMService/DelPmTaskLinesResponse")]
        System.Threading.Tasks.Task<bool> DelPmTaskLinesAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelPmTaskLine", ReplyAction="http://fanuc.com.cn/IPLMService/DelPmTaskLineResponse")]
        bool DelPmTaskLine(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelPmTaskLine", ReplyAction="http://fanuc.com.cn/IPLMService/DelPmTaskLineResponse")]
        System.Threading.Tasks.Task<bool> DelPmTaskLineAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmTaskLines", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmTaskLinesResponse")]
        System.Collections.Generic.List<BFM.ContractModel.PmTaskLine> GetPmTaskLines(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmTaskLines", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmTaskLinesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.PmTaskLine>> GetPmTaskLinesAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmTaskLineById", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmTaskLineByIdResponse")]
        BFM.ContractModel.PmTaskLine GetPmTaskLineById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetPmTaskLineById", ReplyAction="http://fanuc.com.cn/IPLMService/GetPmTaskLineByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.PmTaskLine> GetPmTaskLineByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesJobOrderByPage", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesJobOrderByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.MesJobOrder> GetMesJobOrderByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesJobOrderByPage", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesJobOrderByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.MesJobOrder>> GetMesJobOrderByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesJobOrderCount", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesJobOrderCountResponse")]
        int GetMesJobOrderCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesJobOrderCount", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesJobOrderCountResponse")]
        System.Threading.Tasks.Task<int> GetMesJobOrderCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/AddMesJobOrder", ReplyAction="http://fanuc.com.cn/IPLMService/AddMesJobOrderResponse")]
        bool AddMesJobOrder(BFM.ContractModel.MesJobOrder mMesJobOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/AddMesJobOrder", ReplyAction="http://fanuc.com.cn/IPLMService/AddMesJobOrderResponse")]
        System.Threading.Tasks.Task<bool> AddMesJobOrderAsync(BFM.ContractModel.MesJobOrder mMesJobOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/UpdateMesJobOrder", ReplyAction="http://fanuc.com.cn/IPLMService/UpdateMesJobOrderResponse")]
        bool UpdateMesJobOrder(BFM.ContractModel.MesJobOrder mMesJobOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/UpdateMesJobOrder", ReplyAction="http://fanuc.com.cn/IPLMService/UpdateMesJobOrderResponse")]
        System.Threading.Tasks.Task<bool> UpdateMesJobOrderAsync(BFM.ContractModel.MesJobOrder mMesJobOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelMesJobOrders", ReplyAction="http://fanuc.com.cn/IPLMService/DelMesJobOrdersResponse")]
        bool DelMesJobOrders(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelMesJobOrders", ReplyAction="http://fanuc.com.cn/IPLMService/DelMesJobOrdersResponse")]
        System.Threading.Tasks.Task<bool> DelMesJobOrdersAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelMesJobOrder", ReplyAction="http://fanuc.com.cn/IPLMService/DelMesJobOrderResponse")]
        bool DelMesJobOrder(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelMesJobOrder", ReplyAction="http://fanuc.com.cn/IPLMService/DelMesJobOrderResponse")]
        System.Threading.Tasks.Task<bool> DelMesJobOrderAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesJobOrders", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesJobOrdersResponse")]
        System.Collections.Generic.List<BFM.ContractModel.MesJobOrder> GetMesJobOrders(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesJobOrders", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesJobOrdersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.MesJobOrder>> GetMesJobOrdersAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesJobOrderById", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesJobOrderByIdResponse")]
        BFM.ContractModel.MesJobOrder GetMesJobOrderById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesJobOrderById", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesJobOrderByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.MesJobOrder> GetMesJobOrderByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesProcessCtrolByPage", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesProcessCtrolByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.MesProcessCtrol> GetMesProcessCtrolByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesProcessCtrolByPage", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesProcessCtrolByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.MesProcessCtrol>> GetMesProcessCtrolByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesProcessCtrolCount", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesProcessCtrolCountResponse")]
        int GetMesProcessCtrolCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesProcessCtrolCount", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesProcessCtrolCountResponse")]
        System.Threading.Tasks.Task<int> GetMesProcessCtrolCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/AddMesProcessCtrol", ReplyAction="http://fanuc.com.cn/IPLMService/AddMesProcessCtrolResponse")]
        bool AddMesProcessCtrol(BFM.ContractModel.MesProcessCtrol mMesProcessCtrol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/AddMesProcessCtrol", ReplyAction="http://fanuc.com.cn/IPLMService/AddMesProcessCtrolResponse")]
        System.Threading.Tasks.Task<bool> AddMesProcessCtrolAsync(BFM.ContractModel.MesProcessCtrol mMesProcessCtrol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/UpdateMesProcessCtrol", ReplyAction="http://fanuc.com.cn/IPLMService/UpdateMesProcessCtrolResponse")]
        bool UpdateMesProcessCtrol(BFM.ContractModel.MesProcessCtrol mMesProcessCtrol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/UpdateMesProcessCtrol", ReplyAction="http://fanuc.com.cn/IPLMService/UpdateMesProcessCtrolResponse")]
        System.Threading.Tasks.Task<bool> UpdateMesProcessCtrolAsync(BFM.ContractModel.MesProcessCtrol mMesProcessCtrol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelMesProcessCtrols", ReplyAction="http://fanuc.com.cn/IPLMService/DelMesProcessCtrolsResponse")]
        bool DelMesProcessCtrols(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelMesProcessCtrols", ReplyAction="http://fanuc.com.cn/IPLMService/DelMesProcessCtrolsResponse")]
        System.Threading.Tasks.Task<bool> DelMesProcessCtrolsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelMesProcessCtrol", ReplyAction="http://fanuc.com.cn/IPLMService/DelMesProcessCtrolResponse")]
        bool DelMesProcessCtrol(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelMesProcessCtrol", ReplyAction="http://fanuc.com.cn/IPLMService/DelMesProcessCtrolResponse")]
        System.Threading.Tasks.Task<bool> DelMesProcessCtrolAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesProcessCtrols", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesProcessCtrolsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.MesProcessCtrol> GetMesProcessCtrols(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesProcessCtrols", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesProcessCtrolsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.MesProcessCtrol>> GetMesProcessCtrolsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesProcessCtrolById", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesProcessCtrolByIdResponse")]
        BFM.ContractModel.MesProcessCtrol GetMesProcessCtrolById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesProcessCtrolById", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesProcessCtrolByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.MesProcessCtrol> GetMesProcessCtrolByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetTestEFCodeFirstByPage", ReplyAction="http://fanuc.com.cn/IPLMService/GetTestEFCodeFirstByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.TestEFCodeFirst> GetTestEFCodeFirstByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetTestEFCodeFirstByPage", ReplyAction="http://fanuc.com.cn/IPLMService/GetTestEFCodeFirstByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.TestEFCodeFirst>> GetTestEFCodeFirstByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetTestEFCodeFirstCount", ReplyAction="http://fanuc.com.cn/IPLMService/GetTestEFCodeFirstCountResponse")]
        int GetTestEFCodeFirstCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetTestEFCodeFirstCount", ReplyAction="http://fanuc.com.cn/IPLMService/GetTestEFCodeFirstCountResponse")]
        System.Threading.Tasks.Task<int> GetTestEFCodeFirstCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/AddTestEFCodeFirst", ReplyAction="http://fanuc.com.cn/IPLMService/AddTestEFCodeFirstResponse")]
        bool AddTestEFCodeFirst(BFM.ContractModel.TestEFCodeFirst mTestEFCodeFirst);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/AddTestEFCodeFirst", ReplyAction="http://fanuc.com.cn/IPLMService/AddTestEFCodeFirstResponse")]
        System.Threading.Tasks.Task<bool> AddTestEFCodeFirstAsync(BFM.ContractModel.TestEFCodeFirst mTestEFCodeFirst);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/UpdateTestEFCodeFirst", ReplyAction="http://fanuc.com.cn/IPLMService/UpdateTestEFCodeFirstResponse")]
        bool UpdateTestEFCodeFirst(BFM.ContractModel.TestEFCodeFirst mTestEFCodeFirst);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/UpdateTestEFCodeFirst", ReplyAction="http://fanuc.com.cn/IPLMService/UpdateTestEFCodeFirstResponse")]
        System.Threading.Tasks.Task<bool> UpdateTestEFCodeFirstAsync(BFM.ContractModel.TestEFCodeFirst mTestEFCodeFirst);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelTestEFCodeFirsts", ReplyAction="http://fanuc.com.cn/IPLMService/DelTestEFCodeFirstsResponse")]
        bool DelTestEFCodeFirsts(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelTestEFCodeFirsts", ReplyAction="http://fanuc.com.cn/IPLMService/DelTestEFCodeFirstsResponse")]
        System.Threading.Tasks.Task<bool> DelTestEFCodeFirstsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelTestEFCodeFirst", ReplyAction="http://fanuc.com.cn/IPLMService/DelTestEFCodeFirstResponse")]
        bool DelTestEFCodeFirst(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelTestEFCodeFirst", ReplyAction="http://fanuc.com.cn/IPLMService/DelTestEFCodeFirstResponse")]
        System.Threading.Tasks.Task<bool> DelTestEFCodeFirstAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetTestEFCodeFirsts", ReplyAction="http://fanuc.com.cn/IPLMService/GetTestEFCodeFirstsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.TestEFCodeFirst> GetTestEFCodeFirsts(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetTestEFCodeFirsts", ReplyAction="http://fanuc.com.cn/IPLMService/GetTestEFCodeFirstsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.TestEFCodeFirst>> GetTestEFCodeFirstsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetTestEFCodeFirstById", ReplyAction="http://fanuc.com.cn/IPLMService/GetTestEFCodeFirstByIdResponse")]
        BFM.ContractModel.TestEFCodeFirst GetTestEFCodeFirstById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetTestEFCodeFirstById", ReplyAction="http://fanuc.com.cn/IPLMService/GetTestEFCodeFirstByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.TestEFCodeFirst> GetTestEFCodeFirstByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesProductProcessByPage", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesProductProcessByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.MesProductProcess> GetMesProductProcessByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesProductProcessByPage", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesProductProcessByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.MesProductProcess>> GetMesProductProcessByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesProductProcessCount", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesProductProcessCountResponse")]
        int GetMesProductProcessCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesProductProcessCount", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesProductProcessCountResponse")]
        System.Threading.Tasks.Task<int> GetMesProductProcessCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/AddMesProductProcess", ReplyAction="http://fanuc.com.cn/IPLMService/AddMesProductProcessResponse")]
        bool AddMesProductProcess(BFM.ContractModel.MesProductProcess mMesProductProcess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/AddMesProductProcess", ReplyAction="http://fanuc.com.cn/IPLMService/AddMesProductProcessResponse")]
        System.Threading.Tasks.Task<bool> AddMesProductProcessAsync(BFM.ContractModel.MesProductProcess mMesProductProcess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/UpdateMesProductProcess", ReplyAction="http://fanuc.com.cn/IPLMService/UpdateMesProductProcessResponse")]
        bool UpdateMesProductProcess(BFM.ContractModel.MesProductProcess mMesProductProcess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/UpdateMesProductProcess", ReplyAction="http://fanuc.com.cn/IPLMService/UpdateMesProductProcessResponse")]
        System.Threading.Tasks.Task<bool> UpdateMesProductProcessAsync(BFM.ContractModel.MesProductProcess mMesProductProcess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelMesProductProcesss", ReplyAction="http://fanuc.com.cn/IPLMService/DelMesProductProcesssResponse")]
        bool DelMesProductProcesss(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelMesProductProcesss", ReplyAction="http://fanuc.com.cn/IPLMService/DelMesProductProcesssResponse")]
        System.Threading.Tasks.Task<bool> DelMesProductProcesssAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelMesProductProcess", ReplyAction="http://fanuc.com.cn/IPLMService/DelMesProductProcessResponse")]
        bool DelMesProductProcess(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/DelMesProductProcess", ReplyAction="http://fanuc.com.cn/IPLMService/DelMesProductProcessResponse")]
        System.Threading.Tasks.Task<bool> DelMesProductProcessAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesProductProcesss", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesProductProcesssResponse")]
        System.Collections.Generic.List<BFM.ContractModel.MesProductProcess> GetMesProductProcesss(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesProductProcesss", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesProductProcesssResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.MesProductProcess>> GetMesProductProcesssAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesProductProcessById", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesProductProcessByIdResponse")]
        BFM.ContractModel.MesProductProcess GetMesProductProcessById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IPLMService/GetMesProductProcessById", ReplyAction="http://fanuc.com.cn/IPLMService/GetMesProductProcessByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.MesProductProcess> GetMesProductProcessByIdAsync(string Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPLMServiceChannel : BFM.Server.DataAsset.PLMService.IPLMService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PLMServiceClient : System.ServiceModel.ClientBase<BFM.Server.DataAsset.PLMService.IPLMService>, BFM.Server.DataAsset.PLMService.IPLMService {
        
        public PLMServiceClient() {
        }
        
        public PLMServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PLMServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PLMServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PLMServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.PmPlanMaster> GetPmPlanMasterByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetPmPlanMasterByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.PmPlanMaster>> GetPmPlanMasterByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetPmPlanMasterByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetPmPlanMasterCount(string sWhere) {
            return base.Channel.GetPmPlanMasterCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetPmPlanMasterCountAsync(string sWhere) {
            return base.Channel.GetPmPlanMasterCountAsync(sWhere);
        }
        
        public bool AddPmPlanMaster(BFM.ContractModel.PmPlanMaster mPmPlanMaster) {
            return base.Channel.AddPmPlanMaster(mPmPlanMaster);
        }
        
        public System.Threading.Tasks.Task<bool> AddPmPlanMasterAsync(BFM.ContractModel.PmPlanMaster mPmPlanMaster) {
            return base.Channel.AddPmPlanMasterAsync(mPmPlanMaster);
        }
        
        public bool UpdatePmPlanMaster(BFM.ContractModel.PmPlanMaster mPmPlanMaster) {
            return base.Channel.UpdatePmPlanMaster(mPmPlanMaster);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePmPlanMasterAsync(BFM.ContractModel.PmPlanMaster mPmPlanMaster) {
            return base.Channel.UpdatePmPlanMasterAsync(mPmPlanMaster);
        }
        
        public bool DelPmPlanMasters(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelPmPlanMasters(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelPmPlanMastersAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelPmPlanMastersAsync(Ids);
        }
        
        public bool DelPmPlanMaster(string Id) {
            return base.Channel.DelPmPlanMaster(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelPmPlanMasterAsync(string Id) {
            return base.Channel.DelPmPlanMasterAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.PmPlanMaster> GetPmPlanMasters(string sWhere) {
            return base.Channel.GetPmPlanMasters(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.PmPlanMaster>> GetPmPlanMastersAsync(string sWhere) {
            return base.Channel.GetPmPlanMastersAsync(sWhere);
        }
        
        public BFM.ContractModel.PmPlanMaster GetPmPlanMasterById(string Id) {
            return base.Channel.GetPmPlanMasterById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.PmPlanMaster> GetPmPlanMasterByIdAsync(string Id) {
            return base.Channel.GetPmPlanMasterByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.PmTaskMaster> GetPmTaskMasterByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetPmTaskMasterByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.PmTaskMaster>> GetPmTaskMasterByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetPmTaskMasterByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetPmTaskMasterCount(string sWhere) {
            return base.Channel.GetPmTaskMasterCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetPmTaskMasterCountAsync(string sWhere) {
            return base.Channel.GetPmTaskMasterCountAsync(sWhere);
        }
        
        public bool AddPmTaskMaster(BFM.ContractModel.PmTaskMaster mPmTaskMaster) {
            return base.Channel.AddPmTaskMaster(mPmTaskMaster);
        }
        
        public System.Threading.Tasks.Task<bool> AddPmTaskMasterAsync(BFM.ContractModel.PmTaskMaster mPmTaskMaster) {
            return base.Channel.AddPmTaskMasterAsync(mPmTaskMaster);
        }
        
        public bool UpdatePmTaskMaster(BFM.ContractModel.PmTaskMaster mPmTaskMaster) {
            return base.Channel.UpdatePmTaskMaster(mPmTaskMaster);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePmTaskMasterAsync(BFM.ContractModel.PmTaskMaster mPmTaskMaster) {
            return base.Channel.UpdatePmTaskMasterAsync(mPmTaskMaster);
        }
        
        public bool DelPmTaskMasters(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelPmTaskMasters(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelPmTaskMastersAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelPmTaskMastersAsync(Ids);
        }
        
        public bool DelPmTaskMaster(string Id) {
            return base.Channel.DelPmTaskMaster(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelPmTaskMasterAsync(string Id) {
            return base.Channel.DelPmTaskMasterAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.PmTaskMaster> GetPmTaskMasters(string sWhere) {
            return base.Channel.GetPmTaskMasters(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.PmTaskMaster>> GetPmTaskMastersAsync(string sWhere) {
            return base.Channel.GetPmTaskMastersAsync(sWhere);
        }
        
        public BFM.ContractModel.PmTaskMaster GetPmTaskMasterById(string Id) {
            return base.Channel.GetPmTaskMasterById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.PmTaskMaster> GetPmTaskMasterByIdAsync(string Id) {
            return base.Channel.GetPmTaskMasterByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.PmTaskLine> GetPmTaskLineByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetPmTaskLineByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.PmTaskLine>> GetPmTaskLineByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetPmTaskLineByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetPmTaskLineCount(string sWhere) {
            return base.Channel.GetPmTaskLineCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetPmTaskLineCountAsync(string sWhere) {
            return base.Channel.GetPmTaskLineCountAsync(sWhere);
        }
        
        public bool AddPmTaskLine(BFM.ContractModel.PmTaskLine mPmTaskLine) {
            return base.Channel.AddPmTaskLine(mPmTaskLine);
        }
        
        public System.Threading.Tasks.Task<bool> AddPmTaskLineAsync(BFM.ContractModel.PmTaskLine mPmTaskLine) {
            return base.Channel.AddPmTaskLineAsync(mPmTaskLine);
        }
        
        public bool UpdatePmTaskLine(BFM.ContractModel.PmTaskLine mPmTaskLine) {
            return base.Channel.UpdatePmTaskLine(mPmTaskLine);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePmTaskLineAsync(BFM.ContractModel.PmTaskLine mPmTaskLine) {
            return base.Channel.UpdatePmTaskLineAsync(mPmTaskLine);
        }
        
        public bool DelPmTaskLines(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelPmTaskLines(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelPmTaskLinesAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelPmTaskLinesAsync(Ids);
        }
        
        public bool DelPmTaskLine(string Id) {
            return base.Channel.DelPmTaskLine(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelPmTaskLineAsync(string Id) {
            return base.Channel.DelPmTaskLineAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.PmTaskLine> GetPmTaskLines(string sWhere) {
            return base.Channel.GetPmTaskLines(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.PmTaskLine>> GetPmTaskLinesAsync(string sWhere) {
            return base.Channel.GetPmTaskLinesAsync(sWhere);
        }
        
        public BFM.ContractModel.PmTaskLine GetPmTaskLineById(string Id) {
            return base.Channel.GetPmTaskLineById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.PmTaskLine> GetPmTaskLineByIdAsync(string Id) {
            return base.Channel.GetPmTaskLineByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.MesJobOrder> GetMesJobOrderByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetMesJobOrderByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.MesJobOrder>> GetMesJobOrderByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetMesJobOrderByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetMesJobOrderCount(string sWhere) {
            return base.Channel.GetMesJobOrderCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetMesJobOrderCountAsync(string sWhere) {
            return base.Channel.GetMesJobOrderCountAsync(sWhere);
        }
        
        public bool AddMesJobOrder(BFM.ContractModel.MesJobOrder mMesJobOrder) {
            return base.Channel.AddMesJobOrder(mMesJobOrder);
        }
        
        public System.Threading.Tasks.Task<bool> AddMesJobOrderAsync(BFM.ContractModel.MesJobOrder mMesJobOrder) {
            return base.Channel.AddMesJobOrderAsync(mMesJobOrder);
        }
        
        public bool UpdateMesJobOrder(BFM.ContractModel.MesJobOrder mMesJobOrder) {
            return base.Channel.UpdateMesJobOrder(mMesJobOrder);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateMesJobOrderAsync(BFM.ContractModel.MesJobOrder mMesJobOrder) {
            return base.Channel.UpdateMesJobOrderAsync(mMesJobOrder);
        }
        
        public bool DelMesJobOrders(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelMesJobOrders(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelMesJobOrdersAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelMesJobOrdersAsync(Ids);
        }
        
        public bool DelMesJobOrder(string Id) {
            return base.Channel.DelMesJobOrder(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelMesJobOrderAsync(string Id) {
            return base.Channel.DelMesJobOrderAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.MesJobOrder> GetMesJobOrders(string sWhere) {
            return base.Channel.GetMesJobOrders(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.MesJobOrder>> GetMesJobOrdersAsync(string sWhere) {
            return base.Channel.GetMesJobOrdersAsync(sWhere);
        }
        
        public BFM.ContractModel.MesJobOrder GetMesJobOrderById(string Id) {
            return base.Channel.GetMesJobOrderById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.MesJobOrder> GetMesJobOrderByIdAsync(string Id) {
            return base.Channel.GetMesJobOrderByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.MesProcessCtrol> GetMesProcessCtrolByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetMesProcessCtrolByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.MesProcessCtrol>> GetMesProcessCtrolByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetMesProcessCtrolByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetMesProcessCtrolCount(string sWhere) {
            return base.Channel.GetMesProcessCtrolCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetMesProcessCtrolCountAsync(string sWhere) {
            return base.Channel.GetMesProcessCtrolCountAsync(sWhere);
        }
        
        public bool AddMesProcessCtrol(BFM.ContractModel.MesProcessCtrol mMesProcessCtrol) {
            return base.Channel.AddMesProcessCtrol(mMesProcessCtrol);
        }
        
        public System.Threading.Tasks.Task<bool> AddMesProcessCtrolAsync(BFM.ContractModel.MesProcessCtrol mMesProcessCtrol) {
            return base.Channel.AddMesProcessCtrolAsync(mMesProcessCtrol);
        }
        
        public bool UpdateMesProcessCtrol(BFM.ContractModel.MesProcessCtrol mMesProcessCtrol) {
            return base.Channel.UpdateMesProcessCtrol(mMesProcessCtrol);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateMesProcessCtrolAsync(BFM.ContractModel.MesProcessCtrol mMesProcessCtrol) {
            return base.Channel.UpdateMesProcessCtrolAsync(mMesProcessCtrol);
        }
        
        public bool DelMesProcessCtrols(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelMesProcessCtrols(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelMesProcessCtrolsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelMesProcessCtrolsAsync(Ids);
        }
        
        public bool DelMesProcessCtrol(string Id) {
            return base.Channel.DelMesProcessCtrol(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelMesProcessCtrolAsync(string Id) {
            return base.Channel.DelMesProcessCtrolAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.MesProcessCtrol> GetMesProcessCtrols(string sWhere) {
            return base.Channel.GetMesProcessCtrols(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.MesProcessCtrol>> GetMesProcessCtrolsAsync(string sWhere) {
            return base.Channel.GetMesProcessCtrolsAsync(sWhere);
        }
        
        public BFM.ContractModel.MesProcessCtrol GetMesProcessCtrolById(string Id) {
            return base.Channel.GetMesProcessCtrolById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.MesProcessCtrol> GetMesProcessCtrolByIdAsync(string Id) {
            return base.Channel.GetMesProcessCtrolByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.TestEFCodeFirst> GetTestEFCodeFirstByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetTestEFCodeFirstByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.TestEFCodeFirst>> GetTestEFCodeFirstByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetTestEFCodeFirstByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetTestEFCodeFirstCount(string sWhere) {
            return base.Channel.GetTestEFCodeFirstCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetTestEFCodeFirstCountAsync(string sWhere) {
            return base.Channel.GetTestEFCodeFirstCountAsync(sWhere);
        }
        
        public bool AddTestEFCodeFirst(BFM.ContractModel.TestEFCodeFirst mTestEFCodeFirst) {
            return base.Channel.AddTestEFCodeFirst(mTestEFCodeFirst);
        }
        
        public System.Threading.Tasks.Task<bool> AddTestEFCodeFirstAsync(BFM.ContractModel.TestEFCodeFirst mTestEFCodeFirst) {
            return base.Channel.AddTestEFCodeFirstAsync(mTestEFCodeFirst);
        }
        
        public bool UpdateTestEFCodeFirst(BFM.ContractModel.TestEFCodeFirst mTestEFCodeFirst) {
            return base.Channel.UpdateTestEFCodeFirst(mTestEFCodeFirst);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateTestEFCodeFirstAsync(BFM.ContractModel.TestEFCodeFirst mTestEFCodeFirst) {
            return base.Channel.UpdateTestEFCodeFirstAsync(mTestEFCodeFirst);
        }
        
        public bool DelTestEFCodeFirsts(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelTestEFCodeFirsts(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelTestEFCodeFirstsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelTestEFCodeFirstsAsync(Ids);
        }
        
        public bool DelTestEFCodeFirst(string Id) {
            return base.Channel.DelTestEFCodeFirst(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelTestEFCodeFirstAsync(string Id) {
            return base.Channel.DelTestEFCodeFirstAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.TestEFCodeFirst> GetTestEFCodeFirsts(string sWhere) {
            return base.Channel.GetTestEFCodeFirsts(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.TestEFCodeFirst>> GetTestEFCodeFirstsAsync(string sWhere) {
            return base.Channel.GetTestEFCodeFirstsAsync(sWhere);
        }
        
        public BFM.ContractModel.TestEFCodeFirst GetTestEFCodeFirstById(string Id) {
            return base.Channel.GetTestEFCodeFirstById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.TestEFCodeFirst> GetTestEFCodeFirstByIdAsync(string Id) {
            return base.Channel.GetTestEFCodeFirstByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.MesProductProcess> GetMesProductProcessByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetMesProductProcessByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.MesProductProcess>> GetMesProductProcessByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetMesProductProcessByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetMesProductProcessCount(string sWhere) {
            return base.Channel.GetMesProductProcessCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetMesProductProcessCountAsync(string sWhere) {
            return base.Channel.GetMesProductProcessCountAsync(sWhere);
        }
        
        public bool AddMesProductProcess(BFM.ContractModel.MesProductProcess mMesProductProcess) {
            return base.Channel.AddMesProductProcess(mMesProductProcess);
        }
        
        public System.Threading.Tasks.Task<bool> AddMesProductProcessAsync(BFM.ContractModel.MesProductProcess mMesProductProcess) {
            return base.Channel.AddMesProductProcessAsync(mMesProductProcess);
        }
        
        public bool UpdateMesProductProcess(BFM.ContractModel.MesProductProcess mMesProductProcess) {
            return base.Channel.UpdateMesProductProcess(mMesProductProcess);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateMesProductProcessAsync(BFM.ContractModel.MesProductProcess mMesProductProcess) {
            return base.Channel.UpdateMesProductProcessAsync(mMesProductProcess);
        }
        
        public bool DelMesProductProcesss(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelMesProductProcesss(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelMesProductProcesssAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelMesProductProcesssAsync(Ids);
        }
        
        public bool DelMesProductProcess(string Id) {
            return base.Channel.DelMesProductProcess(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelMesProductProcessAsync(string Id) {
            return base.Channel.DelMesProductProcessAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.MesProductProcess> GetMesProductProcesss(string sWhere) {
            return base.Channel.GetMesProductProcesss(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.MesProductProcess>> GetMesProductProcesssAsync(string sWhere) {
            return base.Channel.GetMesProductProcesssAsync(sWhere);
        }
        
        public BFM.ContractModel.MesProductProcess GetMesProductProcessById(string Id) {
            return base.Channel.GetMesProductProcessById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.MesProductProcess> GetMesProductProcessByIdAsync(string Id) {
            return base.Channel.GetMesProductProcessByIdAsync(Id);
        }
    }
}
