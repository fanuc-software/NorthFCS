//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BFM.Server.DataAsset.FMSService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://fanuc.com.cn/", ConfigurationName="FMSService.IFMSService")]
    public interface IFMSService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsAssetCommParamByPage", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsAssetCommParamByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.FmsAssetCommParam> GetFmsAssetCommParamByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsAssetCommParamByPage", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsAssetCommParamByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsAssetCommParam>> GetFmsAssetCommParamByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsAssetCommParamCount", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsAssetCommParamCountResponse")]
        int GetFmsAssetCommParamCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsAssetCommParamCount", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsAssetCommParamCountResponse")]
        System.Threading.Tasks.Task<int> GetFmsAssetCommParamCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/AddFmsAssetCommParam", ReplyAction="http://fanuc.com.cn/IFMSService/AddFmsAssetCommParamResponse")]
        bool AddFmsAssetCommParam(BFM.ContractModel.FmsAssetCommParam mFmsAssetCommParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/AddFmsAssetCommParam", ReplyAction="http://fanuc.com.cn/IFMSService/AddFmsAssetCommParamResponse")]
        System.Threading.Tasks.Task<bool> AddFmsAssetCommParamAsync(BFM.ContractModel.FmsAssetCommParam mFmsAssetCommParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/UpdateFmsAssetCommParam", ReplyAction="http://fanuc.com.cn/IFMSService/UpdateFmsAssetCommParamResponse")]
        bool UpdateFmsAssetCommParam(BFM.ContractModel.FmsAssetCommParam mFmsAssetCommParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/UpdateFmsAssetCommParam", ReplyAction="http://fanuc.com.cn/IFMSService/UpdateFmsAssetCommParamResponse")]
        System.Threading.Tasks.Task<bool> UpdateFmsAssetCommParamAsync(BFM.ContractModel.FmsAssetCommParam mFmsAssetCommParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsAssetCommParams", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsAssetCommParamsResponse")]
        bool DelFmsAssetCommParams(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsAssetCommParams", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsAssetCommParamsResponse")]
        System.Threading.Tasks.Task<bool> DelFmsAssetCommParamsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsAssetCommParam", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsAssetCommParamResponse")]
        bool DelFmsAssetCommParam(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsAssetCommParam", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsAssetCommParamResponse")]
        System.Threading.Tasks.Task<bool> DelFmsAssetCommParamAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsAssetCommParams", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsAssetCommParamsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.FmsAssetCommParam> GetFmsAssetCommParams(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsAssetCommParams", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsAssetCommParamsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsAssetCommParam>> GetFmsAssetCommParamsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsAssetCommParamById", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsAssetCommParamByIdResponse")]
        BFM.ContractModel.FmsAssetCommParam GetFmsAssetCommParamById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsAssetCommParamById", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsAssetCommParamByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.FmsAssetCommParam> GetFmsAssetCommParamByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsAssetTagSettingByPage", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsAssetTagSettingByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.FmsAssetTagSetting> GetFmsAssetTagSettingByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsAssetTagSettingByPage", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsAssetTagSettingByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsAssetTagSetting>> GetFmsAssetTagSettingByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsAssetTagSettingCount", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsAssetTagSettingCountResponse")]
        int GetFmsAssetTagSettingCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsAssetTagSettingCount", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsAssetTagSettingCountResponse")]
        System.Threading.Tasks.Task<int> GetFmsAssetTagSettingCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/AddFmsAssetTagSetting", ReplyAction="http://fanuc.com.cn/IFMSService/AddFmsAssetTagSettingResponse")]
        bool AddFmsAssetTagSetting(BFM.ContractModel.FmsAssetTagSetting mFmsAssetTagSetting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/AddFmsAssetTagSetting", ReplyAction="http://fanuc.com.cn/IFMSService/AddFmsAssetTagSettingResponse")]
        System.Threading.Tasks.Task<bool> AddFmsAssetTagSettingAsync(BFM.ContractModel.FmsAssetTagSetting mFmsAssetTagSetting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/UpdateFmsAssetTagSetting", ReplyAction="http://fanuc.com.cn/IFMSService/UpdateFmsAssetTagSettingResponse")]
        bool UpdateFmsAssetTagSetting(BFM.ContractModel.FmsAssetTagSetting mFmsAssetTagSetting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/UpdateFmsAssetTagSetting", ReplyAction="http://fanuc.com.cn/IFMSService/UpdateFmsAssetTagSettingResponse")]
        System.Threading.Tasks.Task<bool> UpdateFmsAssetTagSettingAsync(BFM.ContractModel.FmsAssetTagSetting mFmsAssetTagSetting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsAssetTagSettings", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsAssetTagSettingsResponse")]
        bool DelFmsAssetTagSettings(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsAssetTagSettings", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsAssetTagSettingsResponse")]
        System.Threading.Tasks.Task<bool> DelFmsAssetTagSettingsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsAssetTagSetting", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsAssetTagSettingResponse")]
        bool DelFmsAssetTagSetting(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsAssetTagSetting", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsAssetTagSettingResponse")]
        System.Threading.Tasks.Task<bool> DelFmsAssetTagSettingAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsAssetTagSettings", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsAssetTagSettingsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.FmsAssetTagSetting> GetFmsAssetTagSettings(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsAssetTagSettings", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsAssetTagSettingsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsAssetTagSetting>> GetFmsAssetTagSettingsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsAssetTagSettingById", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsAssetTagSettingByIdResponse")]
        BFM.ContractModel.FmsAssetTagSetting GetFmsAssetTagSettingById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsAssetTagSettingById", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsAssetTagSettingByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.FmsAssetTagSetting> GetFmsAssetTagSettingByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsStateResultRecordByPage", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsStateResultRecordByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.FmsStateResultRecord> GetFmsStateResultRecordByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsStateResultRecordByPage", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsStateResultRecordByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsStateResultRecord>> GetFmsStateResultRecordByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsStateResultRecordCount", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsStateResultRecordCountResponse")]
        int GetFmsStateResultRecordCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsStateResultRecordCount", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsStateResultRecordCountResponse")]
        System.Threading.Tasks.Task<int> GetFmsStateResultRecordCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/AddFmsStateResultRecord", ReplyAction="http://fanuc.com.cn/IFMSService/AddFmsStateResultRecordResponse")]
        bool AddFmsStateResultRecord(BFM.ContractModel.FmsStateResultRecord mFmsStateResultRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/AddFmsStateResultRecord", ReplyAction="http://fanuc.com.cn/IFMSService/AddFmsStateResultRecordResponse")]
        System.Threading.Tasks.Task<bool> AddFmsStateResultRecordAsync(BFM.ContractModel.FmsStateResultRecord mFmsStateResultRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/UpdateFmsStateResultRecord", ReplyAction="http://fanuc.com.cn/IFMSService/UpdateFmsStateResultRecordResponse")]
        bool UpdateFmsStateResultRecord(BFM.ContractModel.FmsStateResultRecord mFmsStateResultRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/UpdateFmsStateResultRecord", ReplyAction="http://fanuc.com.cn/IFMSService/UpdateFmsStateResultRecordResponse")]
        System.Threading.Tasks.Task<bool> UpdateFmsStateResultRecordAsync(BFM.ContractModel.FmsStateResultRecord mFmsStateResultRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsStateResultRecords", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsStateResultRecordsResponse")]
        bool DelFmsStateResultRecords(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsStateResultRecords", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsStateResultRecordsResponse")]
        System.Threading.Tasks.Task<bool> DelFmsStateResultRecordsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsStateResultRecord", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsStateResultRecordResponse")]
        bool DelFmsStateResultRecord(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsStateResultRecord", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsStateResultRecordResponse")]
        System.Threading.Tasks.Task<bool> DelFmsStateResultRecordAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsStateResultRecords", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsStateResultRecordsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.FmsStateResultRecord> GetFmsStateResultRecords(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsStateResultRecords", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsStateResultRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsStateResultRecord>> GetFmsStateResultRecordsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsStateResultRecordById", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsStateResultRecordByIdResponse")]
        BFM.ContractModel.FmsStateResultRecord GetFmsStateResultRecordById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsStateResultRecordById", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsStateResultRecordByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.FmsStateResultRecord> GetFmsStateResultRecordByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsSamplingRecordByPage", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsSamplingRecordByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.FmsSamplingRecord> GetFmsSamplingRecordByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsSamplingRecordByPage", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsSamplingRecordByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsSamplingRecord>> GetFmsSamplingRecordByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsSamplingRecordCount", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsSamplingRecordCountResponse")]
        int GetFmsSamplingRecordCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsSamplingRecordCount", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsSamplingRecordCountResponse")]
        System.Threading.Tasks.Task<int> GetFmsSamplingRecordCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/AddFmsSamplingRecord", ReplyAction="http://fanuc.com.cn/IFMSService/AddFmsSamplingRecordResponse")]
        bool AddFmsSamplingRecord(BFM.ContractModel.FmsSamplingRecord mFmsSamplingRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/AddFmsSamplingRecord", ReplyAction="http://fanuc.com.cn/IFMSService/AddFmsSamplingRecordResponse")]
        System.Threading.Tasks.Task<bool> AddFmsSamplingRecordAsync(BFM.ContractModel.FmsSamplingRecord mFmsSamplingRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/UpdateFmsSamplingRecord", ReplyAction="http://fanuc.com.cn/IFMSService/UpdateFmsSamplingRecordResponse")]
        bool UpdateFmsSamplingRecord(BFM.ContractModel.FmsSamplingRecord mFmsSamplingRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/UpdateFmsSamplingRecord", ReplyAction="http://fanuc.com.cn/IFMSService/UpdateFmsSamplingRecordResponse")]
        System.Threading.Tasks.Task<bool> UpdateFmsSamplingRecordAsync(BFM.ContractModel.FmsSamplingRecord mFmsSamplingRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsSamplingRecords", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsSamplingRecordsResponse")]
        bool DelFmsSamplingRecords(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsSamplingRecords", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsSamplingRecordsResponse")]
        System.Threading.Tasks.Task<bool> DelFmsSamplingRecordsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsSamplingRecord", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsSamplingRecordResponse")]
        bool DelFmsSamplingRecord(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsSamplingRecord", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsSamplingRecordResponse")]
        System.Threading.Tasks.Task<bool> DelFmsSamplingRecordAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsSamplingRecords", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsSamplingRecordsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.FmsSamplingRecord> GetFmsSamplingRecords(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsSamplingRecords", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsSamplingRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsSamplingRecord>> GetFmsSamplingRecordsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsSamplingRecordById", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsSamplingRecordByIdResponse")]
        BFM.ContractModel.FmsSamplingRecord GetFmsSamplingRecordById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsSamplingRecordById", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsSamplingRecordByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.FmsSamplingRecord> GetFmsSamplingRecordByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionControlByPage", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionControlByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.FmsActionControl> GetFmsActionControlByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionControlByPage", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionControlByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsActionControl>> GetFmsActionControlByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionControlCount", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionControlCountResponse")]
        int GetFmsActionControlCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionControlCount", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionControlCountResponse")]
        System.Threading.Tasks.Task<int> GetFmsActionControlCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/AddFmsActionControl", ReplyAction="http://fanuc.com.cn/IFMSService/AddFmsActionControlResponse")]
        bool AddFmsActionControl(BFM.ContractModel.FmsActionControl mFmsActionControl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/AddFmsActionControl", ReplyAction="http://fanuc.com.cn/IFMSService/AddFmsActionControlResponse")]
        System.Threading.Tasks.Task<bool> AddFmsActionControlAsync(BFM.ContractModel.FmsActionControl mFmsActionControl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/UpdateFmsActionControl", ReplyAction="http://fanuc.com.cn/IFMSService/UpdateFmsActionControlResponse")]
        bool UpdateFmsActionControl(BFM.ContractModel.FmsActionControl mFmsActionControl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/UpdateFmsActionControl", ReplyAction="http://fanuc.com.cn/IFMSService/UpdateFmsActionControlResponse")]
        System.Threading.Tasks.Task<bool> UpdateFmsActionControlAsync(BFM.ContractModel.FmsActionControl mFmsActionControl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsActionControls", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsActionControlsResponse")]
        bool DelFmsActionControls(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsActionControls", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsActionControlsResponse")]
        System.Threading.Tasks.Task<bool> DelFmsActionControlsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsActionControl", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsActionControlResponse")]
        bool DelFmsActionControl(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsActionControl", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsActionControlResponse")]
        System.Threading.Tasks.Task<bool> DelFmsActionControlAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionControls", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionControlsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.FmsActionControl> GetFmsActionControls(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionControls", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionControlsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsActionControl>> GetFmsActionControlsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionControlById", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionControlByIdResponse")]
        BFM.ContractModel.FmsActionControl GetFmsActionControlById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionControlById", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionControlByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.FmsActionControl> GetFmsActionControlByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsTagCalculationByPage", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsTagCalculationByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.FmsTagCalculation> GetFmsTagCalculationByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsTagCalculationByPage", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsTagCalculationByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsTagCalculation>> GetFmsTagCalculationByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsTagCalculationCount", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsTagCalculationCountResponse")]
        int GetFmsTagCalculationCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsTagCalculationCount", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsTagCalculationCountResponse")]
        System.Threading.Tasks.Task<int> GetFmsTagCalculationCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/AddFmsTagCalculation", ReplyAction="http://fanuc.com.cn/IFMSService/AddFmsTagCalculationResponse")]
        bool AddFmsTagCalculation(BFM.ContractModel.FmsTagCalculation mFmsTagCalculation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/AddFmsTagCalculation", ReplyAction="http://fanuc.com.cn/IFMSService/AddFmsTagCalculationResponse")]
        System.Threading.Tasks.Task<bool> AddFmsTagCalculationAsync(BFM.ContractModel.FmsTagCalculation mFmsTagCalculation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/UpdateFmsTagCalculation", ReplyAction="http://fanuc.com.cn/IFMSService/UpdateFmsTagCalculationResponse")]
        bool UpdateFmsTagCalculation(BFM.ContractModel.FmsTagCalculation mFmsTagCalculation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/UpdateFmsTagCalculation", ReplyAction="http://fanuc.com.cn/IFMSService/UpdateFmsTagCalculationResponse")]
        System.Threading.Tasks.Task<bool> UpdateFmsTagCalculationAsync(BFM.ContractModel.FmsTagCalculation mFmsTagCalculation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsTagCalculations", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsTagCalculationsResponse")]
        bool DelFmsTagCalculations(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsTagCalculations", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsTagCalculationsResponse")]
        System.Threading.Tasks.Task<bool> DelFmsTagCalculationsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsTagCalculation", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsTagCalculationResponse")]
        bool DelFmsTagCalculation(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsTagCalculation", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsTagCalculationResponse")]
        System.Threading.Tasks.Task<bool> DelFmsTagCalculationAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsTagCalculations", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsTagCalculationsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.FmsTagCalculation> GetFmsTagCalculations(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsTagCalculations", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsTagCalculationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsTagCalculation>> GetFmsTagCalculationsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsTagCalculationById", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsTagCalculationByIdResponse")]
        BFM.ContractModel.FmsTagCalculation GetFmsTagCalculationById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsTagCalculationById", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsTagCalculationByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.FmsTagCalculation> GetFmsTagCalculationByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaMainByPage", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaMainByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.FmsActionFormulaMain> GetFmsActionFormulaMainByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaMainByPage", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaMainByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsActionFormulaMain>> GetFmsActionFormulaMainByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaMainCount", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaMainCountResponse")]
        int GetFmsActionFormulaMainCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaMainCount", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaMainCountResponse")]
        System.Threading.Tasks.Task<int> GetFmsActionFormulaMainCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/AddFmsActionFormulaMain", ReplyAction="http://fanuc.com.cn/IFMSService/AddFmsActionFormulaMainResponse")]
        bool AddFmsActionFormulaMain(BFM.ContractModel.FmsActionFormulaMain mFmsActionFormulaMain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/AddFmsActionFormulaMain", ReplyAction="http://fanuc.com.cn/IFMSService/AddFmsActionFormulaMainResponse")]
        System.Threading.Tasks.Task<bool> AddFmsActionFormulaMainAsync(BFM.ContractModel.FmsActionFormulaMain mFmsActionFormulaMain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/UpdateFmsActionFormulaMain", ReplyAction="http://fanuc.com.cn/IFMSService/UpdateFmsActionFormulaMainResponse")]
        bool UpdateFmsActionFormulaMain(BFM.ContractModel.FmsActionFormulaMain mFmsActionFormulaMain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/UpdateFmsActionFormulaMain", ReplyAction="http://fanuc.com.cn/IFMSService/UpdateFmsActionFormulaMainResponse")]
        System.Threading.Tasks.Task<bool> UpdateFmsActionFormulaMainAsync(BFM.ContractModel.FmsActionFormulaMain mFmsActionFormulaMain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsActionFormulaMains", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsActionFormulaMainsResponse")]
        bool DelFmsActionFormulaMains(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsActionFormulaMains", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsActionFormulaMainsResponse")]
        System.Threading.Tasks.Task<bool> DelFmsActionFormulaMainsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsActionFormulaMain", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsActionFormulaMainResponse")]
        bool DelFmsActionFormulaMain(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsActionFormulaMain", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsActionFormulaMainResponse")]
        System.Threading.Tasks.Task<bool> DelFmsActionFormulaMainAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaMains", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaMainsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.FmsActionFormulaMain> GetFmsActionFormulaMains(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaMains", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaMainsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsActionFormulaMain>> GetFmsActionFormulaMainsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaMainById", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaMainByIdResponse")]
        BFM.ContractModel.FmsActionFormulaMain GetFmsActionFormulaMainById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaMainById", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaMainByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.FmsActionFormulaMain> GetFmsActionFormulaMainByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaDetailByPage", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaDetailByPageResponse")]
        System.Collections.Generic.List<BFM.ContractModel.FmsActionFormulaDetail> GetFmsActionFormulaDetailByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaDetailByPage", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaDetailByPageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsActionFormulaDetail>> GetFmsActionFormulaDetailByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaDetailCount", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaDetailCountResponse")]
        int GetFmsActionFormulaDetailCount(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaDetailCount", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaDetailCountResponse")]
        System.Threading.Tasks.Task<int> GetFmsActionFormulaDetailCountAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/AddFmsActionFormulaDetail", ReplyAction="http://fanuc.com.cn/IFMSService/AddFmsActionFormulaDetailResponse")]
        bool AddFmsActionFormulaDetail(BFM.ContractModel.FmsActionFormulaDetail mFmsActionFormulaDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/AddFmsActionFormulaDetail", ReplyAction="http://fanuc.com.cn/IFMSService/AddFmsActionFormulaDetailResponse")]
        System.Threading.Tasks.Task<bool> AddFmsActionFormulaDetailAsync(BFM.ContractModel.FmsActionFormulaDetail mFmsActionFormulaDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/UpdateFmsActionFormulaDetail", ReplyAction="http://fanuc.com.cn/IFMSService/UpdateFmsActionFormulaDetailResponse")]
        bool UpdateFmsActionFormulaDetail(BFM.ContractModel.FmsActionFormulaDetail mFmsActionFormulaDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/UpdateFmsActionFormulaDetail", ReplyAction="http://fanuc.com.cn/IFMSService/UpdateFmsActionFormulaDetailResponse")]
        System.Threading.Tasks.Task<bool> UpdateFmsActionFormulaDetailAsync(BFM.ContractModel.FmsActionFormulaDetail mFmsActionFormulaDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsActionFormulaDetails", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsActionFormulaDetailsResponse")]
        bool DelFmsActionFormulaDetails(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsActionFormulaDetails", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsActionFormulaDetailsResponse")]
        System.Threading.Tasks.Task<bool> DelFmsActionFormulaDetailsAsync(System.Collections.Generic.List<string> Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsActionFormulaDetail", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsActionFormulaDetailResponse")]
        bool DelFmsActionFormulaDetail(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/DelFmsActionFormulaDetail", ReplyAction="http://fanuc.com.cn/IFMSService/DelFmsActionFormulaDetailResponse")]
        System.Threading.Tasks.Task<bool> DelFmsActionFormulaDetailAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaDetails", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaDetailsResponse")]
        System.Collections.Generic.List<BFM.ContractModel.FmsActionFormulaDetail> GetFmsActionFormulaDetails(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaDetails", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsActionFormulaDetail>> GetFmsActionFormulaDetailsAsync(string sWhere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaDetailById", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaDetailByIdResponse")]
        BFM.ContractModel.FmsActionFormulaDetail GetFmsActionFormulaDetailById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaDetailById", ReplyAction="http://fanuc.com.cn/IFMSService/GetFmsActionFormulaDetailByIdResponse")]
        System.Threading.Tasks.Task<BFM.ContractModel.FmsActionFormulaDetail> GetFmsActionFormulaDetailByIdAsync(string Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFMSServiceChannel : BFM.Server.DataAsset.FMSService.IFMSService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FMSServiceClient : System.ServiceModel.ClientBase<BFM.Server.DataAsset.FMSService.IFMSService>, BFM.Server.DataAsset.FMSService.IFMSService {
        
        public FMSServiceClient() {
        }
        
        public FMSServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FMSServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FMSServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FMSServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.FmsAssetCommParam> GetFmsAssetCommParamByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetFmsAssetCommParamByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsAssetCommParam>> GetFmsAssetCommParamByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetFmsAssetCommParamByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetFmsAssetCommParamCount(string sWhere) {
            return base.Channel.GetFmsAssetCommParamCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetFmsAssetCommParamCountAsync(string sWhere) {
            return base.Channel.GetFmsAssetCommParamCountAsync(sWhere);
        }
        
        public bool AddFmsAssetCommParam(BFM.ContractModel.FmsAssetCommParam mFmsAssetCommParam) {
            return base.Channel.AddFmsAssetCommParam(mFmsAssetCommParam);
        }
        
        public System.Threading.Tasks.Task<bool> AddFmsAssetCommParamAsync(BFM.ContractModel.FmsAssetCommParam mFmsAssetCommParam) {
            return base.Channel.AddFmsAssetCommParamAsync(mFmsAssetCommParam);
        }
        
        public bool UpdateFmsAssetCommParam(BFM.ContractModel.FmsAssetCommParam mFmsAssetCommParam) {
            return base.Channel.UpdateFmsAssetCommParam(mFmsAssetCommParam);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFmsAssetCommParamAsync(BFM.ContractModel.FmsAssetCommParam mFmsAssetCommParam) {
            return base.Channel.UpdateFmsAssetCommParamAsync(mFmsAssetCommParam);
        }
        
        public bool DelFmsAssetCommParams(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelFmsAssetCommParams(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelFmsAssetCommParamsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelFmsAssetCommParamsAsync(Ids);
        }
        
        public bool DelFmsAssetCommParam(string Id) {
            return base.Channel.DelFmsAssetCommParam(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelFmsAssetCommParamAsync(string Id) {
            return base.Channel.DelFmsAssetCommParamAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.FmsAssetCommParam> GetFmsAssetCommParams(string sWhere) {
            return base.Channel.GetFmsAssetCommParams(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsAssetCommParam>> GetFmsAssetCommParamsAsync(string sWhere) {
            return base.Channel.GetFmsAssetCommParamsAsync(sWhere);
        }
        
        public BFM.ContractModel.FmsAssetCommParam GetFmsAssetCommParamById(string Id) {
            return base.Channel.GetFmsAssetCommParamById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.FmsAssetCommParam> GetFmsAssetCommParamByIdAsync(string Id) {
            return base.Channel.GetFmsAssetCommParamByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.FmsAssetTagSetting> GetFmsAssetTagSettingByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetFmsAssetTagSettingByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsAssetTagSetting>> GetFmsAssetTagSettingByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetFmsAssetTagSettingByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetFmsAssetTagSettingCount(string sWhere) {
            return base.Channel.GetFmsAssetTagSettingCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetFmsAssetTagSettingCountAsync(string sWhere) {
            return base.Channel.GetFmsAssetTagSettingCountAsync(sWhere);
        }
        
        public bool AddFmsAssetTagSetting(BFM.ContractModel.FmsAssetTagSetting mFmsAssetTagSetting) {
            return base.Channel.AddFmsAssetTagSetting(mFmsAssetTagSetting);
        }
        
        public System.Threading.Tasks.Task<bool> AddFmsAssetTagSettingAsync(BFM.ContractModel.FmsAssetTagSetting mFmsAssetTagSetting) {
            return base.Channel.AddFmsAssetTagSettingAsync(mFmsAssetTagSetting);
        }
        
        public bool UpdateFmsAssetTagSetting(BFM.ContractModel.FmsAssetTagSetting mFmsAssetTagSetting) {
            return base.Channel.UpdateFmsAssetTagSetting(mFmsAssetTagSetting);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFmsAssetTagSettingAsync(BFM.ContractModel.FmsAssetTagSetting mFmsAssetTagSetting) {
            return base.Channel.UpdateFmsAssetTagSettingAsync(mFmsAssetTagSetting);
        }
        
        public bool DelFmsAssetTagSettings(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelFmsAssetTagSettings(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelFmsAssetTagSettingsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelFmsAssetTagSettingsAsync(Ids);
        }
        
        public bool DelFmsAssetTagSetting(string Id) {
            return base.Channel.DelFmsAssetTagSetting(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelFmsAssetTagSettingAsync(string Id) {
            return base.Channel.DelFmsAssetTagSettingAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.FmsAssetTagSetting> GetFmsAssetTagSettings(string sWhere) {
            return base.Channel.GetFmsAssetTagSettings(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsAssetTagSetting>> GetFmsAssetTagSettingsAsync(string sWhere) {
            return base.Channel.GetFmsAssetTagSettingsAsync(sWhere);
        }
        
        public BFM.ContractModel.FmsAssetTagSetting GetFmsAssetTagSettingById(string Id) {
            return base.Channel.GetFmsAssetTagSettingById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.FmsAssetTagSetting> GetFmsAssetTagSettingByIdAsync(string Id) {
            return base.Channel.GetFmsAssetTagSettingByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.FmsStateResultRecord> GetFmsStateResultRecordByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetFmsStateResultRecordByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsStateResultRecord>> GetFmsStateResultRecordByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetFmsStateResultRecordByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetFmsStateResultRecordCount(string sWhere) {
            return base.Channel.GetFmsStateResultRecordCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetFmsStateResultRecordCountAsync(string sWhere) {
            return base.Channel.GetFmsStateResultRecordCountAsync(sWhere);
        }
        
        public bool AddFmsStateResultRecord(BFM.ContractModel.FmsStateResultRecord mFmsStateResultRecord) {
            return base.Channel.AddFmsStateResultRecord(mFmsStateResultRecord);
        }
        
        public System.Threading.Tasks.Task<bool> AddFmsStateResultRecordAsync(BFM.ContractModel.FmsStateResultRecord mFmsStateResultRecord) {
            return base.Channel.AddFmsStateResultRecordAsync(mFmsStateResultRecord);
        }
        
        public bool UpdateFmsStateResultRecord(BFM.ContractModel.FmsStateResultRecord mFmsStateResultRecord) {
            return base.Channel.UpdateFmsStateResultRecord(mFmsStateResultRecord);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFmsStateResultRecordAsync(BFM.ContractModel.FmsStateResultRecord mFmsStateResultRecord) {
            return base.Channel.UpdateFmsStateResultRecordAsync(mFmsStateResultRecord);
        }
        
        public bool DelFmsStateResultRecords(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelFmsStateResultRecords(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelFmsStateResultRecordsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelFmsStateResultRecordsAsync(Ids);
        }
        
        public bool DelFmsStateResultRecord(string Id) {
            return base.Channel.DelFmsStateResultRecord(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelFmsStateResultRecordAsync(string Id) {
            return base.Channel.DelFmsStateResultRecordAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.FmsStateResultRecord> GetFmsStateResultRecords(string sWhere) {
            return base.Channel.GetFmsStateResultRecords(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsStateResultRecord>> GetFmsStateResultRecordsAsync(string sWhere) {
            return base.Channel.GetFmsStateResultRecordsAsync(sWhere);
        }
        
        public BFM.ContractModel.FmsStateResultRecord GetFmsStateResultRecordById(string Id) {
            return base.Channel.GetFmsStateResultRecordById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.FmsStateResultRecord> GetFmsStateResultRecordByIdAsync(string Id) {
            return base.Channel.GetFmsStateResultRecordByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.FmsSamplingRecord> GetFmsSamplingRecordByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetFmsSamplingRecordByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsSamplingRecord>> GetFmsSamplingRecordByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetFmsSamplingRecordByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetFmsSamplingRecordCount(string sWhere) {
            return base.Channel.GetFmsSamplingRecordCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetFmsSamplingRecordCountAsync(string sWhere) {
            return base.Channel.GetFmsSamplingRecordCountAsync(sWhere);
        }
        
        public bool AddFmsSamplingRecord(BFM.ContractModel.FmsSamplingRecord mFmsSamplingRecord) {
            return base.Channel.AddFmsSamplingRecord(mFmsSamplingRecord);
        }
        
        public System.Threading.Tasks.Task<bool> AddFmsSamplingRecordAsync(BFM.ContractModel.FmsSamplingRecord mFmsSamplingRecord) {
            return base.Channel.AddFmsSamplingRecordAsync(mFmsSamplingRecord);
        }
        
        public bool UpdateFmsSamplingRecord(BFM.ContractModel.FmsSamplingRecord mFmsSamplingRecord) {
            return base.Channel.UpdateFmsSamplingRecord(mFmsSamplingRecord);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFmsSamplingRecordAsync(BFM.ContractModel.FmsSamplingRecord mFmsSamplingRecord) {
            return base.Channel.UpdateFmsSamplingRecordAsync(mFmsSamplingRecord);
        }
        
        public bool DelFmsSamplingRecords(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelFmsSamplingRecords(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelFmsSamplingRecordsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelFmsSamplingRecordsAsync(Ids);
        }
        
        public bool DelFmsSamplingRecord(string Id) {
            return base.Channel.DelFmsSamplingRecord(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelFmsSamplingRecordAsync(string Id) {
            return base.Channel.DelFmsSamplingRecordAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.FmsSamplingRecord> GetFmsSamplingRecords(string sWhere) {
            return base.Channel.GetFmsSamplingRecords(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsSamplingRecord>> GetFmsSamplingRecordsAsync(string sWhere) {
            return base.Channel.GetFmsSamplingRecordsAsync(sWhere);
        }
        
        public BFM.ContractModel.FmsSamplingRecord GetFmsSamplingRecordById(string Id) {
            return base.Channel.GetFmsSamplingRecordById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.FmsSamplingRecord> GetFmsSamplingRecordByIdAsync(string Id) {
            return base.Channel.GetFmsSamplingRecordByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.FmsActionControl> GetFmsActionControlByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetFmsActionControlByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsActionControl>> GetFmsActionControlByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetFmsActionControlByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetFmsActionControlCount(string sWhere) {
            return base.Channel.GetFmsActionControlCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetFmsActionControlCountAsync(string sWhere) {
            return base.Channel.GetFmsActionControlCountAsync(sWhere);
        }
        
        public bool AddFmsActionControl(BFM.ContractModel.FmsActionControl mFmsActionControl) {
            return base.Channel.AddFmsActionControl(mFmsActionControl);
        }
        
        public System.Threading.Tasks.Task<bool> AddFmsActionControlAsync(BFM.ContractModel.FmsActionControl mFmsActionControl) {
            return base.Channel.AddFmsActionControlAsync(mFmsActionControl);
        }
        
        public bool UpdateFmsActionControl(BFM.ContractModel.FmsActionControl mFmsActionControl) {
            return base.Channel.UpdateFmsActionControl(mFmsActionControl);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFmsActionControlAsync(BFM.ContractModel.FmsActionControl mFmsActionControl) {
            return base.Channel.UpdateFmsActionControlAsync(mFmsActionControl);
        }
        
        public bool DelFmsActionControls(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelFmsActionControls(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelFmsActionControlsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelFmsActionControlsAsync(Ids);
        }
        
        public bool DelFmsActionControl(string Id) {
            return base.Channel.DelFmsActionControl(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelFmsActionControlAsync(string Id) {
            return base.Channel.DelFmsActionControlAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.FmsActionControl> GetFmsActionControls(string sWhere) {
            return base.Channel.GetFmsActionControls(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsActionControl>> GetFmsActionControlsAsync(string sWhere) {
            return base.Channel.GetFmsActionControlsAsync(sWhere);
        }
        
        public BFM.ContractModel.FmsActionControl GetFmsActionControlById(string Id) {
            return base.Channel.GetFmsActionControlById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.FmsActionControl> GetFmsActionControlByIdAsync(string Id) {
            return base.Channel.GetFmsActionControlByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.FmsTagCalculation> GetFmsTagCalculationByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetFmsTagCalculationByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsTagCalculation>> GetFmsTagCalculationByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetFmsTagCalculationByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetFmsTagCalculationCount(string sWhere) {
            return base.Channel.GetFmsTagCalculationCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetFmsTagCalculationCountAsync(string sWhere) {
            return base.Channel.GetFmsTagCalculationCountAsync(sWhere);
        }
        
        public bool AddFmsTagCalculation(BFM.ContractModel.FmsTagCalculation mFmsTagCalculation) {
            return base.Channel.AddFmsTagCalculation(mFmsTagCalculation);
        }
        
        public System.Threading.Tasks.Task<bool> AddFmsTagCalculationAsync(BFM.ContractModel.FmsTagCalculation mFmsTagCalculation) {
            return base.Channel.AddFmsTagCalculationAsync(mFmsTagCalculation);
        }
        
        public bool UpdateFmsTagCalculation(BFM.ContractModel.FmsTagCalculation mFmsTagCalculation) {
            return base.Channel.UpdateFmsTagCalculation(mFmsTagCalculation);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFmsTagCalculationAsync(BFM.ContractModel.FmsTagCalculation mFmsTagCalculation) {
            return base.Channel.UpdateFmsTagCalculationAsync(mFmsTagCalculation);
        }
        
        public bool DelFmsTagCalculations(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelFmsTagCalculations(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelFmsTagCalculationsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelFmsTagCalculationsAsync(Ids);
        }
        
        public bool DelFmsTagCalculation(string Id) {
            return base.Channel.DelFmsTagCalculation(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelFmsTagCalculationAsync(string Id) {
            return base.Channel.DelFmsTagCalculationAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.FmsTagCalculation> GetFmsTagCalculations(string sWhere) {
            return base.Channel.GetFmsTagCalculations(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsTagCalculation>> GetFmsTagCalculationsAsync(string sWhere) {
            return base.Channel.GetFmsTagCalculationsAsync(sWhere);
        }
        
        public BFM.ContractModel.FmsTagCalculation GetFmsTagCalculationById(string Id) {
            return base.Channel.GetFmsTagCalculationById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.FmsTagCalculation> GetFmsTagCalculationByIdAsync(string Id) {
            return base.Channel.GetFmsTagCalculationByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.FmsActionFormulaMain> GetFmsActionFormulaMainByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetFmsActionFormulaMainByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsActionFormulaMain>> GetFmsActionFormulaMainByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetFmsActionFormulaMainByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetFmsActionFormulaMainCount(string sWhere) {
            return base.Channel.GetFmsActionFormulaMainCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetFmsActionFormulaMainCountAsync(string sWhere) {
            return base.Channel.GetFmsActionFormulaMainCountAsync(sWhere);
        }
        
        public bool AddFmsActionFormulaMain(BFM.ContractModel.FmsActionFormulaMain mFmsActionFormulaMain) {
            return base.Channel.AddFmsActionFormulaMain(mFmsActionFormulaMain);
        }
        
        public System.Threading.Tasks.Task<bool> AddFmsActionFormulaMainAsync(BFM.ContractModel.FmsActionFormulaMain mFmsActionFormulaMain) {
            return base.Channel.AddFmsActionFormulaMainAsync(mFmsActionFormulaMain);
        }
        
        public bool UpdateFmsActionFormulaMain(BFM.ContractModel.FmsActionFormulaMain mFmsActionFormulaMain) {
            return base.Channel.UpdateFmsActionFormulaMain(mFmsActionFormulaMain);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFmsActionFormulaMainAsync(BFM.ContractModel.FmsActionFormulaMain mFmsActionFormulaMain) {
            return base.Channel.UpdateFmsActionFormulaMainAsync(mFmsActionFormulaMain);
        }
        
        public bool DelFmsActionFormulaMains(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelFmsActionFormulaMains(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelFmsActionFormulaMainsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelFmsActionFormulaMainsAsync(Ids);
        }
        
        public bool DelFmsActionFormulaMain(string Id) {
            return base.Channel.DelFmsActionFormulaMain(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelFmsActionFormulaMainAsync(string Id) {
            return base.Channel.DelFmsActionFormulaMainAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.FmsActionFormulaMain> GetFmsActionFormulaMains(string sWhere) {
            return base.Channel.GetFmsActionFormulaMains(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsActionFormulaMain>> GetFmsActionFormulaMainsAsync(string sWhere) {
            return base.Channel.GetFmsActionFormulaMainsAsync(sWhere);
        }
        
        public BFM.ContractModel.FmsActionFormulaMain GetFmsActionFormulaMainById(string Id) {
            return base.Channel.GetFmsActionFormulaMainById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.FmsActionFormulaMain> GetFmsActionFormulaMainByIdAsync(string Id) {
            return base.Channel.GetFmsActionFormulaMainByIdAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.FmsActionFormulaDetail> GetFmsActionFormulaDetailByPage(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetFmsActionFormulaDetailByPage(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsActionFormulaDetail>> GetFmsActionFormulaDetailByPageAsync(int pageSize, int pageIndex, bool isAsc, string orderField, string sWhere) {
            return base.Channel.GetFmsActionFormulaDetailByPageAsync(pageSize, pageIndex, isAsc, orderField, sWhere);
        }
        
        public int GetFmsActionFormulaDetailCount(string sWhere) {
            return base.Channel.GetFmsActionFormulaDetailCount(sWhere);
        }
        
        public System.Threading.Tasks.Task<int> GetFmsActionFormulaDetailCountAsync(string sWhere) {
            return base.Channel.GetFmsActionFormulaDetailCountAsync(sWhere);
        }
        
        public bool AddFmsActionFormulaDetail(BFM.ContractModel.FmsActionFormulaDetail mFmsActionFormulaDetail) {
            return base.Channel.AddFmsActionFormulaDetail(mFmsActionFormulaDetail);
        }
        
        public System.Threading.Tasks.Task<bool> AddFmsActionFormulaDetailAsync(BFM.ContractModel.FmsActionFormulaDetail mFmsActionFormulaDetail) {
            return base.Channel.AddFmsActionFormulaDetailAsync(mFmsActionFormulaDetail);
        }
        
        public bool UpdateFmsActionFormulaDetail(BFM.ContractModel.FmsActionFormulaDetail mFmsActionFormulaDetail) {
            return base.Channel.UpdateFmsActionFormulaDetail(mFmsActionFormulaDetail);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFmsActionFormulaDetailAsync(BFM.ContractModel.FmsActionFormulaDetail mFmsActionFormulaDetail) {
            return base.Channel.UpdateFmsActionFormulaDetailAsync(mFmsActionFormulaDetail);
        }
        
        public bool DelFmsActionFormulaDetails(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelFmsActionFormulaDetails(Ids);
        }
        
        public System.Threading.Tasks.Task<bool> DelFmsActionFormulaDetailsAsync(System.Collections.Generic.List<string> Ids) {
            return base.Channel.DelFmsActionFormulaDetailsAsync(Ids);
        }
        
        public bool DelFmsActionFormulaDetail(string Id) {
            return base.Channel.DelFmsActionFormulaDetail(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DelFmsActionFormulaDetailAsync(string Id) {
            return base.Channel.DelFmsActionFormulaDetailAsync(Id);
        }
        
        public System.Collections.Generic.List<BFM.ContractModel.FmsActionFormulaDetail> GetFmsActionFormulaDetails(string sWhere) {
            return base.Channel.GetFmsActionFormulaDetails(sWhere);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BFM.ContractModel.FmsActionFormulaDetail>> GetFmsActionFormulaDetailsAsync(string sWhere) {
            return base.Channel.GetFmsActionFormulaDetailsAsync(sWhere);
        }
        
        public BFM.ContractModel.FmsActionFormulaDetail GetFmsActionFormulaDetailById(string Id) {
            return base.Channel.GetFmsActionFormulaDetailById(Id);
        }
        
        public System.Threading.Tasks.Task<BFM.ContractModel.FmsActionFormulaDetail> GetFmsActionFormulaDetailByIdAsync(string Id) {
            return base.Channel.GetFmsActionFormulaDetailByIdAsync(Id);
        }
    }
}
