<UserControl
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        xmlns:controls="clr-namespace:BFM.WPF.Base.Controls;assembly=BFM.WPF.Base"
        x:Class="BFM.WPF.FMS.BasicData.VirtualTag.VirtualTagCalcu"
        mc:Ignorable="d"
        d:DesignHeight="260" d:DesignWidth="800" Loaded="UserControl_Loaded">

    <Grid>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="240"/>
            </Grid.ColumnDefinitions>

            <Border Visibility="{Binding Path=CalculationType, Converter={StaticResource ToVisibilityConverter}, ConverterParameter='1'}" Grid.Column="0" >
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="20"/>
                    </Grid.RowDefinitions>
                    <Label Content="逻辑表达式" HorizontalAlignment="Left" VerticalAlignment="Top" Width="88" Height="26" Margin="0,3,0,0" VerticalContentAlignment="Center"/>
                    <TextBox x:Name="TbLogicText" Margin="88,0,0.4,0" Focusable="True" Text="{Binding LogicText}" IsReadOnly="{Binding IsReadOnly}" 
                             VerticalScrollBarVisibility="Visible" AcceptsReturn="True" 
                             GotFocus="TbLogicText_GotFocus" PreviewKeyDown="TbLogicText_PreviewKeyDown" MouseDoubleClick="TbLogicText_MouseDoubleClick" VerticalContentAlignment="Top" TextWrapping="WrapWithOverflow" />
                    <Border Grid.Row="1">
                        <TextBlock Text="类似PLC的梯形图正在维护中"></TextBlock>
                    </Border>
                </Grid>
            </Border>

            <Border Visibility="{Binding Path=CalculationType, Converter={StaticResource ToVisibilityConverter}, ConverterParameter='2;3'}" Grid.Column="0" >
                <Grid >
                    <Label Content="运算公式" HorizontalAlignment="Left" Margin="0,101,0,0" VerticalAlignment="Top" Width="85" Height="30"/>
                    <TextBox x:Name="TbNormalCal" Margin="90,0,0.4,10" Text="{Binding NormalText}" IsReadOnly="{Binding IsReadOnly}" Focusable="True" VerticalScrollBarVisibility="Auto" VerticalContentAlignment="Top" AcceptsReturn="True" 
                             PreviewKeyDown="TbNormalCal_PreviewKeyDown" MouseDoubleClick="TbNormalCal_MouseDoubleClick" GotFocus="TbNormalCal_GotFocus" />
                </Grid>
            </Border>

            <Border Visibility="{Binding Path=CalculationType, Converter={StaticResource ToVisibilityConverter}, ConverterParameter='12;13'}" Grid.Column="0" >
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="条件" HorizontalAlignment="Left" VerticalAlignment="Top" Width="42" Height="26" Margin="10,3,0,0" VerticalContentAlignment="Center"/>
                    <TextBox x:Name="TbCondition" Margin="57,0,0,0" Focusable="True" Text="{Binding Condition}" IsReadOnly="{Binding IsReadOnly}" DataContext="{Binding SelectedItem, ElementName=gridTagItems}" VerticalScrollBarVisibility="Auto" VerticalContentAlignment="Center" AcceptsReturn="True" GotFocus="TbCondition_GotFocus" PreviewKeyDown="TbCondition_PreviewKeyDown" MouseDoubleClick="TbCondition_MouseDoubleClick" Height="30" VerticalAlignment="Top" />
                    <Label Content="结果" HorizontalAlignment="Left" VerticalAlignment="Top" Width="42" Height="26" Margin="9.8,3,0,0" Grid.Column="1" VerticalContentAlignment="Center"/>
                    <TextBox x:Name="TbResult" Margin="58,1,0,0" Focusable="True" Text="{Binding Result}" IsReadOnly="{Binding IsReadOnly}" DataContext="{Binding SelectedItem, ElementName=gridTagItems}" VerticalScrollBarVisibility="Auto" VerticalContentAlignment="Center" AcceptsReturn="True" Grid.Column="1" GotFocus="TbResult_GotFocus" PreviewKeyDown="TbResult_PreviewKeyDown" MouseDoubleClick="TbResult_MouseDoubleClick" Height="29" VerticalAlignment="Top" />
                    <dxg:GridControl x:Name="gridTagItems" SelectionMode="Row" ItemsSource="{Binding ConditionCals}" 
                                     FontSize="16" Margin="0,42,0,0.4" Grid.ColumnSpan="2" >
                        <dxg:GridControl.View>
                            <dxg:TableView ShowGroupPanel="False" AllowEditing="False" NavigationStyle="Row"/>
                        </dxg:GridControl.View>
                        <dxg:GridColumn FieldName="Condition" Header="条件" Width="200"/>
                        <dxg:GridColumn FieldName="Result" Header="结果" Width="80"/>
                        <dxg:GridColumn Header="操作" Width="80" x:Name="colOper">
                            <dxg:GridColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Button Grid.Column="0" Margin="2" Style="{x:Null}" Content="+" Click="BtnAdd_OnClick"/>
                                        <Button Grid.Column="1" Margin="2" Style="{x:Null}" Content="-" Click="BtnDel_OnClick"/>
                                    </Grid>
                                </DataTemplate>
                            </dxg:GridColumn.CellTemplate>
                        </dxg:GridColumn>
                    </dxg:GridControl>
                </Grid>
            </Border>

            <Border Visibility="{Binding Path=CalculationType, Converter={StaticResource ToVisibilityConverter}, ConverterParameter='21'}" Grid.Column="0" >
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="Tag点" HorizontalAlignment="Left" VerticalAlignment="Top" Width="60" Height="26" Margin="10,3,0,0" VerticalContentAlignment="Center"/>
                    <ComboBox x:Name="CmbArrayTags" ItemsSource="{Binding AllShowTags}" IsReadOnly="{Binding IsReadOnly}" SelectedValue="{Binding ArrayTagPKNO}"  DisplayMemberPath="Name" SelectedValuePath="Value" VerticalAlignment="Top" Height="27" Grid.Column="0" VerticalContentAlignment="Center" Margin="70,0,0,0"/>
                    <Label Content="序号" HorizontalAlignment="Left" VerticalAlignment="Top" Width="42" Height="26" Margin="9.8,3,0,0" Grid.Column="1" VerticalContentAlignment="Center"/>
                    <TextBox x:Name="TbArrayIndex" Margin="58,1,0,0" Focusable="True" Text="{Binding ArrayIndex}" IsReadOnly="{Binding IsReadOnly}" VerticalContentAlignment="Center" Grid.Column="1" GotFocus="TbResult_GotFocus" PreviewKeyDown="TbResult_PreviewKeyDown" MouseDoubleClick="TbResult_MouseDoubleClick" Height="29" VerticalAlignment="Top" />
                </Grid>
            </Border>

            <Border Visibility="{Binding Path=CalculationType, Converter={StaticResource ToVisibilityConverter}, ConverterParameter='100'}" Grid.Column="0" >
                <Grid >
                    <Label Content="C#脚本&#xD;&#xA;&#xD;&#xA;返回值为：&#xD;&#xA;string型" HorizontalAlignment="Left" Margin="0,95,0,0" VerticalAlignment="Top" Width="88" Height="155"/>
                    <TextBox x:Name="TbCSharpScript" Margin="88,0,0.4,10" Focusable="True" Text="{Binding CSharpText}" IsReadOnly="{Binding IsReadOnly}" 
                             VerticalScrollBarVisibility="Auto" VerticalContentAlignment="Top" AcceptsReturn="True" 
                             PreviewKeyDown="TbCSharpScript_PreviewKeyDown" MouseDoubleClick="TbCSharpScript_MouseDoubleClick" GotFocus="TbCSharpScript_GotFocus" />
                </Grid>
            </Border>

            <Label Content="插入Tag点 " HorizontalAlignment="Left" Margin="5.6,0,0,0" VerticalAlignment="Top" Height="29" Width="194" Grid.Column="1" VerticalContentAlignment="Center"/>
            <ComboBox x:Name="CmbTags" ItemsSource="{Binding AllShowTags}" IsReadOnly="{Binding IsReadOnly}"  DisplayMemberPath="Name" SelectedValuePath="Value" Margin="5.6,31,10,0" VerticalAlignment="Top" Height="27" Grid.Column="1" VerticalContentAlignment="Center"/>
            <controls:ImageButtonWithIcon Content="增加Tag点" Icon="/BFM.WPF.EAM;component/Images/1.ico" SelectedIcon="/BFM.WPF.EAM;component/Images/1.ico" IsEnabled="{Binding Path=IsReadOnly, Converter={StaticResource ToBoolConverter}, ConverterParameter='False'}" Margin="6.6,63,0,0" VerticalAlignment="Top" Height="45" Click="BtnAddTag_Click" Grid.Column="1" HorizontalAlignment="Left" Width="140"/>
            <controls:ImageButtonWithIcon Content="测试脚本" Icon="/BFM.WPF.EAM;component/Images/21.ico" SelectedIcon="/BFM.WPF.EAM;component/Images/21.ico" Margin="5.6,114,0,0" VerticalAlignment="Top" Height="45" Click="BtnTest_Click" Grid.Column="1" HorizontalAlignment="Left" Width="141"/>
            <Label Content="测试结果： " HorizontalAlignment="Left" Margin="374,179,0,0" VerticalAlignment="Top" Height="30" Width="87" VerticalContentAlignment="Center" Visibility="Collapsed"/>
            <TextBox x:Name="TbTestResult" IsReadOnly="True" HorizontalAlignment="Left" Focusable="True" Margin="444,180,0,0" VerticalAlignment="Top" Height="28" Width="125" Visibility="Collapsed"/>
            <Label Content="注意：所有Tag传入按照string型传入" HorizontalAlignment="Left" Margin="5,160,0,0" VerticalAlignment="Top" Height="30" Width="230" Grid.Column="1" VerticalContentAlignment="Center"/>
            <TextBox IsReadOnly="True" Focusable="True" Margin="5,190,10,0" VerticalAlignment="Top" Height="60" Grid.Column="1" Text="转Int: SafeConverter.SafeToInt&#xD;&#xA;转Double: SafeConverter.SafeToDouble&#xD;&#xA;转string: SafeConverter.SafeToStr" VerticalScrollBarVisibility="Visible"/>
        </Grid>
    </Grid>
</UserControl>
